import { LongTextTooltip, Shield } from '@redhat-cloud-services/frontend-components';
import { parseCvssScore, processDate } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';
import React from 'react';
import { Link } from 'react-router-dom';

export function createCveListByAccount(cveList) {
    let isLoading = cveList.isLoading;
    if (!isLoading) {
        let payload = cveList.payload.asMutable();

        let { data, meta, errors } = payload;

        data =
            data &&
            data.map(row => ({
                id: row.id,
                cells: [
                    <span key={row.id}>
                        <Link to={'/cves/' + row.attributes.synopsis}>{row.attributes.synopsis}</Link>
                    </span>,
                    <span key={row.id}>
                        <LongTextTooltip content={row.attributes.description} maxLength={180} entryDelay={1200} />
                    </span>,
                    <span key={row.id}>{processDate(row.attributes.public_date)}</span>,
                    <span key={row.id}>{parseCvssScore(row.attributes.cvss2_score, row.attributes.cvss3_score, true)}</span>,

                    <span key={row.id}>
                        <Shield impact={row.attributes.impact} hasLabel={true} />
                    </span>,

                    <span key={row.id}>{row.attributes.systems_affected.toString()}</span>
                ]
            }));
        return { data: data && data.asMutable(), meta, isLoading, errors };
    }

    return { data: [], meta: (cveList.payload && cveList.payload.meta) || {}, isLoading };
}
