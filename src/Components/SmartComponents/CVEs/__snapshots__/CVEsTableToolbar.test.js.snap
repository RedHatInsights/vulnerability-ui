// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CVEsTableToolbar Should render without errors 1`] = `
<injectIntl(CVEsTableToolbar)>
  <CVEsTableToolbar
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatDateToParts": [Function],
        "formatDisplayName": [Function],
        "formatList": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatNumberToParts": [Function],
        "formatPlural": [Function],
        "formatRelativeTime": [Function],
        "formatTime": [Function],
        "formatTimeToParts": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getDisplayNames": [Function],
          "getListFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralRules": [Function],
          "getRelativeTimeFormat": [Function],
        },
        "locale": "en",
        "messages": Object {
          "default.cancel": "Cancel",
          "default.delete": "Delete",
          "default.remove": "Remove",
          "default.save": "Save",
        },
        "onError": [Function],
        "textComponent": Symbol(react.fragment),
        "timeZone": undefined,
        "wrapRichTextChunksInFragment": undefined,
      }
    }
  >
    <CVEsTableToolbarWithContext
      apply={[Function]}
      context={
        Object {
          "cves": Object {
            "data": Array [
              Object {
                "attributes": Object {
                  "business_risk": "Not Defined",
                  "business_risk_id": 0,
                  "business_risk_text": null,
                  "cve_status_id": 2,
                  "cve_status_text": "testhello",
                  "cvss2_score": null,
                  "cvss3_score": "6.500",
                  "description": "A new domain bypass",
                  "impact": "Moderate",
                  "public_date": "2020-06-09T17:00:00+00:00",
                  "reporter": 1,
                  "rule": "testRule",
                  "status": "On-Hold",
                  "status_id": 2,
                  "status_text": "testhello",
                  "synopsis": "CVE-2020-0543",
                  "systems_affected": 1,
                },
                "id": "CVE-2019-6454",
                "type": "cve",
              },
            ],
            "isLoading": false,
            "meta": Object {
              "test": "test",
            },
          },
          "expandCveDescription": false,
          "methods": Object {
            "apply": [MockFunction],
            "downloadReport": [MockFunction],
            "openCves": [MockFunction],
            "selectCves": [MockFunction],
            "showBusinessRiskModal": [MockFunction],
            "showStatusModal": [MockFunction],
          },
          "openedCves": Array [],
          "params": Object {},
          "selectedCves": Array [],
        }
      }
      downloadReport={[Function]}
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatDateToParts": [Function],
          "formatDisplayName": [Function],
          "formatList": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatNumberToParts": [Function],
          "formatPlural": [Function],
          "formatRelativeTime": [Function],
          "formatTime": [Function],
          "formatTimeToParts": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getDisplayNames": [Function],
            "getListFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralRules": [Function],
            "getRelativeTimeFormat": [Function],
          },
          "locale": "en",
          "messages": Object {
            "default.cancel": "Cancel",
            "default.delete": "Delete",
            "default.remove": "Remove",
            "default.save": "Save",
          },
          "onError": [Function],
          "textComponent": Symbol(react.fragment),
          "timeZone": undefined,
          "wrapRichTextChunksInFragment": undefined,
        }
      }
      totalNumber={0}
    >
      <PrimaryToolbar
        actionsConfig={
          Object {
            "actions": Array [
              "",
              Object {
                "label": "Edit business risk",
                "onClick": [Function],
                "props": Object {
                  "isDisabled": true,
                },
              },
              Object {
                "label": "Edit status",
                "onClick": [Function],
                "props": Object {
                  "isDisabled": true,
                },
              },
              Object {
                "label": "Expand all CVEs",
                "onClick": [Function],
                "props": Object {
                  "isDisabled": false,
                },
              },
            ],
            "dropdownProps": Object {
              "ouiaId": "toolbar-actions",
            },
          }
        }
        activeFiltersConfig={
          Object {
            "filters": Array [],
            "onDelete": [Function],
          }
        }
        bulkSelect={
          Object {
            "checked": false,
            "count": 0,
            "isDisabled": false,
            "items": Array [
              Object {
                "onClick": [Function],
                "title": "Select none (0 items)",
              },
              Object {
                "onClick": [Function],
                "title": "Select page (0.5 items)",
              },
              Object {
                "onClick": [Function],
                "title": "Select all (0 items)",
              },
            ],
            "onSelect": [Function],
            "ouiaId": "bulk-select",
          }
        }
        exportConfig={
          Object {
            "extraItems": Array [
              <DropdownItem
                component="button"
                onClick={[Function]}
              >
                <FormattedMessage
                  defaultMessage="Export as PDF"
                  description="Kebab item"
                  id="kebab.exportAsPDF"
                />
              </DropdownItem>,
            ],
            "isDisabled": false,
            "onSelect": [Function],
            "ouiaId": "export",
          }
        }
        filterConfig={
          Object {
            "items": Array [
              Object {
                "filterValues": Object {
                  "aria-label": "search-field",
                  "id": "search-cve",
                  "onChange": [Function],
                  "placeholder": "Search ID or description",
                  "value": undefined,
                },
                "label": "CVE",
                "type": "text",
              },
              Object {
                "filterValues": Object {
                  "items": Array [
                    Object {
                      "label": "Has security rule",
                      "value": "true",
                    },
                    Object {
                      "label": "Does not have security rule",
                      "value": "false",
                    },
                  ],
                  "onChange": [Function],
                  "value": Array [],
                },
                "label": "Security rules",
                "type": "checkbox",
              },
              Object {
                "filterValues": Object {
                  "items": Array [
                    Object {
                      "label": <React.Fragment>
                        <SecurityIcon
                          className="pf-u-mr-xs"
                          color="var(--pf-global--danger-color--100)"
                          noVerticalAlign={false}
                          size="sm"
                        />
                        Critical
                      </React.Fragment>,
                      "value": "7",
                    },
                    Object {
                      "label": <React.Fragment>
                        <SecurityIcon
                          className="pf-u-mr-xs"
                          color="var(--pf-global--palette--orange-300)"
                          noVerticalAlign={false}
                          size="sm"
                        />
                        Important
                      </React.Fragment>,
                      "value": "5",
                    },
                    Object {
                      "label": <React.Fragment>
                        <SecurityIcon
                          className="pf-u-mr-xs"
                          color="var(--pf-global--warning-color--100)"
                          noVerticalAlign={false}
                          size="sm"
                        />
                        Moderate
                      </React.Fragment>,
                      "value": "4",
                    },
                    Object {
                      "label": <React.Fragment>
                        <SecurityIcon
                          className="pf-u-mr-xs"
                          color="var(--pf-global--Color--200)"
                          noVerticalAlign={false}
                          size="sm"
                        />
                        Low
                      </React.Fragment>,
                      "value": "2",
                    },
                    Object {
                      "label": <React.Fragment>
                        Unknown
                      </React.Fragment>,
                      "value": "1",
                    },
                  ],
                  "onChange": [Function],
                  "value": Array [],
                },
                "label": "Severity",
                "type": "checkbox",
                "urlParam": "impact",
              },
              Object {
                "filterValues": Object {
                  "children": <CustomReportFilter
                    className="pf-u-mb-0"
                    filterData={
                      Object {
                        "cvss_filter": Object {
                          "from": 0,
                          "to": 10,
                        },
                      }
                    }
                    filterName="cvss_filter"
                    selectProps={
                      Object {
                        "placeholderText": "Filter by CVSS score range",
                      }
                    }
                    setFilterData={[Function]}
                  />,
                },
                "label": "CVSS base score",
                "type": "custom",
                "urlParam": "cvss_filter",
              },
              Object {
                "filterValues": Object {
                  "items": Array [
                    Object {
                      "label": "High",
                      "value": "3",
                    },
                    Object {
                      "label": "Medium",
                      "value": "2",
                    },
                    Object {
                      "label": "Low",
                      "value": "1",
                    },
                    Object {
                      "label": "Not defined",
                      "value": "0",
                    },
                  ],
                  "onChange": [Function],
                  "value": Array [],
                },
                "label": "Business risk",
                "type": "checkbox",
                "urlParam": "business_risk_id",
              },
              Object {
                "filterValues": Object {
                  "items": Array [
                    Object {
                      "label": "Not reviewed",
                      "value": "0",
                    },
                    Object {
                      "label": "In review",
                      "value": "1",
                    },
                    Object {
                      "label": "On-hold",
                      "value": "2",
                    },
                    Object {
                      "label": "Scheduled for patch",
                      "value": "3",
                    },
                    Object {
                      "label": "Resolved",
                      "value": "4",
                    },
                    Object {
                      "label": "No action - risk accepted",
                      "value": "5",
                    },
                    Object {
                      "label": "Resolved via mitigation",
                      "value": "6",
                    },
                  ],
                  "onChange": [Function],
                  "value": Array [],
                },
                "label": "Status",
                "type": "checkbox",
              },
              Object {
                "filterValues": Object {
                  "items": Array [
                    Object {
                      "label": "All",
                      "value": "all",
                    },
                    Object {
                      "label": "Last 7 days",
                      "value": "last7",
                    },
                    Object {
                      "label": "Last 30 days",
                      "value": "last30",
                    },
                    Object {
                      "label": "Last 90 days",
                      "value": "last90",
                    },
                    Object {
                      "label": "Last year",
                      "value": "lastYear",
                    },
                    Object {
                      "label": "More than 1 year ago",
                      "value": "MoreThanYear",
                    },
                  ],
                  "onChange": [Function],
                  "value": "0",
                },
                "label": "Publish date",
                "type": "radio",
                "urlParam": "publish_date",
              },
              Object {
                "filterValues": Object {
                  "items": Array [
                    Object {
                      "label": "1 or more",
                      "value": "0",
                    },
                    Object {
                      "label": "None",
                      "value": "1",
                    },
                  ],
                  "onChange": [Function],
                  "value": undefined,
                },
                "label": "Systems exposed",
                "type": "checkbox",
                "urlParam": "affecting",
              },
            ],
          }
        }
        pagination={
          Object {
            "itemCount": 0,
            "onPerPageSelect": [Function],
            "onSetPage": [Function],
            "ouiaId": "pagination-top",
            "page": 1,
            "perPage": 1,
          }
        }
        toggleIsExpanded={[Function]}
      >
        <Toolbar
          className=" ins-c-primary-toolbar"
          id="ins-primary-data-toolbar"
          toggleIsExpanded={[Function]}
        >
          <div
            className="pf-c-toolbar  ins-c-primary-toolbar"
            id="ins-primary-data-toolbar"
          >
            <ToolbarContent
              isExpanded={false}
              showClearFiltersButton={false}
            >
              <div
                className="pf-c-toolbar__content"
              >
                <div
                  className="pf-c-toolbar__content-section"
                >
                  <ForwardRef
                    className="ins-c-primary-toolbar__group-filter pf-m-spacer-md pf-m-space-items-lg"
                    variant="filter-group"
                  >
                    <ToolbarGroupWithRef
                      className="ins-c-primary-toolbar__group-filter pf-m-spacer-md pf-m-space-items-lg"
                      innerRef={null}
                      variant="filter-group"
                    >
                      <div
                        className="pf-c-toolbar__group pf-m-filter-group ins-c-primary-toolbar__group-filter pf-m-spacer-md pf-m-space-items-lg"
                      >
                        <ToolbarItem>
                          <div
                            className="pf-c-toolbar__item"
                          >
                            <BulkSelect
                              checked={false}
                              className=""
                              count={0}
                              isDisabled={false}
                              items={
                                Array [
                                  Object {
                                    "onClick": [Function],
                                    "title": "Select none (0 items)",
                                  },
                                  Object {
                                    "onClick": [Function],
                                    "title": "Select page (0.5 items)",
                                  },
                                  Object {
                                    "onClick": [Function],
                                    "title": "Select all (0 items)",
                                  },
                                ]
                              }
                              onSelect={[Function]}
                              ouiaId="bulk-select"
                            >
                              <Dropdown
                                className="ins-c-bulk-select"
                                dropdownItems={
                                  Array [
                                    <DropdownItem
                                      component="button"
                                      onClick={[Function]}
                                    >
                                      Select none (0 items)
                                    </DropdownItem>,
                                    <DropdownItem
                                      component="button"
                                      onClick={[Function]}
                                    >
                                      Select page (0.5 items)
                                    </DropdownItem>,
                                    <DropdownItem
                                      component="button"
                                      onClick={[Function]}
                                    >
                                      Select all (0 items)
                                    </DropdownItem>,
                                  ]
                                }
                                isOpen={false}
                                onSelect={[Function]}
                                ouiaId="bulk-select"
                                toggle={
                                  <DropdownToggle
                                    isDisabled={false}
                                    onToggle={[Function]}
                                    splitButtonItems={
                                      Array [
                                        <React.Fragment>
                                          <DropdownToggleCheckbox
                                            aria-label="Select all"
                                            className=""
                                            id="toggle-checkbox"
                                            isChecked={false}
                                            isDisabled={false}
                                            isValid={true}
                                            onChange={[Function]}
                                          >
                                            
                                          </DropdownToggleCheckbox>
                                        </React.Fragment>,
                                      ]
                                    }
                                  />
                                }
                              >
                                <DropdownWithContext
                                  autoFocus={true}
                                  className="ins-c-bulk-select"
                                  direction="down"
                                  dropdownItems={
                                    Array [
                                      <DropdownItem
                                        component="button"
                                        onClick={[Function]}
                                      >
                                        Select none (0 items)
                                      </DropdownItem>,
                                      <DropdownItem
                                        component="button"
                                        onClick={[Function]}
                                      >
                                        Select page (0.5 items)
                                      </DropdownItem>,
                                      <DropdownItem
                                        component="button"
                                        onClick={[Function]}
                                      >
                                        Select all (0 items)
                                      </DropdownItem>,
                                    ]
                                  }
                                  isGrouped={false}
                                  isOpen={false}
                                  isPlain={false}
                                  menuAppendTo="inline"
                                  onSelect={[Function]}
                                  position="left"
                                  toggle={
                                    <DropdownToggle
                                      isDisabled={false}
                                      onToggle={[Function]}
                                      splitButtonItems={
                                        Array [
                                          <React.Fragment>
                                            <DropdownToggleCheckbox
                                              aria-label="Select all"
                                              className=""
                                              id="toggle-checkbox"
                                              isChecked={false}
                                              isDisabled={false}
                                              isValid={true}
                                              onChange={[Function]}
                                            >
                                              
                                            </DropdownToggleCheckbox>
                                          </React.Fragment>,
                                        ]
                                      }
                                    />
                                  }
                                >
                                  <div
                                    className="pf-c-dropdown ins-c-bulk-select"
                                    data-ouia-component-id="bulk-select"
                                    data-ouia-component-type="PF4/Dropdown"
                                    data-ouia-safe={true}
                                  >
                                    <DropdownToggle
                                      aria-haspopup={true}
                                      getMenuRef={[Function]}
                                      id="pf-dropdown-toggle-id-10"
                                      isDisabled={false}
                                      isOpen={false}
                                      isPlain={false}
                                      key=".0"
                                      onEnter={[Function]}
                                      onToggle={[Function]}
                                      parentRef={
                                        Object {
                                          "current": <div
                                            class="pf-c-dropdown ins-c-bulk-select"
                                            data-ouia-component-id="bulk-select"
                                            data-ouia-component-type="PF4/Dropdown"
                                            data-ouia-safe="true"
                                          >
                                            <div
                                              class="pf-c-dropdown__toggle pf-m-split-button"
                                            >
                                              <label
                                                class="pf-c-dropdown__toggle-check"
                                                for="toggle-checkbox"
                                              >
                                                <input
                                                  aria-invalid="false"
                                                  aria-label="Select all"
                                                  data-ouia-component-id="OUIA-Generated-DropdownToggleCheckbox-1"
                                                  data-ouia-component-type="PF4/DropdownToggleCheckbox"
                                                  data-ouia-safe="true"
                                                  id="toggle-checkbox"
                                                  type="checkbox"
                                                />
                                                
                                              </label>
                                              <button
                                                aria-expanded="false"
                                                aria-haspopup="true"
                                                aria-label="Select"
                                                class="pf-c-dropdown__toggle-button"
                                                data-ouia-component-id="OUIA-Generated-DropdownToggle-1"
                                                data-ouia-component-type="PF4/DropdownToggle"
                                                data-ouia-safe="true"
                                                id="pf-dropdown-toggle-id-10"
                                                type="button"
                                              >
                                                <span
                                                  class=""
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    fill="currentColor"
                                                    height="1em"
                                                    role="img"
                                                    style="vertical-align: -0.125em;"
                                                    viewBox="0 0 320 512"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                    />
                                                  </svg>
                                                </span>
                                              </button>
                                            </div>
                                          </div>,
                                        }
                                      }
                                      splitButtonItems={
                                        Array [
                                          <React.Fragment>
                                            <DropdownToggleCheckbox
                                              aria-label="Select all"
                                              className=""
                                              id="toggle-checkbox"
                                              isChecked={false}
                                              isDisabled={false}
                                              isValid={true}
                                              onChange={[Function]}
                                            >
                                              
                                            </DropdownToggleCheckbox>
                                          </React.Fragment>,
                                        ]
                                      }
                                    >
                                      <div
                                        className="pf-c-dropdown__toggle pf-m-split-button"
                                      >
                                        <DropdownToggleCheckbox
                                          aria-label="Select all"
                                          className=""
                                          id="toggle-checkbox"
                                          isChecked={false}
                                          isDisabled={false}
                                          isValid={true}
                                          onChange={[Function]}
                                        >
                                          <label
                                            className="pf-c-dropdown__toggle-check"
                                            htmlFor="toggle-checkbox"
                                          >
                                            <input
                                              aria-invalid={false}
                                              aria-label="Select all"
                                              checked={false}
                                              data-ouia-component-id="OUIA-Generated-DropdownToggleCheckbox-1"
                                              data-ouia-component-type="PF4/DropdownToggleCheckbox"
                                              data-ouia-safe={true}
                                              disabled={false}
                                              id="toggle-checkbox"
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                          </label>
                                        </DropdownToggleCheckbox>
                                        <Toggle
                                          aria-haspopup={true}
                                          aria-label="Select"
                                          bubbleEvent={false}
                                          className=""
                                          data-ouia-component-id="OUIA-Generated-DropdownToggle-1"
                                          data-ouia-component-type="PF4/DropdownToggle"
                                          data-ouia-safe={true}
                                          getMenuRef={[Function]}
                                          id="pf-dropdown-toggle-id-10"
                                          isActive={false}
                                          isDisabled={false}
                                          isOpen={false}
                                          isPlain={false}
                                          isPrimary={false}
                                          isSplitButton={true}
                                          onEnter={[Function]}
                                          onToggle={[Function]}
                                          parentRef={
                                            Object {
                                              "current": <div
                                                class="pf-c-dropdown ins-c-bulk-select"
                                                data-ouia-component-id="bulk-select"
                                                data-ouia-component-type="PF4/Dropdown"
                                                data-ouia-safe="true"
                                              >
                                                <div
                                                  class="pf-c-dropdown__toggle pf-m-split-button"
                                                >
                                                  <label
                                                    class="pf-c-dropdown__toggle-check"
                                                    for="toggle-checkbox"
                                                  >
                                                    <input
                                                      aria-invalid="false"
                                                      aria-label="Select all"
                                                      data-ouia-component-id="OUIA-Generated-DropdownToggleCheckbox-1"
                                                      data-ouia-component-type="PF4/DropdownToggleCheckbox"
                                                      data-ouia-safe="true"
                                                      id="toggle-checkbox"
                                                      type="checkbox"
                                                    />
                                                    
                                                  </label>
                                                  <button
                                                    aria-expanded="false"
                                                    aria-haspopup="true"
                                                    aria-label="Select"
                                                    class="pf-c-dropdown__toggle-button"
                                                    data-ouia-component-id="OUIA-Generated-DropdownToggle-1"
                                                    data-ouia-component-type="PF4/DropdownToggle"
                                                    data-ouia-safe="true"
                                                    id="pf-dropdown-toggle-id-10"
                                                    type="button"
                                                  >
                                                    <span
                                                      class=""
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        fill="currentColor"
                                                        height="1em"
                                                        role="img"
                                                        style="vertical-align: -0.125em;"
                                                        viewBox="0 0 320 512"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                        />
                                                      </svg>
                                                    </span>
                                                  </button>
                                                </div>
                                              </div>,
                                            }
                                          }
                                        >
                                          <button
                                            aria-expanded={false}
                                            aria-haspopup={true}
                                            aria-label="Select"
                                            className="pf-c-dropdown__toggle-button"
                                            data-ouia-component-id="OUIA-Generated-DropdownToggle-1"
                                            data-ouia-component-type="PF4/DropdownToggle"
                                            data-ouia-safe={true}
                                            disabled={false}
                                            id="pf-dropdown-toggle-id-10"
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            type="button"
                                          >
                                            <span
                                              className=""
                                            >
                                              <CaretDownIcon
                                                color="currentColor"
                                                noVerticalAlign={false}
                                                size="sm"
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  aria-labelledby={null}
                                                  fill="currentColor"
                                                  height="1em"
                                                  role="img"
                                                  style={
                                                    Object {
                                                      "verticalAlign": "-0.125em",
                                                    }
                                                  }
                                                  viewBox="0 0 320 512"
                                                  width="1em"
                                                >
                                                  <path
                                                    d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                  />
                                                </svg>
                                              </CaretDownIcon>
                                            </span>
                                          </button>
                                        </Toggle>
                                      </div>
                                    </DropdownToggle>
                                  </div>
                                </DropdownWithContext>
                              </Dropdown>
                            </BulkSelect>
                          </div>
                        </ToolbarItem>
                        <ToolbarItem
                          className="ins-c-primary-toolbar__filter"
                        >
                          <div
                            className="pf-c-toolbar__item ins-c-primary-toolbar__filter"
                          >
                            <ConditionalFilter
                              hideLabel={false}
                              id="default-input"
                              isDisabled={false}
                              items={
                                Array [
                                  Object {
                                    "filterValues": Object {
                                      "aria-label": "search-field",
                                      "id": "search-cve",
                                      "onChange": [Function],
                                      "placeholder": "Search ID or description",
                                      "value": undefined,
                                    },
                                    "label": "CVE",
                                    "type": "text",
                                  },
                                  Object {
                                    "filterValues": Object {
                                      "items": Array [
                                        Object {
                                          "label": "Has security rule",
                                          "value": "true",
                                        },
                                        Object {
                                          "label": "Does not have security rule",
                                          "value": "false",
                                        },
                                      ],
                                      "onChange": [Function],
                                      "value": Array [],
                                    },
                                    "label": "Security rules",
                                    "type": "checkbox",
                                  },
                                  Object {
                                    "filterValues": Object {
                                      "items": Array [
                                        Object {
                                          "label": <React.Fragment>
                                            <SecurityIcon
                                              className="pf-u-mr-xs"
                                              color="var(--pf-global--danger-color--100)"
                                              noVerticalAlign={false}
                                              size="sm"
                                            />
                                            Critical
                                          </React.Fragment>,
                                          "value": "7",
                                        },
                                        Object {
                                          "label": <React.Fragment>
                                            <SecurityIcon
                                              className="pf-u-mr-xs"
                                              color="var(--pf-global--palette--orange-300)"
                                              noVerticalAlign={false}
                                              size="sm"
                                            />
                                            Important
                                          </React.Fragment>,
                                          "value": "5",
                                        },
                                        Object {
                                          "label": <React.Fragment>
                                            <SecurityIcon
                                              className="pf-u-mr-xs"
                                              color="var(--pf-global--warning-color--100)"
                                              noVerticalAlign={false}
                                              size="sm"
                                            />
                                            Moderate
                                          </React.Fragment>,
                                          "value": "4",
                                        },
                                        Object {
                                          "label": <React.Fragment>
                                            <SecurityIcon
                                              className="pf-u-mr-xs"
                                              color="var(--pf-global--Color--200)"
                                              noVerticalAlign={false}
                                              size="sm"
                                            />
                                            Low
                                          </React.Fragment>,
                                          "value": "2",
                                        },
                                        Object {
                                          "label": <React.Fragment>
                                            Unknown
                                          </React.Fragment>,
                                          "value": "1",
                                        },
                                      ],
                                      "onChange": [Function],
                                      "value": Array [],
                                    },
                                    "label": "Severity",
                                    "type": "checkbox",
                                    "urlParam": "impact",
                                  },
                                  Object {
                                    "filterValues": Object {
                                      "children": <CustomReportFilter
                                        className="pf-u-mb-0"
                                        filterData={
                                          Object {
                                            "cvss_filter": Object {
                                              "from": 0,
                                              "to": 10,
                                            },
                                          }
                                        }
                                        filterName="cvss_filter"
                                        selectProps={
                                          Object {
                                            "placeholderText": "Filter by CVSS score range",
                                          }
                                        }
                                        setFilterData={[Function]}
                                      />,
                                    },
                                    "label": "CVSS base score",
                                    "type": "custom",
                                    "urlParam": "cvss_filter",
                                  },
                                  Object {
                                    "filterValues": Object {
                                      "items": Array [
                                        Object {
                                          "label": "High",
                                          "value": "3",
                                        },
                                        Object {
                                          "label": "Medium",
                                          "value": "2",
                                        },
                                        Object {
                                          "label": "Low",
                                          "value": "1",
                                        },
                                        Object {
                                          "label": "Not defined",
                                          "value": "0",
                                        },
                                      ],
                                      "onChange": [Function],
                                      "value": Array [],
                                    },
                                    "label": "Business risk",
                                    "type": "checkbox",
                                    "urlParam": "business_risk_id",
                                  },
                                  Object {
                                    "filterValues": Object {
                                      "items": Array [
                                        Object {
                                          "label": "Not reviewed",
                                          "value": "0",
                                        },
                                        Object {
                                          "label": "In review",
                                          "value": "1",
                                        },
                                        Object {
                                          "label": "On-hold",
                                          "value": "2",
                                        },
                                        Object {
                                          "label": "Scheduled for patch",
                                          "value": "3",
                                        },
                                        Object {
                                          "label": "Resolved",
                                          "value": "4",
                                        },
                                        Object {
                                          "label": "No action - risk accepted",
                                          "value": "5",
                                        },
                                        Object {
                                          "label": "Resolved via mitigation",
                                          "value": "6",
                                        },
                                      ],
                                      "onChange": [Function],
                                      "value": Array [],
                                    },
                                    "label": "Status",
                                    "type": "checkbox",
                                  },
                                  Object {
                                    "filterValues": Object {
                                      "items": Array [
                                        Object {
                                          "label": "All",
                                          "value": "all",
                                        },
                                        Object {
                                          "label": "Last 7 days",
                                          "value": "last7",
                                        },
                                        Object {
                                          "label": "Last 30 days",
                                          "value": "last30",
                                        },
                                        Object {
                                          "label": "Last 90 days",
                                          "value": "last90",
                                        },
                                        Object {
                                          "label": "Last year",
                                          "value": "lastYear",
                                        },
                                        Object {
                                          "label": "More than 1 year ago",
                                          "value": "MoreThanYear",
                                        },
                                      ],
                                      "onChange": [Function],
                                      "value": "0",
                                    },
                                    "label": "Publish date",
                                    "type": "radio",
                                    "urlParam": "publish_date",
                                  },
                                  Object {
                                    "filterValues": Object {
                                      "items": Array [
                                        Object {
                                          "label": "1 or more",
                                          "value": "0",
                                        },
                                        Object {
                                          "label": "None",
                                          "value": "1",
                                        },
                                      ],
                                      "onChange": [Function],
                                      "value": undefined,
                                    },
                                    "label": "Systems exposed",
                                    "type": "checkbox",
                                    "urlParam": "affecting",
                                  },
                                ]
                              }
                              value=""
                            >
                              <Split
                                className="ins-c-conditional-filter"
                              >
                                <div
                                  className="pf-l-split ins-c-conditional-filter"
                                >
                                  <SplitItem>
                                    <div
                                      className="pf-l-split__item"
                                    >
                                      <Dropdown
                                        className="ins-c-conditional-filter__group"
                                        dropdownItems={
                                          Array [
                                            <DropdownItem
                                              component="button"
                                              isHovered={true}
                                              onClick={[Function]}
                                            >
                                              CVE
                                            </DropdownItem>,
                                            <DropdownItem
                                              component="button"
                                              isHovered={false}
                                              onClick={[Function]}
                                            >
                                              Security rules
                                            </DropdownItem>,
                                            <DropdownItem
                                              component="button"
                                              isHovered={false}
                                              onClick={[Function]}
                                            >
                                              Severity
                                            </DropdownItem>,
                                            <DropdownItem
                                              component="button"
                                              isHovered={false}
                                              onClick={[Function]}
                                            >
                                              CVSS base score
                                            </DropdownItem>,
                                            <DropdownItem
                                              component="button"
                                              isHovered={false}
                                              onClick={[Function]}
                                            >
                                              Business risk
                                            </DropdownItem>,
                                            <DropdownItem
                                              component="button"
                                              isHovered={false}
                                              onClick={[Function]}
                                            >
                                              Status
                                            </DropdownItem>,
                                            <DropdownItem
                                              component="button"
                                              isHovered={false}
                                              onClick={[Function]}
                                            >
                                              Publish date
                                            </DropdownItem>,
                                            <DropdownItem
                                              component="button"
                                              isHovered={false}
                                              onClick={[Function]}
                                            >
                                              Systems exposed
                                            </DropdownItem>,
                                          ]
                                        }
                                        isOpen={false}
                                        onSelect={[Function]}
                                        toggle={
                                          <DropdownToggle
                                            className=""
                                            isDisabled={false}
                                            onToggle={[Function]}
                                          >
                                            <FilterIcon
                                              color="currentColor"
                                              noVerticalAlign={false}
                                              size="sm"
                                            />
                                            <span
                                              className="ins-c-conditional-filter__value-selector"
                                            >
                                              CVE
                                            </span>
                                          </DropdownToggle>
                                        }
                                      >
                                        <DropdownWithContext
                                          autoFocus={true}
                                          className="ins-c-conditional-filter__group"
                                          direction="down"
                                          dropdownItems={
                                            Array [
                                              <DropdownItem
                                                component="button"
                                                isHovered={true}
                                                onClick={[Function]}
                                              >
                                                CVE
                                              </DropdownItem>,
                                              <DropdownItem
                                                component="button"
                                                isHovered={false}
                                                onClick={[Function]}
                                              >
                                                Security rules
                                              </DropdownItem>,
                                              <DropdownItem
                                                component="button"
                                                isHovered={false}
                                                onClick={[Function]}
                                              >
                                                Severity
                                              </DropdownItem>,
                                              <DropdownItem
                                                component="button"
                                                isHovered={false}
                                                onClick={[Function]}
                                              >
                                                CVSS base score
                                              </DropdownItem>,
                                              <DropdownItem
                                                component="button"
                                                isHovered={false}
                                                onClick={[Function]}
                                              >
                                                Business risk
                                              </DropdownItem>,
                                              <DropdownItem
                                                component="button"
                                                isHovered={false}
                                                onClick={[Function]}
                                              >
                                                Status
                                              </DropdownItem>,
                                              <DropdownItem
                                                component="button"
                                                isHovered={false}
                                                onClick={[Function]}
                                              >
                                                Publish date
                                              </DropdownItem>,
                                              <DropdownItem
                                                component="button"
                                                isHovered={false}
                                                onClick={[Function]}
                                              >
                                                Systems exposed
                                              </DropdownItem>,
                                            ]
                                          }
                                          isGrouped={false}
                                          isOpen={false}
                                          isPlain={false}
                                          menuAppendTo="inline"
                                          onSelect={[Function]}
                                          position="left"
                                          toggle={
                                            <DropdownToggle
                                              className=""
                                              isDisabled={false}
                                              onToggle={[Function]}
                                            >
                                              <FilterIcon
                                                color="currentColor"
                                                noVerticalAlign={false}
                                                size="sm"
                                              />
                                              <span
                                                className="ins-c-conditional-filter__value-selector"
                                              >
                                                CVE
                                              </span>
                                            </DropdownToggle>
                                          }
                                        >
                                          <div
                                            className="pf-c-dropdown ins-c-conditional-filter__group"
                                            data-ouia-component-id="OUIA-Generated-Dropdown-1"
                                            data-ouia-component-type="PF4/Dropdown"
                                            data-ouia-safe={true}
                                          >
                                            <DropdownToggle
                                              aria-haspopup={true}
                                              className=""
                                              getMenuRef={[Function]}
                                              id="pf-dropdown-toggle-id-11"
                                              isDisabled={false}
                                              isOpen={false}
                                              isPlain={false}
                                              key=".0"
                                              onEnter={[Function]}
                                              onToggle={[Function]}
                                              parentRef={
                                                Object {
                                                  "current": <div
                                                    class="pf-c-dropdown ins-c-conditional-filter__group"
                                                    data-ouia-component-id="OUIA-Generated-Dropdown-1"
                                                    data-ouia-component-type="PF4/Dropdown"
                                                    data-ouia-safe="true"
                                                  >
                                                    <button
                                                      aria-expanded="false"
                                                      aria-haspopup="true"
                                                      class="pf-c-dropdown__toggle"
                                                      data-ouia-component-id="OUIA-Generated-DropdownToggle-2"
                                                      data-ouia-component-type="PF4/DropdownToggle"
                                                      data-ouia-safe="true"
                                                      id="pf-dropdown-toggle-id-11"
                                                      type="button"
                                                    >
                                                      <span
                                                        class="pf-c-dropdown__toggle-text"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          fill="currentColor"
                                                          height="1em"
                                                          role="img"
                                                          style="vertical-align: -0.125em;"
                                                          viewBox="0 0 512 512"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M487.976 0H24.028C2.71 0-8.047 25.866 7.058 40.971L192 225.941V432c0 7.831 3.821 15.17 10.237 19.662l80 55.98C298.02 518.69 320 507.493 320 487.98V225.941l184.947-184.97C520.021 25.896 509.338 0 487.976 0z"
                                                          />
                                                        </svg>
                                                        <span
                                                          class="ins-c-conditional-filter__value-selector"
                                                        >
                                                          CVE
                                                        </span>
                                                      </span>
                                                      <span
                                                        class="pf-c-dropdown__toggle-icon"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          fill="currentColor"
                                                          height="1em"
                                                          role="img"
                                                          style="vertical-align: -0.125em;"
                                                          viewBox="0 0 320 512"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                          />
                                                        </svg>
                                                      </span>
                                                    </button>
                                                  </div>,
                                                }
                                              }
                                            >
                                              <Toggle
                                                aria-haspopup={true}
                                                bubbleEvent={false}
                                                className=""
                                                data-ouia-component-id="OUIA-Generated-DropdownToggle-2"
                                                data-ouia-component-type="PF4/DropdownToggle"
                                                data-ouia-safe={true}
                                                getMenuRef={[Function]}
                                                id="pf-dropdown-toggle-id-11"
                                                isActive={false}
                                                isDisabled={false}
                                                isOpen={false}
                                                isPlain={false}
                                                isPrimary={false}
                                                isSplitButton={false}
                                                onEnter={[Function]}
                                                onToggle={[Function]}
                                                parentRef={
                                                  Object {
                                                    "current": <div
                                                      class="pf-c-dropdown ins-c-conditional-filter__group"
                                                      data-ouia-component-id="OUIA-Generated-Dropdown-1"
                                                      data-ouia-component-type="PF4/Dropdown"
                                                      data-ouia-safe="true"
                                                    >
                                                      <button
                                                        aria-expanded="false"
                                                        aria-haspopup="true"
                                                        class="pf-c-dropdown__toggle"
                                                        data-ouia-component-id="OUIA-Generated-DropdownToggle-2"
                                                        data-ouia-component-type="PF4/DropdownToggle"
                                                        data-ouia-safe="true"
                                                        id="pf-dropdown-toggle-id-11"
                                                        type="button"
                                                      >
                                                        <span
                                                          class="pf-c-dropdown__toggle-text"
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            fill="currentColor"
                                                            height="1em"
                                                            role="img"
                                                            style="vertical-align: -0.125em;"
                                                            viewBox="0 0 512 512"
                                                            width="1em"
                                                          >
                                                            <path
                                                              d="M487.976 0H24.028C2.71 0-8.047 25.866 7.058 40.971L192 225.941V432c0 7.831 3.821 15.17 10.237 19.662l80 55.98C298.02 518.69 320 507.493 320 487.98V225.941l184.947-184.97C520.021 25.896 509.338 0 487.976 0z"
                                                            />
                                                          </svg>
                                                          <span
                                                            class="ins-c-conditional-filter__value-selector"
                                                          >
                                                            CVE
                                                          </span>
                                                        </span>
                                                        <span
                                                          class="pf-c-dropdown__toggle-icon"
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            fill="currentColor"
                                                            height="1em"
                                                            role="img"
                                                            style="vertical-align: -0.125em;"
                                                            viewBox="0 0 320 512"
                                                            width="1em"
                                                          >
                                                            <path
                                                              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                            />
                                                          </svg>
                                                        </span>
                                                      </button>
                                                    </div>,
                                                  }
                                                }
                                              >
                                                <button
                                                  aria-expanded={false}
                                                  aria-haspopup={true}
                                                  className="pf-c-dropdown__toggle"
                                                  data-ouia-component-id="OUIA-Generated-DropdownToggle-2"
                                                  data-ouia-component-type="PF4/DropdownToggle"
                                                  data-ouia-safe={true}
                                                  disabled={false}
                                                  id="pf-dropdown-toggle-id-11"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  type="button"
                                                >
                                                  <span
                                                    className="pf-c-dropdown__toggle-text"
                                                  >
                                                    <FilterIcon
                                                      color="currentColor"
                                                      noVerticalAlign={false}
                                                      size="sm"
                                                    >
                                                      <svg
                                                        aria-hidden={true}
                                                        aria-labelledby={null}
                                                        fill="currentColor"
                                                        height="1em"
                                                        role="img"
                                                        style={
                                                          Object {
                                                            "verticalAlign": "-0.125em",
                                                          }
                                                        }
                                                        viewBox="0 0 512 512"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M487.976 0H24.028C2.71 0-8.047 25.866 7.058 40.971L192 225.941V432c0 7.831 3.821 15.17 10.237 19.662l80 55.98C298.02 518.69 320 507.493 320 487.98V225.941l184.947-184.97C520.021 25.896 509.338 0 487.976 0z"
                                                        />
                                                      </svg>
                                                    </FilterIcon>
                                                    <span
                                                      className="ins-c-conditional-filter__value-selector"
                                                    >
                                                      CVE
                                                    </span>
                                                  </span>
                                                  <span
                                                    className="pf-c-dropdown__toggle-icon"
                                                  >
                                                    <CaretDownIcon
                                                      color="currentColor"
                                                      noVerticalAlign={false}
                                                      size="sm"
                                                    >
                                                      <svg
                                                        aria-hidden={true}
                                                        aria-labelledby={null}
                                                        fill="currentColor"
                                                        height="1em"
                                                        role="img"
                                                        style={
                                                          Object {
                                                            "verticalAlign": "-0.125em",
                                                          }
                                                        }
                                                        viewBox="0 0 320 512"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                        />
                                                      </svg>
                                                    </CaretDownIcon>
                                                  </span>
                                                </button>
                                              </Toggle>
                                            </DropdownToggle>
                                          </div>
                                        </DropdownWithContext>
                                      </Dropdown>
                                    </div>
                                  </SplitItem>
                                  <SplitItem
                                    isFilled={true}
                                  >
                                    <div
                                      className="pf-l-split__item pf-m-fill"
                                    >
                                      <Text
                                        aria-label="search-field"
                                        id="search-cve"
                                        isDisabled={false}
                                        onChange={[Function]}
                                        onSubmit={[Function]}
                                        placeholder="Search ID or description"
                                        value=""
                                      >
                                        <TextInput
                                          aria-label="search-field"
                                          className="ins-c-conditional-filter "
                                          id="search-cve"
                                          isDisabled={false}
                                          onChange={[Function]}
                                          onKeyDown={[Function]}
                                          placeholder="Search ID or description"
                                          value=""
                                          widget-type="InsightsInput"
                                        >
                                          <TextInputBase
                                            aria-label="search-field"
                                            className="ins-c-conditional-filter "
                                            id="search-cve"
                                            innerRef={null}
                                            isDisabled={false}
                                            isLeftTruncated={false}
                                            isReadOnly={false}
                                            isRequired={false}
                                            onChange={[Function]}
                                            onKeyDown={[Function]}
                                            placeholder="Search ID or description"
                                            type="text"
                                            validated="default"
                                            value=""
                                            widget-type="InsightsInput"
                                          >
                                            <input
                                              aria-invalid={false}
                                              aria-label="search-field"
                                              className="pf-c-form-control ins-c-conditional-filter "
                                              disabled={false}
                                              id="search-cve"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              placeholder="Search ID or description"
                                              readOnly={false}
                                              required={false}
                                              type="text"
                                              value=""
                                              widget-type="InsightsInput"
                                            />
                                          </TextInputBase>
                                        </TextInput>
                                        <SearchIcon
                                          className="ins-c-search-icon"
                                          color="currentColor"
                                          noVerticalAlign={false}
                                          size="sm"
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            className="ins-c-search-icon"
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 512 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z"
                                            />
                                          </svg>
                                        </SearchIcon>
                                      </Text>
                                    </div>
                                  </SplitItem>
                                </div>
                              </Split>
                            </ConditionalFilter>
                          </div>
                        </ToolbarItem>
                      </div>
                    </ToolbarGroupWithRef>
                  </ForwardRef>
                  <Actions
                    actions={
                      Array [
                        "",
                        Object {
                          "label": "Edit business risk",
                          "onClick": [Function],
                          "props": Object {
                            "isDisabled": true,
                          },
                        },
                        Object {
                          "label": "Edit status",
                          "onClick": [Function],
                          "props": Object {
                            "isDisabled": true,
                          },
                        },
                        Object {
                          "label": "Expand all CVEs",
                          "onClick": [Function],
                          "props": Object {
                            "isDisabled": false,
                          },
                        },
                      ]
                    }
                    dropdownProps={
                      Object {
                        "ouiaId": "toolbar-actions",
                      }
                    }
                    exportConfig={
                      Object {
                        "extraItems": Array [
                          <DropdownItem
                            component="button"
                            onClick={[Function]}
                          >
                            <FormattedMessage
                              defaultMessage="Export as PDF"
                              description="Kebab item"
                              id="kebab.exportAsPDF"
                            />
                          </DropdownItem>,
                        ],
                        "isDisabled": false,
                        "onSelect": [Function],
                        "ouiaId": "export",
                      }
                    }
                    onSelect={[Function]}
                    overflowActions={Array []}
                  >
                    <ToolbarItem
                      className="pf-m-spacer-sm"
                    >
                      <div
                        className="pf-c-toolbar__item pf-m-spacer-sm"
                      >
                        <DownloadButton
                          extraItems={
                            Array [
                              <DropdownItem
                                component="button"
                                onClick={[Function]}
                              >
                                <FormattedMessage
                                  defaultMessage="Export as PDF"
                                  description="Kebab item"
                                  id="kebab.exportAsPDF"
                                />
                              </DropdownItem>,
                            ]
                          }
                          isDisabled={false}
                          onSelect={[Function]}
                          ouiaId="export"
                        >
                          <Dropdown
                            dropdownItems={
                              Array [
                                <DropdownItem
                                  component="button"
                                  isDisabled={false}
                                  onClick={[Function]}
                                >
                                  Export to CSV
                                </DropdownItem>,
                                <DropdownItem
                                  component="button"
                                  isDisabled={false}
                                  onClick={[Function]}
                                >
                                  Export to JSON
                                </DropdownItem>,
                                <DropdownItem
                                  component="button"
                                  onClick={[Function]}
                                >
                                  <FormattedMessage
                                    defaultMessage="Export as PDF"
                                    description="Kebab item"
                                    id="kebab.exportAsPDF"
                                  />
                                </DropdownItem>,
                              ]
                            }
                            isOpen={false}
                            isPlain={true}
                            onSelect={[Function]}
                            ouiaId="export"
                            toggle={
                              <DropdownToggle
                                isDisabled={false}
                                onToggle={[Function]}
                                toggleIndicator={null}
                              >
                                <ExportIcon
                                  color="currentColor"
                                  noVerticalAlign={false}
                                  size="sm"
                                />
                              </DropdownToggle>
                            }
                          >
                            <DropdownWithContext
                              autoFocus={true}
                              className=""
                              direction="down"
                              dropdownItems={
                                Array [
                                  <DropdownItem
                                    component="button"
                                    isDisabled={false}
                                    onClick={[Function]}
                                  >
                                    Export to CSV
                                  </DropdownItem>,
                                  <DropdownItem
                                    component="button"
                                    isDisabled={false}
                                    onClick={[Function]}
                                  >
                                    Export to JSON
                                  </DropdownItem>,
                                  <DropdownItem
                                    component="button"
                                    onClick={[Function]}
                                  >
                                    <FormattedMessage
                                      defaultMessage="Export as PDF"
                                      description="Kebab item"
                                      id="kebab.exportAsPDF"
                                    />
                                  </DropdownItem>,
                                ]
                              }
                              isGrouped={false}
                              isOpen={false}
                              isPlain={true}
                              menuAppendTo="inline"
                              onSelect={[Function]}
                              position="left"
                              toggle={
                                <DropdownToggle
                                  isDisabled={false}
                                  onToggle={[Function]}
                                  toggleIndicator={null}
                                >
                                  <ExportIcon
                                    color="currentColor"
                                    noVerticalAlign={false}
                                    size="sm"
                                  />
                                </DropdownToggle>
                              }
                            >
                              <div
                                className="pf-c-dropdown"
                                data-ouia-component-id="export"
                                data-ouia-component-type="PF4/Dropdown"
                                data-ouia-safe={true}
                              >
                                <DropdownToggle
                                  aria-haspopup={true}
                                  getMenuRef={[Function]}
                                  id="pf-dropdown-toggle-id-12"
                                  isDisabled={false}
                                  isOpen={false}
                                  isPlain={true}
                                  key=".0"
                                  onEnter={[Function]}
                                  onToggle={[Function]}
                                  parentRef={
                                    Object {
                                      "current": <div
                                        class="pf-c-dropdown"
                                        data-ouia-component-id="export"
                                        data-ouia-component-type="PF4/Dropdown"
                                        data-ouia-safe="true"
                                      >
                                        <button
                                          aria-expanded="false"
                                          aria-haspopup="true"
                                          class="pf-c-dropdown__toggle pf-m-plain"
                                          data-ouia-component-id="OUIA-Generated-DropdownToggle-3"
                                          data-ouia-component-type="PF4/DropdownToggle"
                                          data-ouia-safe="true"
                                          id="pf-dropdown-toggle-id-12"
                                          type="button"
                                        >
                                          <span>
                                            <svg
                                              aria-hidden="true"
                                              fill="currentColor"
                                              height="1em"
                                              role="img"
                                              style="vertical-align: -0.125em;"
                                              viewBox="0 0 1024 1024"
                                              width="1em"
                                            >
                                              <path
                                                d="M975.8,636.9 L870.9,741.8 L457.9,328.6 C452.1,322.8 445.4,319.9 437.9,319.9 C430.4,319.9 423.7,322.8 417.9,328.6 L328.8,417.7 C323,423.5 320.1,430.2 320.1,437.7 C320.1,445.2 323,451.9 328.8,457.7 L742,870.7 L636.9,975.8 C610.5,1002.2 619.4,1024 656.8,1024 L956,1024 C1014.5,1024 1024,1013.7 1024,955.9 L1024,656.7 C1023.9,619.4 1002.2,610.5 975.8,636.9 Z M128,128 L896,128 L896,361.7 C896.007942,370.182681 899.389907,378.313788 905.4,384.3 L996.7,475.6 C1006.8,485.7 1024,478.5 1024,464.3 L1024,22.7 C1024,16.1 1021.9,10.7 1017.6,6.4 C1013.3,2.1 1007.9,0 1001.3,0 L22.7,0 C16.1,0 10.7,2.1 6.4,6.4 C2.1,10.7 0,16.1 0,22.7 L0,1001.3 C0,1007.9 2.1,1013.3 6.4,1017.6 C10.7,1021.9 16.1,1024 22.7,1024 L463.4,1024 C469.862884,1023.98894 475.684489,1020.0908 478.156232,1014.11925 C480.627976,1008.14769 479.264428,1001.27548 474.7,996.7 L383.4,905.4 C377.413788,899.389907 369.282681,896.007942 360.8,896 L128,896 L128,128 Z"
                                              />
                                            </svg>
                                          </span>
                                        </button>
                                      </div>,
                                    }
                                  }
                                  toggleIndicator={null}
                                >
                                  <Toggle
                                    aria-haspopup={true}
                                    bubbleEvent={false}
                                    className=""
                                    data-ouia-component-id="OUIA-Generated-DropdownToggle-3"
                                    data-ouia-component-type="PF4/DropdownToggle"
                                    data-ouia-safe={true}
                                    getMenuRef={[Function]}
                                    id="pf-dropdown-toggle-id-12"
                                    isActive={false}
                                    isDisabled={false}
                                    isOpen={false}
                                    isPlain={true}
                                    isPrimary={false}
                                    isSplitButton={false}
                                    onEnter={[Function]}
                                    onToggle={[Function]}
                                    parentRef={
                                      Object {
                                        "current": <div
                                          class="pf-c-dropdown"
                                          data-ouia-component-id="export"
                                          data-ouia-component-type="PF4/Dropdown"
                                          data-ouia-safe="true"
                                        >
                                          <button
                                            aria-expanded="false"
                                            aria-haspopup="true"
                                            class="pf-c-dropdown__toggle pf-m-plain"
                                            data-ouia-component-id="OUIA-Generated-DropdownToggle-3"
                                            data-ouia-component-type="PF4/DropdownToggle"
                                            data-ouia-safe="true"
                                            id="pf-dropdown-toggle-id-12"
                                            type="button"
                                          >
                                            <span>
                                              <svg
                                                aria-hidden="true"
                                                fill="currentColor"
                                                height="1em"
                                                role="img"
                                                style="vertical-align: -0.125em;"
                                                viewBox="0 0 1024 1024"
                                                width="1em"
                                              >
                                                <path
                                                  d="M975.8,636.9 L870.9,741.8 L457.9,328.6 C452.1,322.8 445.4,319.9 437.9,319.9 C430.4,319.9 423.7,322.8 417.9,328.6 L328.8,417.7 C323,423.5 320.1,430.2 320.1,437.7 C320.1,445.2 323,451.9 328.8,457.7 L742,870.7 L636.9,975.8 C610.5,1002.2 619.4,1024 656.8,1024 L956,1024 C1014.5,1024 1024,1013.7 1024,955.9 L1024,656.7 C1023.9,619.4 1002.2,610.5 975.8,636.9 Z M128,128 L896,128 L896,361.7 C896.007942,370.182681 899.389907,378.313788 905.4,384.3 L996.7,475.6 C1006.8,485.7 1024,478.5 1024,464.3 L1024,22.7 C1024,16.1 1021.9,10.7 1017.6,6.4 C1013.3,2.1 1007.9,0 1001.3,0 L22.7,0 C16.1,0 10.7,2.1 6.4,6.4 C2.1,10.7 0,16.1 0,22.7 L0,1001.3 C0,1007.9 2.1,1013.3 6.4,1017.6 C10.7,1021.9 16.1,1024 22.7,1024 L463.4,1024 C469.862884,1023.98894 475.684489,1020.0908 478.156232,1014.11925 C480.627976,1008.14769 479.264428,1001.27548 474.7,996.7 L383.4,905.4 C377.413788,899.389907 369.282681,896.007942 360.8,896 L128,896 L128,128 Z"
                                                />
                                              </svg>
                                            </span>
                                          </button>
                                        </div>,
                                      }
                                    }
                                  >
                                    <button
                                      aria-expanded={false}
                                      aria-haspopup={true}
                                      className="pf-c-dropdown__toggle pf-m-plain"
                                      data-ouia-component-id="OUIA-Generated-DropdownToggle-3"
                                      data-ouia-component-type="PF4/DropdownToggle"
                                      data-ouia-safe={true}
                                      disabled={false}
                                      id="pf-dropdown-toggle-id-12"
                                      onClick={[Function]}
                                      onKeyDown={[Function]}
                                      type="button"
                                    >
                                      <span
                                        className={null}
                                      >
                                        <ExportIcon
                                          color="currentColor"
                                          noVerticalAlign={false}
                                          size="sm"
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style={
                                              Object {
                                                "verticalAlign": "-0.125em",
                                              }
                                            }
                                            viewBox="0 0 1024 1024"
                                            width="1em"
                                          >
                                            <path
                                              d="M975.8,636.9 L870.9,741.8 L457.9,328.6 C452.1,322.8 445.4,319.9 437.9,319.9 C430.4,319.9 423.7,322.8 417.9,328.6 L328.8,417.7 C323,423.5 320.1,430.2 320.1,437.7 C320.1,445.2 323,451.9 328.8,457.7 L742,870.7 L636.9,975.8 C610.5,1002.2 619.4,1024 656.8,1024 L956,1024 C1014.5,1024 1024,1013.7 1024,955.9 L1024,656.7 C1023.9,619.4 1002.2,610.5 975.8,636.9 Z M128,128 L896,128 L896,361.7 C896.007942,370.182681 899.389907,378.313788 905.4,384.3 L996.7,475.6 C1006.8,485.7 1024,478.5 1024,464.3 L1024,22.7 C1024,16.1 1021.9,10.7 1017.6,6.4 C1013.3,2.1 1007.9,0 1001.3,0 L22.7,0 C16.1,0 10.7,2.1 6.4,6.4 C2.1,10.7 0,16.1 0,22.7 L0,1001.3 C0,1007.9 2.1,1013.3 6.4,1017.6 C10.7,1021.9 16.1,1024 22.7,1024 L463.4,1024 C469.862884,1023.98894 475.684489,1020.0908 478.156232,1014.11925 C480.627976,1008.14769 479.264428,1001.27548 474.7,996.7 L383.4,905.4 C377.413788,899.389907 369.282681,896.007942 360.8,896 L128,896 L128,128 Z"
                                            />
                                          </svg>
                                        </ExportIcon>
                                      </span>
                                    </button>
                                  </Toggle>
                                </DropdownToggle>
                              </div>
                            </DropdownWithContext>
                          </Dropdown>
                        </DownloadButton>
                      </div>
                    </ToolbarItem>
                    <ToolbarItem
                      className=" ins-c-primary-toolbar__actions pf-m-spacer-sm"
                    >
                      <div
                        className="pf-c-toolbar__item  ins-c-primary-toolbar__actions pf-m-spacer-sm"
                      >
                        <Dropdown
                          dropdownItems={
                            Array [
                              <DropdownItem
                                component="button"
                                isDisabled={true}
                                onClick={[Function]}
                              >
                                Edit business risk
                              </DropdownItem>,
                              <DropdownItem
                                component="button"
                                isDisabled={true}
                                onClick={[Function]}
                              >
                                Edit status
                              </DropdownItem>,
                              <DropdownItem
                                component="button"
                                isDisabled={false}
                                onClick={[Function]}
                              >
                                Expand all CVEs
                              </DropdownItem>,
                            ]
                          }
                          isOpen={false}
                          isPlain={true}
                          onSelect={[Function]}
                          ouiaId="toolbar-actions"
                          toggle={
                            <KebabToggle
                              onToggle={[Function]}
                            />
                          }
                        >
                          <DropdownWithContext
                            autoFocus={true}
                            className=""
                            direction="down"
                            dropdownItems={
                              Array [
                                <DropdownItem
                                  component="button"
                                  isDisabled={true}
                                  onClick={[Function]}
                                >
                                  Edit business risk
                                </DropdownItem>,
                                <DropdownItem
                                  component="button"
                                  isDisabled={true}
                                  onClick={[Function]}
                                >
                                  Edit status
                                </DropdownItem>,
                                <DropdownItem
                                  component="button"
                                  isDisabled={false}
                                  onClick={[Function]}
                                >
                                  Expand all CVEs
                                </DropdownItem>,
                              ]
                            }
                            isGrouped={false}
                            isOpen={false}
                            isPlain={true}
                            menuAppendTo="inline"
                            onSelect={[Function]}
                            position="left"
                            toggle={
                              <KebabToggle
                                onToggle={[Function]}
                              />
                            }
                          >
                            <div
                              className="pf-c-dropdown"
                              data-ouia-component-id="toolbar-actions"
                              data-ouia-component-type="PF4/Dropdown"
                              data-ouia-safe={true}
                            >
                              <KebabToggle
                                aria-haspopup={true}
                                getMenuRef={[Function]}
                                id="pf-dropdown-toggle-id-13"
                                isOpen={false}
                                isPlain={true}
                                key=".0"
                                onEnter={[Function]}
                                onToggle={[Function]}
                                parentRef={
                                  Object {
                                    "current": <div
                                      class="pf-c-dropdown"
                                      data-ouia-component-id="toolbar-actions"
                                      data-ouia-component-type="PF4/Dropdown"
                                      data-ouia-safe="true"
                                    >
                                      <button
                                        aria-expanded="false"
                                        aria-haspopup="true"
                                        aria-label="Actions"
                                        class="pf-c-dropdown__toggle pf-m-plain"
                                        id="pf-dropdown-toggle-id-13"
                                        type="button"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          fill="currentColor"
                                          height="1em"
                                          role="img"
                                          style="vertical-align: -0.125em;"
                                          viewBox="0 0 192 512"
                                          width="1em"
                                        >
                                          <path
                                            d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                          />
                                        </svg>
                                      </button>
                                    </div>,
                                  }
                                }
                              >
                                <Toggle
                                  aria-haspopup={true}
                                  aria-label="Actions"
                                  bubbleEvent={false}
                                  className=""
                                  getMenuRef={[Function]}
                                  id="pf-dropdown-toggle-id-13"
                                  isActive={false}
                                  isDisabled={false}
                                  isOpen={false}
                                  isPlain={true}
                                  isPrimary={false}
                                  isSplitButton={false}
                                  onEnter={[Function]}
                                  onToggle={[Function]}
                                  parentRef={
                                    Object {
                                      "current": <div
                                        class="pf-c-dropdown"
                                        data-ouia-component-id="toolbar-actions"
                                        data-ouia-component-type="PF4/Dropdown"
                                        data-ouia-safe="true"
                                      >
                                        <button
                                          aria-expanded="false"
                                          aria-haspopup="true"
                                          aria-label="Actions"
                                          class="pf-c-dropdown__toggle pf-m-plain"
                                          id="pf-dropdown-toggle-id-13"
                                          type="button"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            fill="currentColor"
                                            height="1em"
                                            role="img"
                                            style="vertical-align: -0.125em;"
                                            viewBox="0 0 192 512"
                                            width="1em"
                                          >
                                            <path
                                              d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                            />
                                          </svg>
                                        </button>
                                      </div>,
                                    }
                                  }
                                >
                                  <button
                                    aria-expanded={false}
                                    aria-haspopup={true}
                                    aria-label="Actions"
                                    className="pf-c-dropdown__toggle pf-m-plain"
                                    disabled={false}
                                    id="pf-dropdown-toggle-id-13"
                                    onClick={[Function]}
                                    onKeyDown={[Function]}
                                    type="button"
                                  >
                                    <EllipsisVIcon
                                      color="currentColor"
                                      noVerticalAlign={false}
                                      size="sm"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        aria-labelledby={null}
                                        fill="currentColor"
                                        height="1em"
                                        role="img"
                                        style={
                                          Object {
                                            "verticalAlign": "-0.125em",
                                          }
                                        }
                                        viewBox="0 0 192 512"
                                        width="1em"
                                      >
                                        <path
                                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                        />
                                      </svg>
                                    </EllipsisVIcon>
                                  </button>
                                </Toggle>
                              </KebabToggle>
                            </div>
                          </DropdownWithContext>
                        </Dropdown>
                      </div>
                    </ToolbarItem>
                  </Actions>
                  <ToolbarItem
                    className="ins-c-primary-toolbar__pagination"
                  >
                    <div
                      className="pf-c-toolbar__item ins-c-primary-toolbar__pagination"
                    >
                      <Pagination
                        className=""
                        defaultToFullPage={false}
                        firstPage={1}
                        isCompact={true}
                        isDisabled={false}
                        isSticky={false}
                        itemCount={0}
                        itemsEnd={null}
                        itemsStart={null}
                        offset={0}
                        onFirstClick={[Function]}
                        onLastClick={[Function]}
                        onNextClick={[Function]}
                        onPageInput={[Function]}
                        onPerPageSelect={[Function]}
                        onPreviousClick={[Function]}
                        onSetPage={[Function]}
                        ouiaId="pagination-top"
                        ouiaSafe={true}
                        page={1}
                        perPage={1}
                        perPageOptions={
                          Array [
                            Object {
                              "title": "10",
                              "value": 10,
                            },
                            Object {
                              "title": "20",
                              "value": 20,
                            },
                            Object {
                              "title": "50",
                              "value": 50,
                            },
                            Object {
                              "title": "100",
                              "value": 100,
                            },
                          ]
                        }
                        titles={
                          Object {
                            "currPage": "Current page",
                            "items": "",
                            "itemsPerPage": "Items per page",
                            "optionsToggle": "Items per page",
                            "page": "",
                            "paginationTitle": "Pagination",
                            "perPageSuffix": "per page",
                            "toFirstPage": "Go to first page",
                            "toLastPage": "Go to last page",
                            "toNextPage": "Go to next page",
                            "toPreviousPage": "Go to previous page",
                          }
                        }
                        toggleTemplate={[Function]}
                        variant="top"
                        widgetId="pagination-options-menu"
                      >
                        <div
                          className="pf-c-pagination pf-m-compact"
                          data-ouia-component-id="pagination-top"
                          data-ouia-component-type="PF4/Pagination"
                          data-ouia-safe={true}
                          id="pagination-options-menu-2"
                        >
                          <div
                            className="pf-c-pagination__total-items"
                          >
                            <ToggleTemplate
                              firstIndex={0}
                              itemCount={0}
                              itemsTitle=""
                              lastIndex={0}
                            >
                              <b>
                                0
                                 - 
                                0
                              </b>
                               
                              of 
                              <b>
                                0
                              </b>
                               
                            </ToggleTemplate>
                          </div>
                          <PaginationOptionsMenu
                            className=""
                            defaultToFullPage={false}
                            dropDirection="down"
                            firstIndex={0}
                            isDisabled={false}
                            itemCount={0}
                            itemsPerPageTitle="Items per page"
                            itemsTitle=""
                            lastIndex={0}
                            lastPage={0}
                            onPerPageSelect={[Function]}
                            optionsToggle="Items per page"
                            page={0}
                            perPage={1}
                            perPageOptions={
                              Array [
                                Object {
                                  "title": "10",
                                  "value": 10,
                                },
                                Object {
                                  "title": "20",
                                  "value": 20,
                                },
                                Object {
                                  "title": "50",
                                  "value": 50,
                                },
                                Object {
                                  "title": "100",
                                  "value": 100,
                                },
                              ]
                            }
                            perPageSuffix="per page"
                            toggleTemplate={[Function]}
                            widgetId="pagination-options-menu"
                          >
                            <DropdownWithContext
                              autoFocus={true}
                              className=""
                              direction="down"
                              dropdownItems={
                                Array [
                                  <DropdownItem
                                    className=""
                                    component="button"
                                    data-action="per-page-10"
                                    onClick={[Function]}
                                  >
                                    10
                                     per page
                                  </DropdownItem>,
                                  <DropdownItem
                                    className=""
                                    component="button"
                                    data-action="per-page-20"
                                    onClick={[Function]}
                                  >
                                    20
                                     per page
                                  </DropdownItem>,
                                  <DropdownItem
                                    className=""
                                    component="button"
                                    data-action="per-page-50"
                                    onClick={[Function]}
                                  >
                                    50
                                     per page
                                  </DropdownItem>,
                                  <DropdownItem
                                    className=""
                                    component="button"
                                    data-action="per-page-100"
                                    onClick={[Function]}
                                  >
                                    100
                                     per page
                                  </DropdownItem>,
                                ]
                              }
                              isGrouped={false}
                              isOpen={false}
                              isPlain={true}
                              menuAppendTo="inline"
                              onSelect={[Function]}
                              position="left"
                              toggle={
                                <OptionsToggle
                                  firstIndex={0}
                                  isDisabled={false}
                                  isOpen={false}
                                  itemCount={0}
                                  itemsPerPageTitle="Items per page"
                                  itemsTitle=""
                                  lastIndex={0}
                                  onToggle={[Function]}
                                  optionsToggle="Items per page"
                                  parentRef={null}
                                  showToggle={true}
                                  toggleTemplate={[Function]}
                                  widgetId="pagination-options-menu"
                                />
                              }
                            >
                              <div
                                className="pf-c-options-menu"
                                data-ouia-component-type="PF4/PaginationOptionsMenu"
                                data-ouia-safe={true}
                              >
                                <OptionsToggle
                                  aria-haspopup={true}
                                  firstIndex={0}
                                  getMenuRef={[Function]}
                                  id="pf-dropdown-toggle-id-14"
                                  isDisabled={false}
                                  isOpen={false}
                                  isPlain={true}
                                  itemCount={0}
                                  itemsPerPageTitle="Items per page"
                                  itemsTitle=""
                                  key=".0"
                                  lastIndex={0}
                                  onEnter={[Function]}
                                  onToggle={[Function]}
                                  optionsToggle="Items per page"
                                  parentRef={
                                    Object {
                                      "current": <div
                                        class="pf-c-options-menu"
                                        data-ouia-component-type="PF4/PaginationOptionsMenu"
                                        data-ouia-safe="true"
                                      >
                                        <div
                                          class="pf-c-options-menu__toggle pf-m-plain pf-m-text"
                                        >
                                          <span
                                            class="pf-c-options-menu__toggle-text"
                                          >
                                            <b>
                                              0
                                               - 
                                              0
                                            </b>
                                             
                                            of 
                                            <b>
                                              0
                                            </b>
                                             
                                            
                                          </span>
                                          <button
                                            aria-expanded="false"
                                            aria-label="Items per page"
                                            class="  pf-c-options-menu__toggle-button"
                                            data-ouia-component-id="OUIA-Generated-DropdownToggle-4"
                                            data-ouia-component-type="PF4/DropdownToggle"
                                            data-ouia-safe="true"
                                            disabled=""
                                            id="pagination-options-menu-toggle-2"
                                            type="button"
                                          >
                                            <span
                                              class="pf-c-options-menu__toggle-button-icon"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                fill="currentColor"
                                                height="1em"
                                                role="img"
                                                style="vertical-align: -0.125em;"
                                                viewBox="0 0 320 512"
                                                width="1em"
                                              >
                                                <path
                                                  d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                />
                                              </svg>
                                            </span>
                                          </button>
                                        </div>
                                      </div>,
                                    }
                                  }
                                  showToggle={true}
                                  toggleTemplate={[Function]}
                                  widgetId="pagination-options-menu"
                                >
                                  <div
                                    className="pf-c-options-menu__toggle pf-m-plain pf-m-text"
                                  >
                                    <span
                                      className="pf-c-options-menu__toggle-text"
                                    >
                                      <ToggleTemplate
                                        firstIndex={0}
                                        itemCount={0}
                                        itemsTitle=""
                                        lastIndex={0}
                                      >
                                        <b>
                                          0
                                           - 
                                          0
                                        </b>
                                         
                                        of 
                                        <b>
                                          0
                                        </b>
                                         
                                      </ToggleTemplate>
                                    </span>
                                    <DropdownToggle
                                      aria-label="Items per page"
                                      className="pf-c-options-menu__toggle-button"
                                      id="pagination-options-menu-toggle-2"
                                      isDisabled={true}
                                      isOpen={false}
                                      onEnter={[Function]}
                                      onToggle={[Function]}
                                      parentRef={
                                        Object {
                                          "current": <div
                                            class="pf-c-options-menu"
                                            data-ouia-component-type="PF4/PaginationOptionsMenu"
                                            data-ouia-safe="true"
                                          >
                                            <div
                                              class="pf-c-options-menu__toggle pf-m-plain pf-m-text"
                                            >
                                              <span
                                                class="pf-c-options-menu__toggle-text"
                                              >
                                                <b>
                                                  0
                                                   - 
                                                  0
                                                </b>
                                                 
                                                of 
                                                <b>
                                                  0
                                                </b>
                                                 
                                                
                                              </span>
                                              <button
                                                aria-expanded="false"
                                                aria-label="Items per page"
                                                class="  pf-c-options-menu__toggle-button"
                                                data-ouia-component-id="OUIA-Generated-DropdownToggle-4"
                                                data-ouia-component-type="PF4/DropdownToggle"
                                                data-ouia-safe="true"
                                                disabled=""
                                                id="pagination-options-menu-toggle-2"
                                                type="button"
                                              >
                                                <span
                                                  class="pf-c-options-menu__toggle-button-icon"
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    fill="currentColor"
                                                    height="1em"
                                                    role="img"
                                                    style="vertical-align: -0.125em;"
                                                    viewBox="0 0 320 512"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                    />
                                                  </svg>
                                                </span>
                                              </button>
                                            </div>
                                          </div>,
                                        }
                                      }
                                    >
                                      <Toggle
                                        aria-label="Items per page"
                                        bubbleEvent={false}
                                        className="pf-c-options-menu__toggle-button"
                                        data-ouia-component-id="OUIA-Generated-DropdownToggle-4"
                                        data-ouia-component-type="PF4/DropdownToggle"
                                        data-ouia-safe={true}
                                        getMenuRef={null}
                                        id="pagination-options-menu-toggle-2"
                                        isActive={false}
                                        isDisabled={true}
                                        isOpen={false}
                                        isPlain={false}
                                        isPrimary={false}
                                        isSplitButton={false}
                                        onEnter={[Function]}
                                        onToggle={[Function]}
                                        parentRef={
                                          Object {
                                            "current": <div
                                              class="pf-c-options-menu"
                                              data-ouia-component-type="PF4/PaginationOptionsMenu"
                                              data-ouia-safe="true"
                                            >
                                              <div
                                                class="pf-c-options-menu__toggle pf-m-plain pf-m-text"
                                              >
                                                <span
                                                  class="pf-c-options-menu__toggle-text"
                                                >
                                                  <b>
                                                    0
                                                     - 
                                                    0
                                                  </b>
                                                   
                                                  of 
                                                  <b>
                                                    0
                                                  </b>
                                                   
                                                  
                                                </span>
                                                <button
                                                  aria-expanded="false"
                                                  aria-label="Items per page"
                                                  class="  pf-c-options-menu__toggle-button"
                                                  data-ouia-component-id="OUIA-Generated-DropdownToggle-4"
                                                  data-ouia-component-type="PF4/DropdownToggle"
                                                  data-ouia-safe="true"
                                                  disabled=""
                                                  id="pagination-options-menu-toggle-2"
                                                  type="button"
                                                >
                                                  <span
                                                    class="pf-c-options-menu__toggle-button-icon"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style="vertical-align: -0.125em;"
                                                      viewBox="0 0 320 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                      />
                                                    </svg>
                                                  </span>
                                                </button>
                                              </div>
                                            </div>,
                                          }
                                        }
                                      >
                                        <button
                                          aria-expanded={false}
                                          aria-label="Items per page"
                                          className="  pf-c-options-menu__toggle-button"
                                          data-ouia-component-id="OUIA-Generated-DropdownToggle-4"
                                          data-ouia-component-type="PF4/DropdownToggle"
                                          data-ouia-safe={true}
                                          disabled={true}
                                          id="pagination-options-menu-toggle-2"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          type="button"
                                        >
                                          <span
                                            className="pf-c-options-menu__toggle-button-icon"
                                          >
                                            <CaretDownIcon
                                              color="currentColor"
                                              noVerticalAlign={false}
                                              size="sm"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-labelledby={null}
                                                fill="currentColor"
                                                height="1em"
                                                role="img"
                                                style={
                                                  Object {
                                                    "verticalAlign": "-0.125em",
                                                  }
                                                }
                                                viewBox="0 0 320 512"
                                                width="1em"
                                              >
                                                <path
                                                  d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                />
                                              </svg>
                                            </CaretDownIcon>
                                          </span>
                                        </button>
                                      </Toggle>
                                    </DropdownToggle>
                                  </div>
                                </OptionsToggle>
                              </div>
                            </DropdownWithContext>
                          </PaginationOptionsMenu>
                          <Navigation
                            className=""
                            currPage="Current page"
                            firstPage={1}
                            isCompact={true}
                            isDisabled={false}
                            lastPage={0}
                            onFirstClick={[Function]}
                            onLastClick={[Function]}
                            onNextClick={[Function]}
                            onPageInput={[Function]}
                            onPreviousClick={[Function]}
                            onSetPage={[Function]}
                            page={0}
                            pagesTitle=""
                            paginationTitle="Pagination"
                            perPage={1}
                            toFirstPage="Go to first page"
                            toLastPage="Go to last page"
                            toNextPage="Go to next page"
                            toPreviousPage="Go to previous page"
                          >
                            <nav
                              aria-label="Pagination"
                              className="pf-c-pagination__nav"
                            >
                              <div
                                className="pf-c-pagination__nav-control"
                              >
                                <Button
                                  aria-label="Go to previous page"
                                  data-action="previous"
                                  isDisabled={true}
                                  onClick={[Function]}
                                  variant="plain"
                                >
                                  <button
                                    aria-disabled={true}
                                    aria-label="Go to previous page"
                                    className="pf-c-button pf-m-plain pf-m-disabled"
                                    data-action="previous"
                                    data-ouia-component-id="OUIA-Generated-Button-plain-1"
                                    data-ouia-component-type="PF4/Button"
                                    data-ouia-safe={true}
                                    disabled={true}
                                    onClick={[Function]}
                                    role={null}
                                    tabIndex={null}
                                    type="button"
                                  >
                                    <AngleLeftIcon
                                      color="currentColor"
                                      noVerticalAlign={false}
                                      size="sm"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        aria-labelledby={null}
                                        fill="currentColor"
                                        height="1em"
                                        role="img"
                                        style={
                                          Object {
                                            "verticalAlign": "-0.125em",
                                          }
                                        }
                                        viewBox="0 0 256 512"
                                        width="1em"
                                      >
                                        <path
                                          d="M31.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L127.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L201.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34z"
                                        />
                                      </svg>
                                    </AngleLeftIcon>
                                  </button>
                                </Button>
                              </div>
                              <div
                                className="pf-c-pagination__nav-control"
                              >
                                <Button
                                  aria-label="Go to next page"
                                  data-action="next"
                                  isDisabled={true}
                                  onClick={[Function]}
                                  variant="plain"
                                >
                                  <button
                                    aria-disabled={true}
                                    aria-label="Go to next page"
                                    className="pf-c-button pf-m-plain pf-m-disabled"
                                    data-action="next"
                                    data-ouia-component-id="OUIA-Generated-Button-plain-2"
                                    data-ouia-component-type="PF4/Button"
                                    data-ouia-safe={true}
                                    disabled={true}
                                    onClick={[Function]}
                                    role={null}
                                    tabIndex={null}
                                    type="button"
                                  >
                                    <AngleRightIcon
                                      color="currentColor"
                                      noVerticalAlign={false}
                                      size="sm"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        aria-labelledby={null}
                                        fill="currentColor"
                                        height="1em"
                                        role="img"
                                        style={
                                          Object {
                                            "verticalAlign": "-0.125em",
                                          }
                                        }
                                        viewBox="0 0 256 512"
                                        width="1em"
                                      >
                                        <path
                                          d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                        />
                                      </svg>
                                    </AngleRightIcon>
                                  </button>
                                </Button>
                              </div>
                            </nav>
                          </Navigation>
                        </div>
                      </Pagination>
                    </div>
                  </ToolbarItem>
                </div>
                <ToolbarExpandableContent
                  chipContainerRef={
                    Object {
                      "current": null,
                    }
                  }
                  clearFiltersButtonText="Clear all filters"
                  expandableContentRef={
                    Object {
                      "current": <div
                        class="pf-c-toolbar__expandable-content"
                        id="ins-primary-data-toolbar-expandable-content-2"
                      >
                        <div
                          class="pf-c-toolbar__group"
                        />
                      </div>,
                    }
                  }
                  id="ins-primary-data-toolbar-expandable-content-2"
                  isExpanded={false}
                  showClearFiltersButton={false}
                >
                  <div
                    className="pf-c-toolbar__expandable-content"
                    id="ins-primary-data-toolbar-expandable-content-2"
                  >
                    <ForwardRef>
                      <ToolbarGroupWithRef
                        innerRef={null}
                      >
                        <div
                          className="pf-c-toolbar__group"
                        />
                      </ToolbarGroupWithRef>
                    </ForwardRef>
                  </div>
                </ToolbarExpandableContent>
              </div>
            </ToolbarContent>
            <ToolbarChipGroupContent
              chipGroupContentRef={
                Object {
                  "current": <div
                    class="pf-c-toolbar__content pf-m-hidden"
                    hidden=""
                  >
                    <div
                      class="pf-c-toolbar__group"
                    />
                  </div>,
                }
              }
              clearFiltersButtonText="Clear all filters"
              collapseListedFiltersBreakpoint="lg"
              numberOfFilters={0}
              showClearFiltersButton={false}
            >
              <div
                className="pf-c-toolbar__content pf-m-hidden"
                hidden={true}
              >
                <ForwardRef
                  className=""
                >
                  <ToolbarGroupWithRef
                    className=""
                    innerRef={null}
                  >
                    <div
                      className="pf-c-toolbar__group"
                    />
                  </ToolbarGroupWithRef>
                </ForwardRef>
              </div>
            </ToolbarChipGroupContent>
          </div>
        </Toolbar>
      </PrimaryToolbar>
    </CVEsTableToolbarWithContext>
  </CVEsTableToolbar>
</injectIntl(CVEsTableToolbar)>
`;
