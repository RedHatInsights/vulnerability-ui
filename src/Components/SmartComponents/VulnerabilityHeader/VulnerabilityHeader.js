import { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';
import { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';
import propTypes from 'prop-types';
import React from 'react';
import { connect } from 'react-redux';
import { Link, withRouter } from 'react-router-dom';
import { getHeader } from '../../../Helpers/HeaderHelper';
import { FormattedMessage } from 'react-intl';
import messages from '../../../Messages';

export class VulnerabilityHeader extends React.Component {
    static propTypes = {
        breadcrumbs: propTypes.any,
        title: propTypes.any,
        showBreadcrumb: propTypes.bool,
        children: propTypes.any,
        intl: propTypes.any
    };

    static defaultProps = {
        title: <FormattedMessage {...messages.cvesHeader} />,
        showBreadcrumb: true
    };

    constructor(props) {
        super(props);
    }

    buildBreadcrumbs(breadcrumbs) {
        return (
            <Breadcrumb>
                {breadcrumbs.map(item => (
                    <BreadcrumbItem key={item.title} isActive={item.isActive}>
                        {(item.to && <Link to={item.to}>{item.title}</Link>) || item.title}
                    </BreadcrumbItem>
                ))}
            </Breadcrumb>
        );
    }

    render() {
        const { breadcrumbs, title, showBreadcrumb } = this.props;
        return (
            <React.Fragment>
                <PageHeader>
                    {showBreadcrumb && breadcrumbs && breadcrumbs.length !== 0 && this.buildBreadcrumbs(breadcrumbs)}
                    <PageHeaderTitle title={title} />

                    {this.props.children}
                </PageHeader>
            </React.Fragment>
        );
    }
}

function mapStateToProps(state) {
    return {
        breadcrumbs: getHeader(state)
    };
}

export default withRouter(
    connect(
        mapStateToProps,
        null
    )(VulnerabilityHeader)
);
