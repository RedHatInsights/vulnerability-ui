// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CVEPageDetails component should render with data 1`] = `
<CVEPageDetails
  data={
    Object {
      "data": Object {
        "data": Object {
          "cvss3_score": "7.000",
          "description": "Lorem ipsum",
          "impact": "Important",
          "mitre_link": Object {
            "_owner": null,
            "_store": Object {},
            "key": null,
            "props": Object {
              "children": "MITRE Database",
              "href": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-6454",
            },
            "ref": null,
            "type": "a",
          },
          "package_list": Array [
            Object {
              "_owner": null,
              "_store": Object {},
              "key": "systemd-resolved-219-62.el7_6.5.i686",
              "props": Object {
                "children": "systemd-resolved-219-62.el7_6.5.i686",
              },
              "ref": null,
              "type": "li",
            },
            Object {
              "_owner": null,
              "_store": Object {},
              "key": "systemd-resolved-219-62.el7_6.5.x86_64",
              "props": Object {
                "children": "systemd-resolved-219-62.el7_6.5.x86_64",
              },
              "ref": null,
              "type": "li",
            },
            Object {
              "_owner": null,
              "_store": Object {},
              "key": "systemd-devel-219-62.el7_6.5.ppc",
              "props": Object {
                "children": "systemd-devel-219-62.el7_6.5.ppc",
              },
              "ref": null,
              "type": "li",
            },
          ],
          "public_date": "February 18th, 2019",
          "rh_link": Object {
            "_owner": null,
            "_store": Object {},
            "key": null,
            "props": Object {
              "children": "Red Hat CVE Database",
              "href": "https://access.redhat.com/security/cve/CVE-2019-6454",
            },
            "ref": null,
            "type": "a",
          },
          "synopsis": "CVE-2019-6454",
        },
        "isLoading": false,
        "meta": Object {},
      },
    }
  }
>
  <Component
    hasGutter={true}
  >
    <div
      className="pf-l-grid pf-m-gutter"
    >
      <Component
        md={8}
        sm={12}
      >
        <div
          className="pf-l-grid__item pf-m-12-col-on-sm pf-m-8-col-on-md"
        >
          <WithLoader
            loading={true}
            variant="spinner"
          >
            <Spinner
              centered={true}
            >
              <div
                className="ins-c-spinner ins-m-center"
                role="status"
              >
                <span
                  className="pf-u-screen-reader"
                >
                  Loading...
                </span>
              </div>
            </Spinner>
          </WithLoader>
        </div>
      </Component>
      <Component
        className="severity-info-box"
        md={4}
        sm={12}
      >
        <div
          className="pf-l-grid__item pf-m-12-col-on-sm pf-m-4-col-on-md severity-info-box"
        >
          <injectIntl(CVEPageDetailsSeverity)>
            <CVEPageDetailsSeverity
              impact="Unknown"
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatDateToParts": [Function],
                  "formatDisplayName": [Function],
                  "formatHTMLMessage": [Function],
                  "formatList": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatNumberToParts": [Function],
                  "formatPlural": [Function],
                  "formatRelativeTime": [Function],
                  "formatTime": [Function],
                  "formatTimeToParts": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getDisplayNames": [Function],
                    "getListFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralRules": [Function],
                    "getRelativeTimeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {
                    "default.cancel": "Cancel",
                    "default.delete": "Delete",
                    "default.remove": "Remove",
                    "default.save": "Save",
                  },
                  "onError": [Function],
                  "textComponent": Symbol(react.fragment),
                  "timeZone": undefined,
                }
              }
            >
              <Component
                hasGutter={true}
              >
                <div
                  className="pf-l-stack pf-m-gutter"
                >
                  <Component>
                    <div
                      className="pf-l-stack__item"
                    >
                      <CVEInfoBox
                        descriptionContent={
                          <Popover
                            appendTo={[Function]}
                            aria-label=""
                            bodyContent={
                              <Unknown>
                                <Unknown
                                  component="p"
                                >
                                  
                                </Unknown>
                              </Unknown>
                            }
                            boundary="window"
                            className=""
                            closeBtnAriaLabel="Close"
                            distance={25}
                            enableFlip={true}
                            flipBehavior={
                              Array [
                                "top",
                                "right",
                                "bottom",
                                "left",
                                "top",
                                "right",
                                "bottom",
                              ]
                            }
                            footerContent={
                              <a
                                href="https://access.redhat.com/security/updates/classification/"
                                rel="noopener noreferrer"
                                target="_blank"
                              >
                                Learn more about security ratings
                                  
                                <ExternalLinkAltIcon
                                  color="currentColor"
                                  noVerticalAlign={false}
                                  size="sm"
                                />
                              </a>
                            }
                            headerContent={
                              <div>
                                Unknown severity
                              </div>
                            }
                            hideOnOutsideClick={true}
                            isVisible={null}
                            maxWidth="calc(1rem + 1rem + 18.75rem)"
                            onHidden={[Function]}
                            onHide={[Function]}
                            onMount={[Function]}
                            onShow={[Function]}
                            onShown={[Function]}
                            position="bottom"
                            shouldClose={[Function]}
                            tippyProps={Object {}}
                            zIndex={9999}
                          >
                            <a>
                              Learn more
                            </a>
                          </Popover>
                        }
                        descriptionTitle="Unknown severity"
                        titleColor="severity-unknown"
                        titleContent={
                          <UnknownIcon
                            color="currentColor"
                            noVerticalAlign={false}
                            size="lg"
                          />
                        }
                      >
                        <Component
                          className="infobox-square"
                          hasGutter={true}
                        >
                          <div
                            className="pf-l-split pf-m-gutter infobox-square"
                          >
                            <WithLoader
                              loading={true}
                            >
                              <Skeleton
                                isDark={false}
                                size="lg"
                              >
                                <div
                                  className="ins-c-skeleton ins-c-skeleton__lg"
                                >
                                  Â 
                                </div>
                              </Skeleton>
                            </WithLoader>
                          </div>
                        </Component>
                      </CVEInfoBox>
                    </div>
                  </Component>
                  <Component>
                    <div
                      className="pf-l-stack__item"
                    >
                      <CVEInfoBox
                        descriptionTitle="CVSS 3.0 base score"
                        titleContent={
                          <Unknown>
                            <Unknown
                              component="h3"
                            >
                              <Tooltip
                                appendTo={[Function]}
                                aria="describedby"
                                boundary="window"
                                className=""
                                content="CVEs published before 2005 (approximately) did not have a CVSS Base Score."
                                distance={15}
                                enableFlip={true}
                                entryDelay={500}
                                exitDelay={500}
                                flipBehavior={
                                  Array [
                                    "top",
                                    "right",
                                    "bottom",
                                    "left",
                                    "top",
                                    "right",
                                    "bottom",
                                  ]
                                }
                                id=""
                                isAppLauncher={false}
                                isContentLeftAligned={false}
                                isVisible={false}
                                maxWidth="18.75rem"
                                position="left"
                                tippyProps={Object {}}
                                trigger="mouseenter focus"
                                zIndex={9999}
                              >
                                <span>
                                  N/A
                                </span>
                              </Tooltip>
                            </Unknown>
                          </Unknown>
                        }
                      >
                        <Component
                          className="infobox-square"
                          hasGutter={true}
                        >
                          <div
                            className="pf-l-split pf-m-gutter infobox-square"
                          >
                            <WithLoader
                              loading={true}
                            >
                              <Skeleton
                                isDark={false}
                                size="lg"
                              >
                                <div
                                  className="ins-c-skeleton ins-c-skeleton__lg"
                                >
                                  Â 
                                </div>
                              </Skeleton>
                            </WithLoader>
                          </div>
                        </Component>
                      </CVEInfoBox>
                    </div>
                  </Component>
                  <Component>
                    <div
                      className="pf-l-stack__item"
                    >
                      <injectIntl(CvssVector)>
                        <CvssVector
                          intl={
                            Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatDateToParts": [Function],
                              "formatDisplayName": [Function],
                              "formatHTMLMessage": [Function],
                              "formatList": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatNumberToParts": [Function],
                              "formatPlural": [Function],
                              "formatRelativeTime": [Function],
                              "formatTime": [Function],
                              "formatTimeToParts": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getDisplayNames": [Function],
                                "getListFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralRules": [Function],
                                "getRelativeTimeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {
                                "default.cancel": "Cancel",
                                "default.delete": "Delete",
                                "default.remove": "Remove",
                                "default.save": "Save",
                              },
                              "onError": [Function],
                              "textComponent": Symbol(react.fragment),
                              "timeZone": undefined,
                            }
                          }
                        >
                          <Component>
                            <div
                              className="pf-c-content"
                            >
                              <WithLoader
                                loading={true}
                              >
                                <Skeleton
                                  isDark={false}
                                  size="lg"
                                >
                                  <div
                                    className="ins-c-skeleton ins-c-skeleton__lg"
                                  >
                                    Â 
                                  </div>
                                </Skeleton>
                              </WithLoader>
                              <WithLoader
                                loading={true}
                              >
                                <Skeleton
                                  isDark={false}
                                  size="lg"
                                >
                                  <div
                                    className="ins-c-skeleton ins-c-skeleton__lg"
                                  >
                                    Â 
                                  </div>
                                </Skeleton>
                              </WithLoader>
                            </div>
                          </Component>
                        </CvssVector>
                      </injectIntl(CvssVector)>
                    </div>
                  </Component>
                </div>
              </Component>
            </CVEPageDetailsSeverity>
          </injectIntl(CVEPageDetailsSeverity)>
        </div>
      </Component>
      <injectIntl(CSAwRuleBox)>
        <CSAwRuleBox
          intl={
            Object {
              "defaultFormats": Object {},
              "defaultLocale": "en",
              "formatDate": [Function],
              "formatDateToParts": [Function],
              "formatDisplayName": [Function],
              "formatHTMLMessage": [Function],
              "formatList": [Function],
              "formatMessage": [Function],
              "formatNumber": [Function],
              "formatNumberToParts": [Function],
              "formatPlural": [Function],
              "formatRelativeTime": [Function],
              "formatTime": [Function],
              "formatTimeToParts": [Function],
              "formats": Object {},
              "formatters": Object {
                "getDateTimeFormat": [Function],
                "getDisplayNames": [Function],
                "getListFormat": [Function],
                "getMessageFormat": [Function],
                "getNumberFormat": [Function],
                "getPluralRules": [Function],
                "getRelativeTimeFormat": [Function],
              },
              "locale": "en",
              "messages": Object {
                "default.cancel": "Cancel",
                "default.delete": "Delete",
                "default.remove": "Remove",
                "default.save": "Save",
              },
              "onError": [Function],
              "textComponent": Symbol(react.fragment),
              "timeZone": undefined,
            }
          }
          rules={Array []}
        />
      </injectIntl(CSAwRuleBox)>
    </div>
  </Component>
</CVEPageDetails>
`;

exports[`CVEPageDetails component should render with enabled WithLoader 1`] = `
<CVEPageDetails
  data={
    Object {
      "data": Object {},
      "isLoading": true,
      "meta": Object {},
    }
  }
>
  <Component
    hasGutter={true}
  >
    <div
      className="pf-l-grid pf-m-gutter"
    >
      <Component
        md={8}
        sm={12}
      >
        <div
          className="pf-l-grid__item pf-m-12-col-on-sm pf-m-8-col-on-md"
        >
          <WithLoader
            loading={true}
            variant="spinner"
          >
            <Spinner
              centered={true}
            >
              <div
                className="ins-c-spinner ins-m-center"
                role="status"
              >
                <span
                  className="pf-u-screen-reader"
                >
                  Loading...
                </span>
              </div>
            </Spinner>
          </WithLoader>
        </div>
      </Component>
      <Component
        className="severity-info-box"
        md={4}
        sm={12}
      >
        <div
          className="pf-l-grid__item pf-m-12-col-on-sm pf-m-4-col-on-md severity-info-box"
        >
          <injectIntl(CVEPageDetailsSeverity)>
            <CVEPageDetailsSeverity
              impact="Unknown"
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatDateToParts": [Function],
                  "formatDisplayName": [Function],
                  "formatHTMLMessage": [Function],
                  "formatList": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatNumberToParts": [Function],
                  "formatPlural": [Function],
                  "formatRelativeTime": [Function],
                  "formatTime": [Function],
                  "formatTimeToParts": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getDisplayNames": [Function],
                    "getListFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralRules": [Function],
                    "getRelativeTimeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {
                    "default.cancel": "Cancel",
                    "default.delete": "Delete",
                    "default.remove": "Remove",
                    "default.save": "Save",
                  },
                  "onError": [Function],
                  "textComponent": Symbol(react.fragment),
                  "timeZone": undefined,
                }
              }
            >
              <Component
                hasGutter={true}
              >
                <div
                  className="pf-l-stack pf-m-gutter"
                >
                  <Component>
                    <div
                      className="pf-l-stack__item"
                    >
                      <CVEInfoBox
                        descriptionContent={
                          <Popover
                            appendTo={[Function]}
                            aria-label=""
                            bodyContent={
                              <Unknown>
                                <Unknown
                                  component="p"
                                >
                                  
                                </Unknown>
                              </Unknown>
                            }
                            boundary="window"
                            className=""
                            closeBtnAriaLabel="Close"
                            distance={25}
                            enableFlip={true}
                            flipBehavior={
                              Array [
                                "top",
                                "right",
                                "bottom",
                                "left",
                                "top",
                                "right",
                                "bottom",
                              ]
                            }
                            footerContent={
                              <a
                                href="https://access.redhat.com/security/updates/classification/"
                                rel="noopener noreferrer"
                                target="_blank"
                              >
                                Learn more about security ratings
                                  
                                <ExternalLinkAltIcon
                                  color="currentColor"
                                  noVerticalAlign={false}
                                  size="sm"
                                />
                              </a>
                            }
                            headerContent={
                              <div>
                                Unknown severity
                              </div>
                            }
                            hideOnOutsideClick={true}
                            isVisible={null}
                            maxWidth="calc(1rem + 1rem + 18.75rem)"
                            onHidden={[Function]}
                            onHide={[Function]}
                            onMount={[Function]}
                            onShow={[Function]}
                            onShown={[Function]}
                            position="bottom"
                            shouldClose={[Function]}
                            tippyProps={Object {}}
                            zIndex={9999}
                          >
                            <a>
                              Learn more
                            </a>
                          </Popover>
                        }
                        descriptionTitle="Unknown severity"
                        titleColor="severity-unknown"
                        titleContent={
                          <UnknownIcon
                            color="currentColor"
                            noVerticalAlign={false}
                            size="lg"
                          />
                        }
                      >
                        <Component
                          className="infobox-square"
                          hasGutter={true}
                        >
                          <div
                            className="pf-l-split pf-m-gutter infobox-square"
                          >
                            <WithLoader
                              loading={true}
                            >
                              <Skeleton
                                isDark={false}
                                size="lg"
                              >
                                <div
                                  className="ins-c-skeleton ins-c-skeleton__lg"
                                >
                                  Â 
                                </div>
                              </Skeleton>
                            </WithLoader>
                          </div>
                        </Component>
                      </CVEInfoBox>
                    </div>
                  </Component>
                  <Component>
                    <div
                      className="pf-l-stack__item"
                    >
                      <CVEInfoBox
                        descriptionTitle="CVSS 3.0 base score"
                        titleContent={
                          <Unknown>
                            <Unknown
                              component="h3"
                            >
                              <Tooltip
                                appendTo={[Function]}
                                aria="describedby"
                                boundary="window"
                                className=""
                                content="CVEs published before 2005 (approximately) did not have a CVSS Base Score."
                                distance={15}
                                enableFlip={true}
                                entryDelay={500}
                                exitDelay={500}
                                flipBehavior={
                                  Array [
                                    "top",
                                    "right",
                                    "bottom",
                                    "left",
                                    "top",
                                    "right",
                                    "bottom",
                                  ]
                                }
                                id=""
                                isAppLauncher={false}
                                isContentLeftAligned={false}
                                isVisible={false}
                                maxWidth="18.75rem"
                                position="left"
                                tippyProps={Object {}}
                                trigger="mouseenter focus"
                                zIndex={9999}
                              >
                                <span>
                                  N/A
                                </span>
                              </Tooltip>
                            </Unknown>
                          </Unknown>
                        }
                      >
                        <Component
                          className="infobox-square"
                          hasGutter={true}
                        >
                          <div
                            className="pf-l-split pf-m-gutter infobox-square"
                          >
                            <WithLoader
                              loading={true}
                            >
                              <Skeleton
                                isDark={false}
                                size="lg"
                              >
                                <div
                                  className="ins-c-skeleton ins-c-skeleton__lg"
                                >
                                  Â 
                                </div>
                              </Skeleton>
                            </WithLoader>
                          </div>
                        </Component>
                      </CVEInfoBox>
                    </div>
                  </Component>
                  <Component>
                    <div
                      className="pf-l-stack__item"
                    >
                      <injectIntl(CvssVector)>
                        <CvssVector
                          intl={
                            Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatDateToParts": [Function],
                              "formatDisplayName": [Function],
                              "formatHTMLMessage": [Function],
                              "formatList": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatNumberToParts": [Function],
                              "formatPlural": [Function],
                              "formatRelativeTime": [Function],
                              "formatTime": [Function],
                              "formatTimeToParts": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getDisplayNames": [Function],
                                "getListFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralRules": [Function],
                                "getRelativeTimeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {
                                "default.cancel": "Cancel",
                                "default.delete": "Delete",
                                "default.remove": "Remove",
                                "default.save": "Save",
                              },
                              "onError": [Function],
                              "textComponent": Symbol(react.fragment),
                              "timeZone": undefined,
                            }
                          }
                        >
                          <Component>
                            <div
                              className="pf-c-content"
                            >
                              <WithLoader
                                loading={true}
                              >
                                <Skeleton
                                  isDark={false}
                                  size="lg"
                                >
                                  <div
                                    className="ins-c-skeleton ins-c-skeleton__lg"
                                  >
                                    Â 
                                  </div>
                                </Skeleton>
                              </WithLoader>
                              <WithLoader
                                loading={true}
                              >
                                <Skeleton
                                  isDark={false}
                                  size="lg"
                                >
                                  <div
                                    className="ins-c-skeleton ins-c-skeleton__lg"
                                  >
                                    Â 
                                  </div>
                                </Skeleton>
                              </WithLoader>
                            </div>
                          </Component>
                        </CvssVector>
                      </injectIntl(CvssVector)>
                    </div>
                  </Component>
                </div>
              </Component>
            </CVEPageDetailsSeverity>
          </injectIntl(CVEPageDetailsSeverity)>
        </div>
      </Component>
      <injectIntl(CSAwRuleBox)>
        <CSAwRuleBox
          intl={
            Object {
              "defaultFormats": Object {},
              "defaultLocale": "en",
              "formatDate": [Function],
              "formatDateToParts": [Function],
              "formatDisplayName": [Function],
              "formatHTMLMessage": [Function],
              "formatList": [Function],
              "formatMessage": [Function],
              "formatNumber": [Function],
              "formatNumberToParts": [Function],
              "formatPlural": [Function],
              "formatRelativeTime": [Function],
              "formatTime": [Function],
              "formatTimeToParts": [Function],
              "formats": Object {},
              "formatters": Object {
                "getDateTimeFormat": [Function],
                "getDisplayNames": [Function],
                "getListFormat": [Function],
                "getMessageFormat": [Function],
                "getNumberFormat": [Function],
                "getPluralRules": [Function],
                "getRelativeTimeFormat": [Function],
              },
              "locale": "en",
              "messages": Object {
                "default.cancel": "Cancel",
                "default.delete": "Delete",
                "default.remove": "Remove",
                "default.save": "Save",
              },
              "onError": [Function],
              "textComponent": Symbol(react.fragment),
              "timeZone": undefined,
            }
          }
          rules={Array []}
        />
      </injectIntl(CSAwRuleBox)>
    </div>
  </Component>
</CVEPageDetails>
`;

exports[`CVEPageDetails component should render with long description 1`] = `
<CVEPageDetails
  data={
    Object {
      "data": Object {
        "cvss3_score": "7.000",
        "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi consectetur molestie tristique. Proin ornare urna ut consequat pellentesque. Sed commodo porta sollicitudin. Interdum et malesuada fames ac ante ipsum primis in faucibus. Pellentesque habitant morbi tristique senectus et netus et nullam.",
        "impact": "Important",
        "package_list": Array [],
        "public_date": "February 18th, 2019",
        "synopsis": "CVE-2019-6454",
      },
      "isLoading": false,
      "meta": Object {},
    }
  }
>
  <Component
    hasGutter={true}
  >
    <div
      className="pf-l-grid pf-m-gutter"
    >
      <Component
        md={8}
        sm={12}
      >
        <div
          className="pf-l-grid__item pf-m-12-col-on-sm pf-m-8-col-on-md"
        >
          <WithLoader
            loading={true}
            variant="spinner"
          >
            <Spinner
              centered={true}
            >
              <div
                className="ins-c-spinner ins-m-center"
                role="status"
              >
                <span
                  className="pf-u-screen-reader"
                >
                  Loading...
                </span>
              </div>
            </Spinner>
          </WithLoader>
        </div>
      </Component>
      <Component
        className="severity-info-box"
        md={4}
        sm={12}
      >
        <div
          className="pf-l-grid__item pf-m-12-col-on-sm pf-m-4-col-on-md severity-info-box"
        >
          <injectIntl(CVEPageDetailsSeverity)
            cvss3_score="7.000"
            impact="Important"
          >
            <CVEPageDetailsSeverity
              cvss3_score="7.000"
              impact="Important"
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatDateToParts": [Function],
                  "formatDisplayName": [Function],
                  "formatHTMLMessage": [Function],
                  "formatList": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatNumberToParts": [Function],
                  "formatPlural": [Function],
                  "formatRelativeTime": [Function],
                  "formatTime": [Function],
                  "formatTimeToParts": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getDisplayNames": [Function],
                    "getListFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralRules": [Function],
                    "getRelativeTimeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {
                    "default.cancel": "Cancel",
                    "default.delete": "Delete",
                    "default.remove": "Remove",
                    "default.save": "Save",
                  },
                  "onError": [Function],
                  "textComponent": Symbol(react.fragment),
                  "timeZone": undefined,
                }
              }
            >
              <Component
                hasGutter={true}
              >
                <div
                  className="pf-l-stack pf-m-gutter"
                >
                  <Component>
                    <div
                      className="pf-l-stack__item"
                    >
                      <CVEInfoBox
                        descriptionContent={
                          <Popover
                            appendTo={[Function]}
                            aria-label=""
                            bodyContent={
                              <Unknown>
                                <Unknown
                                  component="p"
                                >
                                  This rating is given to flaws that can easily compromise the confidentiality, integrity, or availability
            of resources. These are the types of vulnerabilities that allow local users to gain privileges, allow
            unauthenticated remote users to view resources that should otherwise be protected by authentication,
            allow authenticated remote users to execute arbitrary code, or allow remote users to cause a denial
            of service.
                                </Unknown>
                              </Unknown>
                            }
                            boundary="window"
                            className=""
                            closeBtnAriaLabel="Close"
                            distance={25}
                            enableFlip={true}
                            flipBehavior={
                              Array [
                                "top",
                                "right",
                                "bottom",
                                "left",
                                "top",
                                "right",
                                "bottom",
                              ]
                            }
                            footerContent={
                              <a
                                href="https://access.redhat.com/security/updates/classification/"
                                rel="noopener noreferrer"
                                target="_blank"
                              >
                                Learn more about security ratings
                                  
                                <ExternalLinkAltIcon
                                  color="currentColor"
                                  noVerticalAlign={false}
                                  size="sm"
                                />
                              </a>
                            }
                            headerContent={
                              <div>
                                Important severity
                              </div>
                            }
                            hideOnOutsideClick={true}
                            isVisible={null}
                            maxWidth="calc(1rem + 1rem + 18.75rem)"
                            onHidden={[Function]}
                            onHide={[Function]}
                            onMount={[Function]}
                            onShow={[Function]}
                            onShown={[Function]}
                            position="bottom"
                            shouldClose={[Function]}
                            tippyProps={Object {}}
                            zIndex={9999}
                          >
                            <a>
                              Learn more
                            </a>
                          </Popover>
                        }
                        descriptionTitle="Important severity"
                        titleColor="severity-color-important"
                        titleContent={
                          <SecurityIcon
                            color="currentColor"
                            noVerticalAlign={false}
                            size="lg"
                          />
                        }
                      >
                        <Component
                          className="infobox-square"
                          hasGutter={true}
                        >
                          <div
                            className="pf-l-split pf-m-gutter infobox-square"
                          >
                            <WithLoader
                              loading={true}
                            >
                              <Skeleton
                                isDark={false}
                                size="lg"
                              >
                                <div
                                  className="ins-c-skeleton ins-c-skeleton__lg"
                                >
                                  Â 
                                </div>
                              </Skeleton>
                            </WithLoader>
                          </div>
                        </Component>
                      </CVEInfoBox>
                    </div>
                  </Component>
                  <Component>
                    <div
                      className="pf-l-stack__item"
                    >
                      <CVEInfoBox
                        descriptionTitle="CVSS 3.0 base score"
                        titleContent={
                          <Unknown>
                            <Unknown
                              component="h3"
                            >
                              7.0
                            </Unknown>
                          </Unknown>
                        }
                      >
                        <Component
                          className="infobox-square"
                          hasGutter={true}
                        >
                          <div
                            className="pf-l-split pf-m-gutter infobox-square"
                          >
                            <WithLoader
                              loading={true}
                            >
                              <Skeleton
                                isDark={false}
                                size="lg"
                              >
                                <div
                                  className="ins-c-skeleton ins-c-skeleton__lg"
                                >
                                  Â 
                                </div>
                              </Skeleton>
                            </WithLoader>
                          </div>
                        </Component>
                      </CVEInfoBox>
                    </div>
                  </Component>
                  <Component>
                    <div
                      className="pf-l-stack__item"
                    >
                      <injectIntl(CvssVector)>
                        <CvssVector
                          intl={
                            Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatDateToParts": [Function],
                              "formatDisplayName": [Function],
                              "formatHTMLMessage": [Function],
                              "formatList": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatNumberToParts": [Function],
                              "formatPlural": [Function],
                              "formatRelativeTime": [Function],
                              "formatTime": [Function],
                              "formatTimeToParts": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getDisplayNames": [Function],
                                "getListFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralRules": [Function],
                                "getRelativeTimeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {
                                "default.cancel": "Cancel",
                                "default.delete": "Delete",
                                "default.remove": "Remove",
                                "default.save": "Save",
                              },
                              "onError": [Function],
                              "textComponent": Symbol(react.fragment),
                              "timeZone": undefined,
                            }
                          }
                        >
                          <Component>
                            <div
                              className="pf-c-content"
                            >
                              <WithLoader
                                loading={true}
                              >
                                <Skeleton
                                  isDark={false}
                                  size="lg"
                                >
                                  <div
                                    className="ins-c-skeleton ins-c-skeleton__lg"
                                  >
                                    Â 
                                  </div>
                                </Skeleton>
                              </WithLoader>
                              <WithLoader
                                loading={true}
                              >
                                <Skeleton
                                  isDark={false}
                                  size="lg"
                                >
                                  <div
                                    className="ins-c-skeleton ins-c-skeleton__lg"
                                  >
                                    Â 
                                  </div>
                                </Skeleton>
                              </WithLoader>
                            </div>
                          </Component>
                        </CvssVector>
                      </injectIntl(CvssVector)>
                    </div>
                  </Component>
                </div>
              </Component>
            </CVEPageDetailsSeverity>
          </injectIntl(CVEPageDetailsSeverity)>
        </div>
      </Component>
      <injectIntl(CSAwRuleBox)
        synopsis="CVE-2019-6454"
      >
        <CSAwRuleBox
          intl={
            Object {
              "defaultFormats": Object {},
              "defaultLocale": "en",
              "formatDate": [Function],
              "formatDateToParts": [Function],
              "formatDisplayName": [Function],
              "formatHTMLMessage": [Function],
              "formatList": [Function],
              "formatMessage": [Function],
              "formatNumber": [Function],
              "formatNumberToParts": [Function],
              "formatPlural": [Function],
              "formatRelativeTime": [Function],
              "formatTime": [Function],
              "formatTimeToParts": [Function],
              "formats": Object {},
              "formatters": Object {
                "getDateTimeFormat": [Function],
                "getDisplayNames": [Function],
                "getListFormat": [Function],
                "getMessageFormat": [Function],
                "getNumberFormat": [Function],
                "getPluralRules": [Function],
                "getRelativeTimeFormat": [Function],
              },
              "locale": "en",
              "messages": Object {
                "default.cancel": "Cancel",
                "default.delete": "Delete",
                "default.remove": "Remove",
                "default.save": "Save",
              },
              "onError": [Function],
              "textComponent": Symbol(react.fragment),
              "timeZone": undefined,
            }
          }
          rules={Array []}
          synopsis="CVE-2019-6454"
        />
      </injectIntl(CSAwRuleBox)>
    </div>
  </Component>
</CVEPageDetails>
`;

exports[`CVEPageDetails component should render without data 1`] = `
<CVEPageDetails
  data={
    Object {
      "data": Object {},
      "isLoading": false,
      "meta": Object {},
    }
  }
>
  <Component
    hasGutter={true}
  >
    <div
      className="pf-l-grid pf-m-gutter"
    >
      <Component
        md={8}
        sm={12}
      >
        <div
          className="pf-l-grid__item pf-m-12-col-on-sm pf-m-8-col-on-md"
        >
          <WithLoader
            loading={true}
            variant="spinner"
          >
            <Spinner
              centered={true}
            >
              <div
                className="ins-c-spinner ins-m-center"
                role="status"
              >
                <span
                  className="pf-u-screen-reader"
                >
                  Loading...
                </span>
              </div>
            </Spinner>
          </WithLoader>
        </div>
      </Component>
      <Component
        className="severity-info-box"
        md={4}
        sm={12}
      >
        <div
          className="pf-l-grid__item pf-m-12-col-on-sm pf-m-4-col-on-md severity-info-box"
        >
          <injectIntl(CVEPageDetailsSeverity)>
            <CVEPageDetailsSeverity
              impact="Unknown"
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatDateToParts": [Function],
                  "formatDisplayName": [Function],
                  "formatHTMLMessage": [Function],
                  "formatList": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatNumberToParts": [Function],
                  "formatPlural": [Function],
                  "formatRelativeTime": [Function],
                  "formatTime": [Function],
                  "formatTimeToParts": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getDisplayNames": [Function],
                    "getListFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralRules": [Function],
                    "getRelativeTimeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {
                    "default.cancel": "Cancel",
                    "default.delete": "Delete",
                    "default.remove": "Remove",
                    "default.save": "Save",
                  },
                  "onError": [Function],
                  "textComponent": Symbol(react.fragment),
                  "timeZone": undefined,
                }
              }
            >
              <Component
                hasGutter={true}
              >
                <div
                  className="pf-l-stack pf-m-gutter"
                >
                  <Component>
                    <div
                      className="pf-l-stack__item"
                    >
                      <CVEInfoBox
                        descriptionContent={
                          <Popover
                            appendTo={[Function]}
                            aria-label=""
                            bodyContent={
                              <Unknown>
                                <Unknown
                                  component="p"
                                >
                                  
                                </Unknown>
                              </Unknown>
                            }
                            boundary="window"
                            className=""
                            closeBtnAriaLabel="Close"
                            distance={25}
                            enableFlip={true}
                            flipBehavior={
                              Array [
                                "top",
                                "right",
                                "bottom",
                                "left",
                                "top",
                                "right",
                                "bottom",
                              ]
                            }
                            footerContent={
                              <a
                                href="https://access.redhat.com/security/updates/classification/"
                                rel="noopener noreferrer"
                                target="_blank"
                              >
                                Learn more about security ratings
                                  
                                <ExternalLinkAltIcon
                                  color="currentColor"
                                  noVerticalAlign={false}
                                  size="sm"
                                />
                              </a>
                            }
                            headerContent={
                              <div>
                                Unknown severity
                              </div>
                            }
                            hideOnOutsideClick={true}
                            isVisible={null}
                            maxWidth="calc(1rem + 1rem + 18.75rem)"
                            onHidden={[Function]}
                            onHide={[Function]}
                            onMount={[Function]}
                            onShow={[Function]}
                            onShown={[Function]}
                            position="bottom"
                            shouldClose={[Function]}
                            tippyProps={Object {}}
                            zIndex={9999}
                          >
                            <a>
                              Learn more
                            </a>
                          </Popover>
                        }
                        descriptionTitle="Unknown severity"
                        titleColor="severity-unknown"
                        titleContent={
                          <UnknownIcon
                            color="currentColor"
                            noVerticalAlign={false}
                            size="lg"
                          />
                        }
                      >
                        <Component
                          className="infobox-square"
                          hasGutter={true}
                        >
                          <div
                            className="pf-l-split pf-m-gutter infobox-square"
                          >
                            <WithLoader
                              loading={true}
                            >
                              <Skeleton
                                isDark={false}
                                size="lg"
                              >
                                <div
                                  className="ins-c-skeleton ins-c-skeleton__lg"
                                >
                                  Â 
                                </div>
                              </Skeleton>
                            </WithLoader>
                          </div>
                        </Component>
                      </CVEInfoBox>
                    </div>
                  </Component>
                  <Component>
                    <div
                      className="pf-l-stack__item"
                    >
                      <CVEInfoBox
                        descriptionTitle="CVSS 3.0 base score"
                        titleContent={
                          <Unknown>
                            <Unknown
                              component="h3"
                            >
                              <Tooltip
                                appendTo={[Function]}
                                aria="describedby"
                                boundary="window"
                                className=""
                                content="CVEs published before 2005 (approximately) did not have a CVSS Base Score."
                                distance={15}
                                enableFlip={true}
                                entryDelay={500}
                                exitDelay={500}
                                flipBehavior={
                                  Array [
                                    "top",
                                    "right",
                                    "bottom",
                                    "left",
                                    "top",
                                    "right",
                                    "bottom",
                                  ]
                                }
                                id=""
                                isAppLauncher={false}
                                isContentLeftAligned={false}
                                isVisible={false}
                                maxWidth="18.75rem"
                                position="left"
                                tippyProps={Object {}}
                                trigger="mouseenter focus"
                                zIndex={9999}
                              >
                                <span>
                                  N/A
                                </span>
                              </Tooltip>
                            </Unknown>
                          </Unknown>
                        }
                      >
                        <Component
                          className="infobox-square"
                          hasGutter={true}
                        >
                          <div
                            className="pf-l-split pf-m-gutter infobox-square"
                          >
                            <WithLoader
                              loading={true}
                            >
                              <Skeleton
                                isDark={false}
                                size="lg"
                              >
                                <div
                                  className="ins-c-skeleton ins-c-skeleton__lg"
                                >
                                  Â 
                                </div>
                              </Skeleton>
                            </WithLoader>
                          </div>
                        </Component>
                      </CVEInfoBox>
                    </div>
                  </Component>
                  <Component>
                    <div
                      className="pf-l-stack__item"
                    >
                      <injectIntl(CvssVector)>
                        <CvssVector
                          intl={
                            Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatDateToParts": [Function],
                              "formatDisplayName": [Function],
                              "formatHTMLMessage": [Function],
                              "formatList": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatNumberToParts": [Function],
                              "formatPlural": [Function],
                              "formatRelativeTime": [Function],
                              "formatTime": [Function],
                              "formatTimeToParts": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getDisplayNames": [Function],
                                "getListFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralRules": [Function],
                                "getRelativeTimeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {
                                "default.cancel": "Cancel",
                                "default.delete": "Delete",
                                "default.remove": "Remove",
                                "default.save": "Save",
                              },
                              "onError": [Function],
                              "textComponent": Symbol(react.fragment),
                              "timeZone": undefined,
                            }
                          }
                        >
                          <Component>
                            <div
                              className="pf-c-content"
                            >
                              <WithLoader
                                loading={true}
                              >
                                <Skeleton
                                  isDark={false}
                                  size="lg"
                                >
                                  <div
                                    className="ins-c-skeleton ins-c-skeleton__lg"
                                  >
                                    Â 
                                  </div>
                                </Skeleton>
                              </WithLoader>
                              <WithLoader
                                loading={true}
                              >
                                <Skeleton
                                  isDark={false}
                                  size="lg"
                                >
                                  <div
                                    className="ins-c-skeleton ins-c-skeleton__lg"
                                  >
                                    Â 
                                  </div>
                                </Skeleton>
                              </WithLoader>
                            </div>
                          </Component>
                        </CvssVector>
                      </injectIntl(CvssVector)>
                    </div>
                  </Component>
                </div>
              </Component>
            </CVEPageDetailsSeverity>
          </injectIntl(CVEPageDetailsSeverity)>
        </div>
      </Component>
      <injectIntl(CSAwRuleBox)>
        <CSAwRuleBox
          intl={
            Object {
              "defaultFormats": Object {},
              "defaultLocale": "en",
              "formatDate": [Function],
              "formatDateToParts": [Function],
              "formatDisplayName": [Function],
              "formatHTMLMessage": [Function],
              "formatList": [Function],
              "formatMessage": [Function],
              "formatNumber": [Function],
              "formatNumberToParts": [Function],
              "formatPlural": [Function],
              "formatRelativeTime": [Function],
              "formatTime": [Function],
              "formatTimeToParts": [Function],
              "formats": Object {},
              "formatters": Object {
                "getDateTimeFormat": [Function],
                "getDisplayNames": [Function],
                "getListFormat": [Function],
                "getMessageFormat": [Function],
                "getNumberFormat": [Function],
                "getPluralRules": [Function],
                "getRelativeTimeFormat": [Function],
              },
              "locale": "en",
              "messages": Object {
                "default.cancel": "Cancel",
                "default.delete": "Delete",
                "default.remove": "Remove",
                "default.save": "Save",
              },
              "onError": [Function],
              "textComponent": Symbol(react.fragment),
              "timeZone": undefined,
            }
          }
          rules={Array []}
        />
      </injectIntl(CSAwRuleBox)>
    </div>
  </Component>
</CVEPageDetails>
`;
