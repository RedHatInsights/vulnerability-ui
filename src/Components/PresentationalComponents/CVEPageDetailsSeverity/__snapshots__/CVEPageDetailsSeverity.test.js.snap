// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CVEPageDetailsSeverity component should render correctly 1`] = `
<injectIntl(CVEPageDetailsSeverity)
  cveAttributes={true}
>
  <CVEPageDetailsSeverity
    cveAttributes={true}
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatDateToParts": [Function],
        "formatDisplayName": [Function],
        "formatList": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatNumberToParts": [Function],
        "formatPlural": [Function],
        "formatRelativeTime": [Function],
        "formatTime": [Function],
        "formatTimeToParts": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getDisplayNames": [Function],
          "getListFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralRules": [Function],
          "getRelativeTimeFormat": [Function],
        },
        "locale": "en",
        "messages": Object {
          "default.cancel": "Cancel",
          "default.delete": "Delete",
          "default.remove": "Remove",
          "default.save": "Save",
        },
        "onError": [Function],
        "textComponent": Symbol(react.fragment),
        "timeZone": undefined,
        "wrapRichTextChunksInFragment": undefined,
      }
    }
  >
    <Stack
      hasGutter={true}
    >
      <div
        className="pf-l-stack pf-m-gutter"
      >
        <StackItem>
          <div
            className="pf-l-stack__item"
          >
            <Split
              hasGutter={true}
            >
              <div
                className="pf-l-split pf-m-gutter"
              >
                <SplitItem>
                  <div
                    className="pf-l-split__item"
                  >
                    <SnippetWithHeaderAndPopover
                      content={
                        <Stack
                          className="pf-u-p-xs"
                        >
                          <StackItem>
                            <Label
                              className="pf-u-mb-xs"
                            >
                              Justification note
                            </Label>
                          </StackItem>
                          <StackItem>
                            --
                          </StackItem>
                        </Stack>
                      }
                      title="Business risk"
                    >
                      <Popover
                        aria-label="Business risk popover"
                        bodyContent={
                          <Stack
                            className="pf-u-p-xs"
                          >
                            <StackItem>
                              <Label
                                className="pf-u-mb-xs"
                              >
                                Justification note
                              </Label>
                            </StackItem>
                            <StackItem>
                              --
                            </StackItem>
                          </Stack>
                        }
                        headerContent=""
                        id="popover"
                        position="right"
                      >
                        <Popper
                          appendTo={[Function]}
                          distance={25}
                          enableFlip={true}
                          flipBehavior={
                            Array [
                              "top",
                              "right",
                              "bottom",
                              "left",
                              "top",
                              "right",
                              "bottom",
                            ]
                          }
                          isVisible={false}
                          onDocumentClick={[Function]}
                          onDocumentKeyDown={[Function]}
                          onTriggerClick={[Function]}
                          onTriggerEnter={[Function]}
                          placement="right"
                          popper={
                            <FocusTrap
                              active={false}
                              aria-describedby="popover-popover-body"
                              aria-label="Business risk popover"
                              aria-modal="true"
                              className="pf-c-popover"
                              focusTrapOptions={
                                Object {
                                  "clickOutsideDeactivates": true,
                                  "fallbackFocus": [Function],
                                  "returnFocusOnDeactivate": true,
                                }
                              }
                              onMouseDown={[Function]}
                              paused={false}
                              preventScrollOnDeactivate={true}
                              role="dialog"
                              style={
                                Object {
                                  "maxWidth": null,
                                  "minWidth": null,
                                  "opacity": 0,
                                  "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                }
                              }
                            >
                              <PopoverArrow />
                              <PopoverContent>
                                <PopoverCloseButton
                                  aria-label="Close"
                                  onClose={[Function]}
                                />
                                
                                <PopoverBody
                                  id="popover-popover-body"
                                >
                                  <Stack
                                    className="pf-u-p-xs"
                                  >
                                    <StackItem>
                                      <Label
                                        className="pf-u-mb-xs"
                                      >
                                        Justification note
                                      </Label>
                                    </StackItem>
                                    <StackItem>
                                      --
                                    </StackItem>
                                  </Stack>
                                </PopoverBody>
                              </PopoverContent>
                            </FocusTrap>
                          }
                          popperMatchesTriggerWidth={false}
                          positionModifiers={
                            Object {
                              "bottom": "pf-m-bottom",
                              "left": "pf-m-left",
                              "right": "pf-m-right",
                              "top": "pf-m-top",
                            }
                          }
                          trigger={
                            <Stack
                              style={
                                Object {
                                  "cursor": "pointer",
                                  "display": "inline-block",
                                }
                              }
                            >
                              <StackItem>
                                <Label
                                  isLarge={true}
                                >
                                  Business risk
                                </Label>
                              </StackItem>
                              <StackItem>
                                <a />
                              </StackItem>
                            </Stack>
                          }
                          zIndex={9999}
                        >
                          <FindRefWrapper
                            onFoundRef={[Function]}
                          >
                            <Stack
                              style={
                                Object {
                                  "cursor": "pointer",
                                  "display": "inline-block",
                                }
                              }
                            >
                              <div
                                className="pf-l-stack"
                                style={
                                  Object {
                                    "cursor": "pointer",
                                    "display": "inline-block",
                                  }
                                }
                              >
                                <StackItem>
                                  <div
                                    className="pf-l-stack__item"
                                  >
                                    <Label
                                      isLarge={true}
                                    >
                                      <span
                                        className="vuln-label undefined"
                                        style={
                                          Object {
                                            "display": "block",
                                            "fontSize": 16,
                                          }
                                        }
                                      >
                                        Business risk
                                      </span>
                                    </Label>
                                  </div>
                                </StackItem>
                                <StackItem>
                                  <div
                                    className="pf-l-stack__item"
                                  >
                                    <a />
                                  </div>
                                </StackItem>
                              </div>
                            </Stack>
                          </FindRefWrapper>
                        </Popper>
                      </Popover>
                    </SnippetWithHeaderAndPopover>
                  </div>
                </SplitItem>
                <SplitItem
                  className="pf-u-ml-lg"
                >
                  <div
                    className="pf-l-split__item pf-u-ml-lg"
                  >
                    <SnippetWithHeaderAndPopover
                      content={
                        <Stack
                          className="pf-u-p-xs"
                        >
                          <StackItem>
                            <Label
                              className="pf-u-mb-xs"
                            >
                              CVE status
                            </Label>
                            --
                            <Label
                              className="pf-u-mb-xs pf-u-mt-sm"
                            >
                              Justification note
                            </Label>
                            --
                          </StackItem>
                        </Stack>
                      }
                      title="Status"
                      value={
                        <span>
                           
                        </span>
                      }
                    >
                      <Popover
                        aria-label="Business risk popover"
                        bodyContent={
                          <Stack
                            className="pf-u-p-xs"
                          >
                            <StackItem>
                              <Label
                                className="pf-u-mb-xs"
                              >
                                CVE status
                              </Label>
                              --
                              <Label
                                className="pf-u-mb-xs pf-u-mt-sm"
                              >
                                Justification note
                              </Label>
                              --
                            </StackItem>
                          </Stack>
                        }
                        headerContent=""
                        id="popover"
                        position="right"
                      >
                        <Popper
                          appendTo={[Function]}
                          distance={25}
                          enableFlip={true}
                          flipBehavior={
                            Array [
                              "top",
                              "right",
                              "bottom",
                              "left",
                              "top",
                              "right",
                              "bottom",
                            ]
                          }
                          isVisible={false}
                          onDocumentClick={[Function]}
                          onDocumentKeyDown={[Function]}
                          onTriggerClick={[Function]}
                          onTriggerEnter={[Function]}
                          placement="right"
                          popper={
                            <FocusTrap
                              active={false}
                              aria-describedby="popover-popover-body"
                              aria-label="Business risk popover"
                              aria-modal="true"
                              className="pf-c-popover"
                              focusTrapOptions={
                                Object {
                                  "clickOutsideDeactivates": true,
                                  "fallbackFocus": [Function],
                                  "returnFocusOnDeactivate": true,
                                }
                              }
                              onMouseDown={[Function]}
                              paused={false}
                              preventScrollOnDeactivate={true}
                              role="dialog"
                              style={
                                Object {
                                  "maxWidth": null,
                                  "minWidth": null,
                                  "opacity": 0,
                                  "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                }
                              }
                            >
                              <PopoverArrow />
                              <PopoverContent>
                                <PopoverCloseButton
                                  aria-label="Close"
                                  onClose={[Function]}
                                />
                                
                                <PopoverBody
                                  id="popover-popover-body"
                                >
                                  <Stack
                                    className="pf-u-p-xs"
                                  >
                                    <StackItem>
                                      <Label
                                        className="pf-u-mb-xs"
                                      >
                                        CVE status
                                      </Label>
                                      --
                                      <Label
                                        className="pf-u-mb-xs pf-u-mt-sm"
                                      >
                                        Justification note
                                      </Label>
                                      --
                                    </StackItem>
                                  </Stack>
                                </PopoverBody>
                              </PopoverContent>
                            </FocusTrap>
                          }
                          popperMatchesTriggerWidth={false}
                          positionModifiers={
                            Object {
                              "bottom": "pf-m-bottom",
                              "left": "pf-m-left",
                              "right": "pf-m-right",
                              "top": "pf-m-top",
                            }
                          }
                          trigger={
                            <Stack
                              style={
                                Object {
                                  "cursor": "pointer",
                                  "display": "inline-block",
                                }
                              }
                            >
                              <StackItem>
                                <Label
                                  isLarge={true}
                                >
                                  Status
                                </Label>
                              </StackItem>
                              <StackItem>
                                <a>
                                  <span>
                                     
                                  </span>
                                </a>
                              </StackItem>
                            </Stack>
                          }
                          zIndex={9999}
                        >
                          <FindRefWrapper
                            onFoundRef={[Function]}
                          >
                            <Stack
                              style={
                                Object {
                                  "cursor": "pointer",
                                  "display": "inline-block",
                                }
                              }
                            >
                              <div
                                className="pf-l-stack"
                                style={
                                  Object {
                                    "cursor": "pointer",
                                    "display": "inline-block",
                                  }
                                }
                              >
                                <StackItem>
                                  <div
                                    className="pf-l-stack__item"
                                  >
                                    <Label
                                      isLarge={true}
                                    >
                                      <span
                                        className="vuln-label undefined"
                                        style={
                                          Object {
                                            "display": "block",
                                            "fontSize": 16,
                                          }
                                        }
                                      >
                                        Status
                                      </span>
                                    </Label>
                                  </div>
                                </StackItem>
                                <StackItem>
                                  <div
                                    className="pf-l-stack__item"
                                  >
                                    <a>
                                      <span>
                                         
                                      </span>
                                    </a>
                                  </div>
                                </StackItem>
                              </div>
                            </Stack>
                          </FindRefWrapper>
                        </Popper>
                      </Popover>
                    </SnippetWithHeaderAndPopover>
                  </div>
                </SplitItem>
              </div>
            </Split>
          </div>
        </StackItem>
        <StackItem>
          <div
            className="pf-l-stack__item"
          >
            <Label
              className="pf-u-mb-xs"
              isLarge={true}
            >
              <span
                className="vuln-label pf-u-mb-xs"
                style={
                  Object {
                    "display": "block",
                    "fontSize": 16,
                  }
                }
              >
                Severity
              </span>
            </Label>
            <Shield
              hasLabel={true}
              hasTooltip={true}
              impact="Unknown"
              size="sm"
            >
              <span>
                <Tooltip
                  boundary="viewport"
                  content={<div />}
                  position="bottom"
                >
                  <Popper
                    appendTo={[Function]}
                    distance={15}
                    enableFlip={true}
                    flipBehavior={
                      Array [
                        "top",
                        "right",
                        "bottom",
                        "left",
                        "top",
                        "right",
                        "bottom",
                      ]
                    }
                    isVisible={false}
                    onBlur={[Function]}
                    onDocumentClick={false}
                    onDocumentKeyDown={[Function]}
                    onFocus={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onTriggerEnter={[Function]}
                    placement="bottom"
                    popper={
                      <div
                        className="pf-c-tooltip"
                        id="pf-tooltip-2"
                        role="tooltip"
                        style={
                          Object {
                            "maxWidth": null,
                            "opacity": 0,
                            "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                          }
                        }
                      >
                        <TooltipArrow />
                        <TooltipContent
                          isLeftAligned={false}
                        >
                          <div />
                        </TooltipContent>
                      </div>
                    }
                    popperMatchesTriggerWidth={false}
                    positionModifiers={
                      Object {
                        "bottom": "pf-m-bottom",
                        "left": "pf-m-left",
                        "right": "pf-m-right",
                        "top": "pf-m-top",
                      }
                    }
                    trigger={
                      <span
                        aria-describedby="pf-tooltip-2"
                      >
                        <QuestionIcon
                          aria-hidden="false"
                          aria-label="Unknown"
                          color="#737679"
                          noVerticalAlign={false}
                          size="sm"
                        />
                         
                        Unknown
                      </span>
                    }
                    zIndex={9999}
                  >
                    <FindRefWrapper
                      onFoundRef={[Function]}
                    >
                      <span
                        aria-describedby="pf-tooltip-2"
                      >
                        <QuestionIcon
                          aria-hidden="false"
                          aria-label="Unknown"
                          color="#737679"
                          noVerticalAlign={false}
                          size="sm"
                        >
                          <svg
                            aria-hidden="false"
                            aria-label="Unknown"
                            aria-labelledby={null}
                            fill="#737679"
                            height="1em"
                            role="img"
                            style={
                              Object {
                                "verticalAlign": "-0.125em",
                              }
                            }
                            viewBox="0 0 384 512"
                            width="1em"
                          >
                            <path
                              d="M202.021 0C122.202 0 70.503 32.703 29.914 91.026c-7.363 10.58-5.093 25.086 5.178 32.874l43.138 32.709c10.373 7.865 25.132 6.026 33.253-4.148 25.049-31.381 43.63-49.449 82.757-49.449 30.764 0 68.816 19.799 68.816 49.631 0 22.552-18.617 34.134-48.993 51.164-35.423 19.86-82.299 44.576-82.299 106.405V320c0 13.255 10.745 24 24 24h72.471c13.255 0 24-10.745 24-24v-5.773c0-42.86 125.268-44.645 125.268-160.627C377.504 66.256 286.902 0 202.021 0zM192 373.459c-38.196 0-69.271 31.075-69.271 69.271 0 38.195 31.075 69.27 69.271 69.27s69.271-31.075 69.271-69.271-31.075-69.27-69.271-69.27z"
                            />
                          </svg>
                        </QuestionIcon>
                         
                        Unknown
                      </span>
                    </FindRefWrapper>
                  </Popper>
                </Tooltip>
              </span>
            </Shield>
          </div>
        </StackItem>
        <StackItem>
          <div
            className="pf-l-stack__item"
          >
            <injectIntl(CvssVector)
              score={
                <Tooltip
                  content="CVEs published before 2005 (approximately) did not have a CVSS Base Score."
                  position="left"
                >
                  <span>
                    N/A
                  </span>
                </Tooltip>
              }
            >
              <CvssVector
                intl={
                  Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatDateToParts": [Function],
                    "formatDisplayName": [Function],
                    "formatList": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatNumberToParts": [Function],
                    "formatPlural": [Function],
                    "formatRelativeTime": [Function],
                    "formatTime": [Function],
                    "formatTimeToParts": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getDisplayNames": [Function],
                      "getListFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralRules": [Function],
                      "getRelativeTimeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {
                      "default.cancel": "Cancel",
                      "default.delete": "Delete",
                      "default.remove": "Remove",
                      "default.save": "Save",
                    },
                    "onError": [Function],
                    "textComponent": Symbol(react.fragment),
                    "timeZone": undefined,
                    "wrapRichTextChunksInFragment": undefined,
                  }
                }
                score={
                  <Tooltip
                    content="CVEs published before 2005 (approximately) did not have a CVSS Base Score."
                    position="left"
                  >
                    <span>
                      N/A
                    </span>
                  </Tooltip>
                }
              >
                <TextContent>
                  <div
                    className="pf-c-content"
                  >
                    <WithLoader
                      loading={true}
                    >
                      <Skeleton
                        isDark={false}
                        size="lg"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__lg"
                        >
                           
                        </div>
                      </Skeleton>
                    </WithLoader>
                    <WithLoader
                      loading={true}
                    >
                      <Skeleton
                        isDark={false}
                        size="lg"
                      >
                        <div
                          className="ins-c-skeleton ins-c-skeleton__lg"
                        >
                           
                        </div>
                      </Skeleton>
                    </WithLoader>
                  </div>
                </TextContent>
              </CvssVector>
            </injectIntl(CvssVector)>
          </div>
        </StackItem>
      </div>
    </Stack>
  </CVEPageDetailsSeverity>
</injectIntl(CVEPageDetailsSeverity)>
`;
