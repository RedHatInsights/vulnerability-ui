// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CVEDetailsPageSummary component should render with data 1`] = `
<Provider
  store={
    {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      location={
        {
          "hash": "",
          "key": "default",
          "pathname": "/",
          "search": "",
          "state": null,
        }
      }
      navigationType="POP"
      navigator={
        {
          "action": "POP",
          "createHref": [Function],
          "createURL": [Function],
          "encodeLocation": [Function],
          "go": [Function],
          "listen": [Function],
          "location": {
            "hash": "",
            "key": "default",
            "pathname": "/",
            "search": "",
            "state": null,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <CVEDetailsPageSummary
        data={
          {
            "data": {
              "data": {
                "cvss3_score": "7.000",
                "description": "Lorem ipsum",
                "impact": "Important",
                "mitre_link": {
                  "_owner": null,
                  "_store": {},
                  "key": null,
                  "props": {
                    "children": "MITRE Database",
                    "href": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-6454",
                  },
                  "ref": null,
                  "type": "a",
                },
                "package_list": [
                  {
                    "_owner": null,
                    "_store": {},
                    "key": "systemd-resolved-219-62.el7_6.5.i686",
                    "props": {
                      "children": "systemd-resolved-219-62.el7_6.5.i686",
                    },
                    "ref": null,
                    "type": "li",
                  },
                  {
                    "_owner": null,
                    "_store": {},
                    "key": "systemd-resolved-219-62.el7_6.5.x86_64",
                    "props": {
                      "children": "systemd-resolved-219-62.el7_6.5.x86_64",
                    },
                    "ref": null,
                    "type": "li",
                  },
                  {
                    "_owner": null,
                    "_store": {},
                    "key": "systemd-devel-219-62.el7_6.5.ppc",
                    "props": {
                      "children": "systemd-devel-219-62.el7_6.5.ppc",
                    },
                    "ref": null,
                    "type": "li",
                  },
                ],
                "public_date": "February 18th, 2019",
                "rh_link": {
                  "_owner": null,
                  "_store": {},
                  "key": null,
                  "props": {
                    "children": "Red Hat CVE Database",
                    "href": "https://access.redhat.com/security/cve/CVE-2019-6454",
                  },
                  "ref": null,
                  "type": "a",
                },
                "synopsis": "CVE-2019-6454",
              },
              "isLoading": false,
              "meta": {},
            },
          }
        }
      >
        <Grid
          hasGutter={true}
        >
          <div
            className="pf-l-grid pf-m-gutter"
          >
            <GridItem
              md={8}
              sm={12}
            >
              <div
                className="pf-l-grid__item pf-m-12-col-on-sm pf-m-8-col-on-md"
              >
                <injectIntl(CVEDetailsPageDescription)
                  cveAttributes={
                    {
                      "data": {
                        "cvss3_score": "7.000",
                        "description": "Lorem ipsum",
                        "impact": "Important",
                        "mitre_link": {
                          "_owner": null,
                          "_store": {},
                          "key": null,
                          "props": {
                            "children": "MITRE Database",
                            "href": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-6454",
                          },
                          "ref": null,
                          "type": "a",
                        },
                        "package_list": [
                          {
                            "_owner": null,
                            "_store": {},
                            "key": "systemd-resolved-219-62.el7_6.5.i686",
                            "props": {
                              "children": "systemd-resolved-219-62.el7_6.5.i686",
                            },
                            "ref": null,
                            "type": "li",
                          },
                          {
                            "_owner": null,
                            "_store": {},
                            "key": "systemd-resolved-219-62.el7_6.5.x86_64",
                            "props": {
                              "children": "systemd-resolved-219-62.el7_6.5.x86_64",
                            },
                            "ref": null,
                            "type": "li",
                          },
                          {
                            "_owner": null,
                            "_store": {},
                            "key": "systemd-devel-219-62.el7_6.5.ppc",
                            "props": {
                              "children": "systemd-devel-219-62.el7_6.5.ppc",
                            },
                            "ref": null,
                            "type": "li",
                          },
                        ],
                        "public_date": "February 18th, 2019",
                        "rh_link": {
                          "_owner": null,
                          "_store": {},
                          "key": null,
                          "props": {
                            "children": "Red Hat CVE Database",
                            "href": "https://access.redhat.com/security/cve/CVE-2019-6454",
                          },
                          "ref": null,
                          "type": "a",
                        },
                        "synopsis": "CVE-2019-6454",
                      },
                      "isLoading": false,
                      "meta": {},
                    }
                  }
                >
                  <CVEDetailsPageDescription
                    cveAttributes={
                      {
                        "data": {
                          "cvss3_score": "7.000",
                          "description": "Lorem ipsum",
                          "impact": "Important",
                          "mitre_link": {
                            "_owner": null,
                            "_store": {},
                            "key": null,
                            "props": {
                              "children": "MITRE Database",
                              "href": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-6454",
                            },
                            "ref": null,
                            "type": "a",
                          },
                          "package_list": [
                            {
                              "_owner": null,
                              "_store": {},
                              "key": "systemd-resolved-219-62.el7_6.5.i686",
                              "props": {
                                "children": "systemd-resolved-219-62.el7_6.5.i686",
                              },
                              "ref": null,
                              "type": "li",
                            },
                            {
                              "_owner": null,
                              "_store": {},
                              "key": "systemd-resolved-219-62.el7_6.5.x86_64",
                              "props": {
                                "children": "systemd-resolved-219-62.el7_6.5.x86_64",
                              },
                              "ref": null,
                              "type": "li",
                            },
                            {
                              "_owner": null,
                              "_store": {},
                              "key": "systemd-devel-219-62.el7_6.5.ppc",
                              "props": {
                                "children": "systemd-devel-219-62.el7_6.5.ppc",
                              },
                              "ref": null,
                              "type": "li",
                            },
                          ],
                          "public_date": "February 18th, 2019",
                          "rh_link": {
                            "_owner": null,
                            "_store": {},
                            "key": null,
                            "props": {
                              "children": "Red Hat CVE Database",
                              "href": "https://access.redhat.com/security/cve/CVE-2019-6454",
                            },
                            "ref": null,
                            "type": "a",
                          },
                          "synopsis": "CVE-2019-6454",
                        },
                        "isLoading": false,
                        "meta": {},
                      }
                    }
                    intl={
                      {
                        "$t": [Function],
                        "defaultFormats": {},
                        "defaultLocale": "en",
                        "defaultRichTextElements": undefined,
                        "fallbackOnEmptyString": true,
                        "formatDate": [Function],
                        "formatDateTimeRange": [Function],
                        "formatDateToParts": [Function],
                        "formatDisplayName": [Function],
                        "formatList": [Function],
                        "formatListToParts": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatNumberToParts": [Function],
                        "formatPlural": [Function],
                        "formatRelativeTime": [Function],
                        "formatTime": [Function],
                        "formatTimeToParts": [Function],
                        "formats": {},
                        "formatters": {
                          "getDateTimeFormat": [Function],
                          "getDisplayNames": [Function],
                          "getListFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralRules": [Function],
                          "getRelativeTimeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": {
                          "default.cancel": "Cancel",
                          "default.delete": "Delete",
                          "default.remove": "Remove",
                          "default.save": "Save",
                        },
                        "onError": [Function],
                        "onWarn": [Function],
                        "textComponent": Symbol(react.fragment),
                        "timeZone": undefined,
                        "wrapRichTextChunksInFragment": undefined,
                      }
                    }
                  >
                    <Stack
                      hasGutter={true}
                    >
                      <div
                        className="pf-l-stack pf-m-gutter"
                      >
                        <StackItem>
                          <div
                            className="pf-l-stack__item"
                          >
                            <WithLoader
                              isLoading={true}
                              style={
                                {
                                  "height": "132px",
                                  "width": "100%",
                                }
                              }
                              variant="rectangle"
                            >
                              <Skeleton
                                shape="square"
                                style={
                                  {
                                    "height": "132px",
                                    "width": "100%",
                                  }
                                }
                              >
                                <Skeleton
                                  className="ins-c-skeleton ins-c-skeleton__md"
                                  shape="square"
                                  style={
                                    {
                                      "height": "132px",
                                      "width": "100%",
                                    }
                                  }
                                >
                                  <div
                                    className="pf-c-skeleton pf-m-square ins-c-skeleton ins-c-skeleton__md"
                                    style={
                                      {
                                        "height": "132px",
                                        "width": "100%",
                                      }
                                    }
                                  >
                                    <span
                                      className="pf-u-screen-reader"
                                    />
                                  </div>
                                </Skeleton>
                              </Skeleton>
                            </WithLoader>
                          </div>
                        </StackItem>
                        <StackItem
                          className="pf-u-mt-sm pf-u-mb-md"
                        >
                          <div
                            className="pf-l-stack__item pf-u-mt-sm pf-u-mb-md"
                          >
                            For most up-to-date information, 
                          </div>
                        </StackItem>
                      </div>
                    </Stack>
                  </CVEDetailsPageDescription>
                </injectIntl(CVEDetailsPageDescription)>
              </div>
            </GridItem>
            <GridItem
              className="pf-u-mt-sm pf-u-ml-sm"
              md={4}
              sm={12}
            >
              <div
                className="pf-l-grid__item pf-m-12-col-on-sm pf-m-4-col-on-md pf-u-mt-sm pf-u-ml-sm"
              >
                <CVEDetailsPageSidebar
                  cveAttributes={
                    {
                      "data": {
                        "cvss3_score": "7.000",
                        "description": "Lorem ipsum",
                        "impact": "Important",
                        "mitre_link": {
                          "_owner": null,
                          "_store": {},
                          "key": null,
                          "props": {
                            "children": "MITRE Database",
                            "href": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-6454",
                          },
                          "ref": null,
                          "type": "a",
                        },
                        "package_list": [
                          {
                            "_owner": null,
                            "_store": {},
                            "key": "systemd-resolved-219-62.el7_6.5.i686",
                            "props": {
                              "children": "systemd-resolved-219-62.el7_6.5.i686",
                            },
                            "ref": null,
                            "type": "li",
                          },
                          {
                            "_owner": null,
                            "_store": {},
                            "key": "systemd-resolved-219-62.el7_6.5.x86_64",
                            "props": {
                              "children": "systemd-resolved-219-62.el7_6.5.x86_64",
                            },
                            "ref": null,
                            "type": "li",
                          },
                          {
                            "_owner": null,
                            "_store": {},
                            "key": "systemd-devel-219-62.el7_6.5.ppc",
                            "props": {
                              "children": "systemd-devel-219-62.el7_6.5.ppc",
                            },
                            "ref": null,
                            "type": "li",
                          },
                        ],
                        "public_date": "February 18th, 2019",
                        "rh_link": {
                          "_owner": null,
                          "_store": {},
                          "key": null,
                          "props": {
                            "children": "Red Hat CVE Database",
                            "href": "https://access.redhat.com/security/cve/CVE-2019-6454",
                          },
                          "ref": null,
                          "type": "a",
                        },
                        "synopsis": "CVE-2019-6454",
                      },
                      "isLoading": false,
                      "meta": {},
                    }
                  }
                >
                  <Stack
                    hasGutter={true}
                  >
                    <div
                      className="pf-l-stack pf-m-gutter"
                    >
                      <StackItem>
                        <div
                          className="pf-l-stack__item"
                        >
                          <Split
                            hasGutter={true}
                          >
                            <div
                              className="pf-l-split pf-m-gutter"
                            >
                              <SplitItem>
                                <div
                                  className="pf-l-split__item"
                                >
                                  <SnippetWithHeaderAndPopover
                                    content={
                                      <Stack
                                        className="pf-u-p-xs"
                                      >
                                        <StackItem>
                                          <Label
                                            className="pf-u-mb-xs"
                                          >
                                            Justification note
                                          </Label>
                                        </StackItem>
                                        <StackItem>
                                          --
                                        </StackItem>
                                      </Stack>
                                    }
                                    title="Business risk"
                                    value={
                                      <WithLoader
                                        isLoading={true}
                                        style={
                                          {
                                            "width": "100px",
                                          }
                                        }
                                      />
                                    }
                                  >
                                    <Popover
                                      appendTo={null}
                                      bodyContent={
                                        <Stack
                                          className="pf-u-p-xs"
                                        >
                                          <StackItem>
                                            <Label
                                              className="pf-u-mb-xs"
                                            >
                                              Justification note
                                            </Label>
                                          </StackItem>
                                          <StackItem>
                                            --
                                          </StackItem>
                                        </Stack>
                                      }
                                      headerContent=""
                                      id="popover"
                                      position="bottom"
                                    >
                                      <Popper
                                        appendTo={null}
                                        distance={25}
                                        enableFlip={true}
                                        flipBehavior={
                                          [
                                            "top",
                                            "bottom",
                                            "left",
                                            "right",
                                            "top-start",
                                            "top-end",
                                            "bottom-start",
                                            "bottom-end",
                                            "left-start",
                                            "left-end",
                                            "right-start",
                                            "right-end",
                                          ]
                                        }
                                        isVisible={false}
                                        onDocumentClick={[Function]}
                                        onDocumentKeyDown={[Function]}
                                        onTriggerClick={[Function]}
                                        placement="bottom"
                                        popper={
                                          <ForwardRef
                                            active={false}
                                            aria-describedby="popover-popover-body"
                                            aria-label=""
                                            aria-modal="true"
                                            className="pf-c-popover"
                                            focusTrapOptions={
                                              {
                                                "clickOutsideDeactivates": true,
                                                "fallbackFocus": [Function],
                                                "returnFocusOnDeactivate": true,
                                                "tabbableOptions": {
                                                  "displayCheck": "none",
                                                },
                                              }
                                            }
                                            onMouseDown={[Function]}
                                            preventScrollOnDeactivate={true}
                                            role="dialog"
                                            style={
                                              {
                                                "maxWidth": null,
                                                "minWidth": null,
                                                "opacity": 0,
                                                "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                              }
                                            }
                                          >
                                            <PopoverArrow />
                                            <PopoverContent>
                                              <PopoverCloseButton
                                                aria-label="Close"
                                                onClose={[Function]}
                                              />
                                              
                                              <PopoverBody
                                                id="popover-popover-body"
                                              >
                                                <Stack
                                                  className="pf-u-p-xs"
                                                >
                                                  <StackItem>
                                                    <Label
                                                      className="pf-u-mb-xs"
                                                    >
                                                      Justification note
                                                    </Label>
                                                  </StackItem>
                                                  <StackItem>
                                                    --
                                                  </StackItem>
                                                </Stack>
                                              </PopoverBody>
                                            </PopoverContent>
                                          </ForwardRef>
                                        }
                                        popperMatchesTriggerWidth={false}
                                        positionModifiers={
                                          {
                                            "bottom": "pf-m-bottom",
                                            "bottom-end": "pf-m-bottom-right",
                                            "bottom-start": "pf-m-bottom-left",
                                            "left": "pf-m-left",
                                            "left-end": "pf-m-left-bottom",
                                            "left-start": "pf-m-left-top",
                                            "right": "pf-m-right",
                                            "right-end": "pf-m-right-bottom",
                                            "right-start": "pf-m-right-top",
                                            "top": "pf-m-top",
                                            "top-end": "pf-m-top-right",
                                            "top-start": "pf-m-top-left",
                                          }
                                        }
                                        removeFindDomNode={false}
                                        trigger={
                                          <Stack
                                            className="popover-content"
                                          >
                                            <StackItem>
                                              <Label
                                                isLarge={true}
                                              >
                                                Business risk
                                              </Label>
                                            </StackItem>
                                            <StackItem>
                                              <a>
                                                <WithLoader
                                                  isLoading={true}
                                                  style={
                                                    {
                                                      "width": "100px",
                                                    }
                                                  }
                                                />
                                              </a>
                                            </StackItem>
                                          </Stack>
                                        }
                                        zIndex={9999}
                                      >
                                        <FindRefWrapper
                                          onFoundRef={[Function]}
                                        >
                                          <Stack
                                            className="popover-content"
                                          >
                                            <div
                                              className="pf-l-stack popover-content"
                                            >
                                              <StackItem>
                                                <div
                                                  className="pf-l-stack__item"
                                                >
                                                  <Label
                                                    isLarge={true}
                                                  >
                                                    <span
                                                      className="vuln-label "
                                                      style={
                                                        {
                                                          "display": "block",
                                                          "fontSize": "medium",
                                                        }
                                                      }
                                                    >
                                                      Business risk
                                                    </span>
                                                  </Label>
                                                </div>
                                              </StackItem>
                                              <StackItem>
                                                <div
                                                  className="pf-l-stack__item"
                                                >
                                                  <a>
                                                    <WithLoader
                                                      isLoading={true}
                                                      style={
                                                        {
                                                          "width": "100px",
                                                        }
                                                      }
                                                    >
                                                      <Skeleton
                                                        size="lg"
                                                        style={
                                                          {
                                                            "width": "100px",
                                                          }
                                                        }
                                                      >
                                                        <Skeleton
                                                          className="ins-c-skeleton ins-c-skeleton__lg"
                                                          style={
                                                            {
                                                              "width": "100px",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__lg"
                                                            style={
                                                              {
                                                                "width": "100px",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="pf-u-screen-reader"
                                                            />
                                                          </div>
                                                        </Skeleton>
                                                      </Skeleton>
                                                    </WithLoader>
                                                  </a>
                                                </div>
                                              </StackItem>
                                            </div>
                                          </Stack>
                                        </FindRefWrapper>
                                      </Popper>
                                    </Popover>
                                  </SnippetWithHeaderAndPopover>
                                </div>
                              </SplitItem>
                              <SplitItem
                                className="pf-u-ml-lg"
                              >
                                <div
                                  className="pf-l-split__item pf-u-ml-lg"
                                >
                                  <SnippetWithHeaderAndPopover
                                    content={
                                      <Stack
                                        className="pf-u-p-xs"
                                      >
                                        <StackItem>
                                          <Label
                                            className="pf-u-mb-xs"
                                          >
                                            CVE status
                                          </Label>
                                          --
                                          <Label
                                            className="pf-u-mb-xs pf-u-mt-sm"
                                          >
                                            Justification note
                                          </Label>
                                          --
                                        </StackItem>
                                      </Stack>
                                    }
                                    title="Status"
                                    value={
                                      <WithLoader
                                        isLoading={true}
                                        style={
                                          {
                                            "width": "100px",
                                          }
                                        }
                                      >
                                        <span>
                                           
                                        </span>
                                      </WithLoader>
                                    }
                                  >
                                    <Popover
                                      appendTo={null}
                                      bodyContent={
                                        <Stack
                                          className="pf-u-p-xs"
                                        >
                                          <StackItem>
                                            <Label
                                              className="pf-u-mb-xs"
                                            >
                                              CVE status
                                            </Label>
                                            --
                                            <Label
                                              className="pf-u-mb-xs pf-u-mt-sm"
                                            >
                                              Justification note
                                            </Label>
                                            --
                                          </StackItem>
                                        </Stack>
                                      }
                                      headerContent=""
                                      id="popover"
                                      position="bottom"
                                    >
                                      <Popper
                                        appendTo={null}
                                        distance={25}
                                        enableFlip={true}
                                        flipBehavior={
                                          [
                                            "top",
                                            "bottom",
                                            "left",
                                            "right",
                                            "top-start",
                                            "top-end",
                                            "bottom-start",
                                            "bottom-end",
                                            "left-start",
                                            "left-end",
                                            "right-start",
                                            "right-end",
                                          ]
                                        }
                                        isVisible={false}
                                        onDocumentClick={[Function]}
                                        onDocumentKeyDown={[Function]}
                                        onTriggerClick={[Function]}
                                        placement="bottom"
                                        popper={
                                          <ForwardRef
                                            active={false}
                                            aria-describedby="popover-popover-body"
                                            aria-label=""
                                            aria-modal="true"
                                            className="pf-c-popover"
                                            focusTrapOptions={
                                              {
                                                "clickOutsideDeactivates": true,
                                                "fallbackFocus": [Function],
                                                "returnFocusOnDeactivate": true,
                                                "tabbableOptions": {
                                                  "displayCheck": "none",
                                                },
                                              }
                                            }
                                            onMouseDown={[Function]}
                                            preventScrollOnDeactivate={true}
                                            role="dialog"
                                            style={
                                              {
                                                "maxWidth": null,
                                                "minWidth": null,
                                                "opacity": 0,
                                                "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                              }
                                            }
                                          >
                                            <PopoverArrow />
                                            <PopoverContent>
                                              <PopoverCloseButton
                                                aria-label="Close"
                                                onClose={[Function]}
                                              />
                                              
                                              <PopoverBody
                                                id="popover-popover-body"
                                              >
                                                <Stack
                                                  className="pf-u-p-xs"
                                                >
                                                  <StackItem>
                                                    <Label
                                                      className="pf-u-mb-xs"
                                                    >
                                                      CVE status
                                                    </Label>
                                                    --
                                                    <Label
                                                      className="pf-u-mb-xs pf-u-mt-sm"
                                                    >
                                                      Justification note
                                                    </Label>
                                                    --
                                                  </StackItem>
                                                </Stack>
                                              </PopoverBody>
                                            </PopoverContent>
                                          </ForwardRef>
                                        }
                                        popperMatchesTriggerWidth={false}
                                        positionModifiers={
                                          {
                                            "bottom": "pf-m-bottom",
                                            "bottom-end": "pf-m-bottom-right",
                                            "bottom-start": "pf-m-bottom-left",
                                            "left": "pf-m-left",
                                            "left-end": "pf-m-left-bottom",
                                            "left-start": "pf-m-left-top",
                                            "right": "pf-m-right",
                                            "right-end": "pf-m-right-bottom",
                                            "right-start": "pf-m-right-top",
                                            "top": "pf-m-top",
                                            "top-end": "pf-m-top-right",
                                            "top-start": "pf-m-top-left",
                                          }
                                        }
                                        removeFindDomNode={false}
                                        trigger={
                                          <Stack
                                            className="popover-content"
                                          >
                                            <StackItem>
                                              <Label
                                                isLarge={true}
                                              >
                                                Status
                                              </Label>
                                            </StackItem>
                                            <StackItem>
                                              <a>
                                                <WithLoader
                                                  isLoading={true}
                                                  style={
                                                    {
                                                      "width": "100px",
                                                    }
                                                  }
                                                >
                                                  <span>
                                                     
                                                  </span>
                                                </WithLoader>
                                              </a>
                                            </StackItem>
                                          </Stack>
                                        }
                                        zIndex={9999}
                                      >
                                        <FindRefWrapper
                                          onFoundRef={[Function]}
                                        >
                                          <Stack
                                            className="popover-content"
                                          >
                                            <div
                                              className="pf-l-stack popover-content"
                                            >
                                              <StackItem>
                                                <div
                                                  className="pf-l-stack__item"
                                                >
                                                  <Label
                                                    isLarge={true}
                                                  >
                                                    <span
                                                      className="vuln-label "
                                                      style={
                                                        {
                                                          "display": "block",
                                                          "fontSize": "medium",
                                                        }
                                                      }
                                                    >
                                                      Status
                                                    </span>
                                                  </Label>
                                                </div>
                                              </StackItem>
                                              <StackItem>
                                                <div
                                                  className="pf-l-stack__item"
                                                >
                                                  <a>
                                                    <WithLoader
                                                      isLoading={true}
                                                      style={
                                                        {
                                                          "width": "100px",
                                                        }
                                                      }
                                                    >
                                                      <Skeleton
                                                        size="lg"
                                                        style={
                                                          {
                                                            "width": "100px",
                                                          }
                                                        }
                                                      >
                                                        <Skeleton
                                                          className="ins-c-skeleton ins-c-skeleton__lg"
                                                          style={
                                                            {
                                                              "width": "100px",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__lg"
                                                            style={
                                                              {
                                                                "width": "100px",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="pf-u-screen-reader"
                                                            />
                                                          </div>
                                                        </Skeleton>
                                                      </Skeleton>
                                                    </WithLoader>
                                                  </a>
                                                </div>
                                              </StackItem>
                                            </div>
                                          </Stack>
                                        </FindRefWrapper>
                                      </Popper>
                                    </Popover>
                                  </SnippetWithHeaderAndPopover>
                                </div>
                              </SplitItem>
                            </div>
                          </Split>
                        </div>
                      </StackItem>
                      <StackItem>
                        <div
                          className="pf-l-stack__item"
                        >
                          <Label
                            className="pf-u-mb-xs"
                            isLarge={true}
                          >
                            <span
                              className="vuln-label pf-u-mb-xs"
                              style={
                                {
                                  "display": "block",
                                  "fontSize": "medium",
                                }
                              }
                            >
                              Severity
                            </span>
                          </Label>
                          <WithLoader
                            isLoading={true}
                            style={
                              {
                                "width": "100px",
                              }
                            }
                          >
                            <Skeleton
                              size="lg"
                              style={
                                {
                                  "width": "100px",
                                }
                              }
                            >
                              <Skeleton
                                className="ins-c-skeleton ins-c-skeleton__lg"
                                style={
                                  {
                                    "width": "100px",
                                  }
                                }
                              >
                                <div
                                  className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__lg"
                                  style={
                                    {
                                      "width": "100px",
                                    }
                                  }
                                >
                                  <span
                                    className="pf-u-screen-reader"
                                  />
                                </div>
                              </Skeleton>
                            </Skeleton>
                          </WithLoader>
                        </div>
                      </StackItem>
                      <StackItem>
                        <div
                          className="pf-l-stack__item"
                        >
                          <injectIntl(CvssVector)
                            score={
                              <Tooltip
                                content="CVEs published before 2005 (approximately) did not have a CVSS Base Score."
                                position="left"
                              >
                                <span>
                                  N/A
                                </span>
                              </Tooltip>
                            }
                          >
                            <CvssVector
                              intl={
                                {
                                  "$t": [Function],
                                  "defaultFormats": {},
                                  "defaultLocale": "en",
                                  "defaultRichTextElements": undefined,
                                  "fallbackOnEmptyString": true,
                                  "formatDate": [Function],
                                  "formatDateTimeRange": [Function],
                                  "formatDateToParts": [Function],
                                  "formatDisplayName": [Function],
                                  "formatList": [Function],
                                  "formatListToParts": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatNumberToParts": [Function],
                                  "formatPlural": [Function],
                                  "formatRelativeTime": [Function],
                                  "formatTime": [Function],
                                  "formatTimeToParts": [Function],
                                  "formats": {},
                                  "formatters": {
                                    "getDateTimeFormat": [Function],
                                    "getDisplayNames": [Function],
                                    "getListFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralRules": [Function],
                                    "getRelativeTimeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": {
                                    "default.cancel": "Cancel",
                                    "default.delete": "Delete",
                                    "default.remove": "Remove",
                                    "default.save": "Save",
                                  },
                                  "onError": [Function],
                                  "onWarn": [Function],
                                  "textComponent": Symbol(react.fragment),
                                  "timeZone": undefined,
                                  "wrapRichTextChunksInFragment": undefined,
                                }
                              }
                              score={
                                <Tooltip
                                  content="CVEs published before 2005 (approximately) did not have a CVSS Base Score."
                                  position="left"
                                >
                                  <span>
                                    N/A
                                  </span>
                                </Tooltip>
                              }
                            >
                              <TextContent>
                                <div
                                  className="pf-c-content"
                                >
                                  <Popover
                                    bodyContent={
                                      <WithLoader
                                        colSize={2}
                                        isLoading={true}
                                        rowSize={8}
                                        variant="compactTable"
                                      >
                                        N/A
                                      </WithLoader>
                                    }
                                    enableFlip={true}
                                    headerContent="CVSS 3.0  vector breakdown"
                                    id="popover-cvss"
                                    maxWidth="100%"
                                    position="bottom"
                                  >
                                    <Popper
                                      appendTo={[Function]}
                                      distance={25}
                                      enableFlip={true}
                                      flipBehavior={
                                        [
                                          "top",
                                          "bottom",
                                          "left",
                                          "right",
                                          "top-start",
                                          "top-end",
                                          "bottom-start",
                                          "bottom-end",
                                          "left-start",
                                          "left-end",
                                          "right-start",
                                          "right-end",
                                        ]
                                      }
                                      isVisible={false}
                                      onDocumentClick={[Function]}
                                      onDocumentKeyDown={[Function]}
                                      onTriggerClick={[Function]}
                                      placement="bottom"
                                      popper={
                                        <ForwardRef
                                          active={false}
                                          aria-describedby="popover-popover-cvss-body"
                                          aria-labelledby="popover-popover-cvss-header"
                                          aria-modal="true"
                                          className="pf-c-popover"
                                          focusTrapOptions={
                                            {
                                              "clickOutsideDeactivates": true,
                                              "fallbackFocus": [Function],
                                              "returnFocusOnDeactivate": true,
                                              "tabbableOptions": {
                                                "displayCheck": "none",
                                              },
                                            }
                                          }
                                          onMouseDown={[Function]}
                                          preventScrollOnDeactivate={true}
                                          role="dialog"
                                          style={
                                            {
                                              "maxWidth": "100%",
                                              "minWidth": null,
                                              "opacity": 0,
                                              "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                            }
                                          }
                                        >
                                          <PopoverArrow />
                                          <PopoverContent>
                                            <PopoverCloseButton
                                              aria-label="Close"
                                              onClose={[Function]}
                                            />
                                            <PopoverHeader
                                              alertSeverityScreenReaderText="undefined alert:"
                                              icon={null}
                                              id="popover-popover-cvss-header"
                                              titleHeadingLevel="h6"
                                            >
                                              CVSS 3.0  vector breakdown
                                            </PopoverHeader>
                                            <PopoverBody
                                              id="popover-popover-cvss-body"
                                            >
                                              <WithLoader
                                                colSize={2}
                                                isLoading={true}
                                                rowSize={8}
                                                variant="compactTable"
                                              >
                                                N/A
                                              </WithLoader>
                                            </PopoverBody>
                                          </PopoverContent>
                                        </ForwardRef>
                                      }
                                      popperMatchesTriggerWidth={false}
                                      positionModifiers={
                                        {
                                          "bottom": "pf-m-bottom",
                                          "bottom-end": "pf-m-bottom-right",
                                          "bottom-start": "pf-m-bottom-left",
                                          "left": "pf-m-left",
                                          "left-end": "pf-m-left-bottom",
                                          "left-start": "pf-m-left-top",
                                          "right": "pf-m-right",
                                          "right-end": "pf-m-right-bottom",
                                          "right-start": "pf-m-right-top",
                                          "top": "pf-m-top",
                                          "top-end": "pf-m-top-right",
                                          "top-start": "pf-m-top-left",
                                        }
                                      }
                                      removeFindDomNode={false}
                                      trigger={
                                        <Label
                                          className="pf-u-mb-xs pointer"
                                          isLarge={true}
                                        >
                                          CVSS 3.0
                                           
                                           base score
                                          <OutlinedQuestionCircleIcon
                                            className="pf-u-ml-xs"
                                            color="var(--pf-global--secondary-color--100)"
                                            noVerticalAlign={false}
                                            size="sm"
                                          />
                                        </Label>
                                      }
                                      zIndex={9999}
                                    >
                                      <FindRefWrapper
                                        onFoundRef={[Function]}
                                      >
                                        <Label
                                          className="pf-u-mb-xs pointer"
                                          isLarge={true}
                                        >
                                          <span
                                            className="vuln-label pf-u-mb-xs pointer"
                                            style={
                                              {
                                                "display": "block",
                                                "fontSize": "medium",
                                              }
                                            }
                                          >
                                            CVSS 3.0
                                             
                                             base score
                                            <OutlinedQuestionCircleIcon
                                              className="pf-u-ml-xs"
                                              color="var(--pf-global--secondary-color--100)"
                                              noVerticalAlign={false}
                                              size="sm"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-labelledby={null}
                                                className="pf-u-ml-xs"
                                                fill="var(--pf-global--secondary-color--100)"
                                                height="1em"
                                                role="img"
                                                style={
                                                  {
                                                    "verticalAlign": "-0.125em",
                                                  }
                                                }
                                                viewBox="0 0 512 512"
                                                width="1em"
                                              >
                                                <path
                                                  d="M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 448c-110.532 0-200-89.431-200-200 0-110.495 89.472-200 200-200 110.491 0 200 89.471 200 200 0 110.53-89.431 200-200 200zm107.244-255.2c0 67.052-72.421 68.084-72.421 92.863V300c0 6.627-5.373 12-12 12h-45.647c-6.627 0-12-5.373-12-12v-8.659c0-35.745 27.1-50.034 47.579-61.516 17.561-9.845 28.324-16.541 28.324-29.579 0-17.246-21.999-28.693-39.784-28.693-23.189 0-33.894 10.977-48.942 29.969-4.057 5.12-11.46 6.071-16.666 2.124l-27.824-21.098c-5.107-3.872-6.251-11.066-2.644-16.363C184.846 131.491 214.94 112 261.794 112c49.071 0 101.45 38.304 101.45 88.8zM298 368c0 23.159-18.841 42-42 42s-42-18.841-42-42 18.841-42 42-42 42 18.841 42 42z"
                                                />
                                              </svg>
                                            </OutlinedQuestionCircleIcon>
                                          </span>
                                        </Label>
                                      </FindRefWrapper>
                                    </Popper>
                                  </Popover>
                                  <WithLoader
                                    isLoading={true}
                                    style={
                                      {
                                        "width": "320px",
                                      }
                                    }
                                  >
                                    <Skeleton
                                      size="lg"
                                      style={
                                        {
                                          "width": "320px",
                                        }
                                      }
                                    >
                                      <Skeleton
                                        className="ins-c-skeleton ins-c-skeleton__lg"
                                        style={
                                          {
                                            "width": "320px",
                                          }
                                        }
                                      >
                                        <div
                                          className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__lg"
                                          style={
                                            {
                                              "width": "320px",
                                            }
                                          }
                                        >
                                          <span
                                            className="pf-u-screen-reader"
                                          />
                                        </div>
                                      </Skeleton>
                                    </Skeleton>
                                  </WithLoader>
                                </div>
                              </TextContent>
                            </CvssVector>
                          </injectIntl(CvssVector)>
                        </div>
                      </StackItem>
                    </div>
                  </Stack>
                </CVEDetailsPageSidebar>
              </div>
            </GridItem>
            <injectIntl(CSAwRuleBox)>
              <CSAwRuleBox
                intl={
                  {
                    "$t": [Function],
                    "defaultFormats": {},
                    "defaultLocale": "en",
                    "defaultRichTextElements": undefined,
                    "fallbackOnEmptyString": true,
                    "formatDate": [Function],
                    "formatDateTimeRange": [Function],
                    "formatDateToParts": [Function],
                    "formatDisplayName": [Function],
                    "formatList": [Function],
                    "formatListToParts": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatNumberToParts": [Function],
                    "formatPlural": [Function],
                    "formatRelativeTime": [Function],
                    "formatTime": [Function],
                    "formatTimeToParts": [Function],
                    "formats": {},
                    "formatters": {
                      "getDateTimeFormat": [Function],
                      "getDisplayNames": [Function],
                      "getListFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralRules": [Function],
                      "getRelativeTimeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": {
                      "default.cancel": "Cancel",
                      "default.delete": "Delete",
                      "default.remove": "Remove",
                      "default.save": "Save",
                    },
                    "onError": [Function],
                    "onWarn": [Function],
                    "textComponent": Symbol(react.fragment),
                    "timeZone": undefined,
                    "wrapRichTextChunksInFragment": undefined,
                  }
                }
                rules={[]}
              />
            </injectIntl(CSAwRuleBox)>
            <NotVulnerableBox />
          </div>
        </Grid>
      </CVEDetailsPageSummary>
    </Router>
  </BrowserRouter>
</Provider>
`;

exports[`CVEDetailsPageSummary component should render with enabled WithLoader 1`] = `
<Provider
  store={
    {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      location={
        {
          "hash": "",
          "key": "default",
          "pathname": "/",
          "search": "",
          "state": null,
        }
      }
      navigationType="POP"
      navigator={
        {
          "action": "POP",
          "createHref": [Function],
          "createURL": [Function],
          "encodeLocation": [Function],
          "go": [Function],
          "listen": [Function],
          "location": {
            "hash": "",
            "key": "default",
            "pathname": "/",
            "search": "",
            "state": null,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <CVEDetailsPageSummary
        data={
          {
            "data": {
              "data": {},
              "isLoading": true,
              "meta": {},
            },
          }
        }
      >
        <Grid
          hasGutter={true}
        >
          <div
            className="pf-l-grid pf-m-gutter"
          >
            <GridItem
              md={8}
              sm={12}
            >
              <div
                className="pf-l-grid__item pf-m-12-col-on-sm pf-m-8-col-on-md"
              >
                <injectIntl(CVEDetailsPageDescription)
                  cveAttributes={
                    {
                      "data": {},
                      "isLoading": true,
                      "meta": {},
                    }
                  }
                >
                  <CVEDetailsPageDescription
                    cveAttributes={
                      {
                        "data": {},
                        "isLoading": true,
                        "meta": {},
                      }
                    }
                    intl={
                      {
                        "$t": [Function],
                        "defaultFormats": {},
                        "defaultLocale": "en",
                        "defaultRichTextElements": undefined,
                        "fallbackOnEmptyString": true,
                        "formatDate": [Function],
                        "formatDateTimeRange": [Function],
                        "formatDateToParts": [Function],
                        "formatDisplayName": [Function],
                        "formatList": [Function],
                        "formatListToParts": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatNumberToParts": [Function],
                        "formatPlural": [Function],
                        "formatRelativeTime": [Function],
                        "formatTime": [Function],
                        "formatTimeToParts": [Function],
                        "formats": {},
                        "formatters": {
                          "getDateTimeFormat": [Function],
                          "getDisplayNames": [Function],
                          "getListFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralRules": [Function],
                          "getRelativeTimeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": {
                          "default.cancel": "Cancel",
                          "default.delete": "Delete",
                          "default.remove": "Remove",
                          "default.save": "Save",
                        },
                        "onError": [Function],
                        "onWarn": [Function],
                        "textComponent": Symbol(react.fragment),
                        "timeZone": undefined,
                        "wrapRichTextChunksInFragment": undefined,
                      }
                    }
                  >
                    <Stack
                      hasGutter={true}
                    >
                      <div
                        className="pf-l-stack pf-m-gutter"
                      >
                        <StackItem>
                          <div
                            className="pf-l-stack__item"
                          >
                            <WithLoader
                              isLoading={true}
                              style={
                                {
                                  "height": "132px",
                                  "width": "100%",
                                }
                              }
                              variant="rectangle"
                            >
                              <Skeleton
                                shape="square"
                                style={
                                  {
                                    "height": "132px",
                                    "width": "100%",
                                  }
                                }
                              >
                                <Skeleton
                                  className="ins-c-skeleton ins-c-skeleton__md"
                                  shape="square"
                                  style={
                                    {
                                      "height": "132px",
                                      "width": "100%",
                                    }
                                  }
                                >
                                  <div
                                    className="pf-c-skeleton pf-m-square ins-c-skeleton ins-c-skeleton__md"
                                    style={
                                      {
                                        "height": "132px",
                                        "width": "100%",
                                      }
                                    }
                                  >
                                    <span
                                      className="pf-u-screen-reader"
                                    />
                                  </div>
                                </Skeleton>
                              </Skeleton>
                            </WithLoader>
                          </div>
                        </StackItem>
                        <StackItem
                          className="pf-u-mt-sm pf-u-mb-md"
                        >
                          <div
                            className="pf-l-stack__item pf-u-mt-sm pf-u-mb-md"
                          >
                            For most up-to-date information, 
                          </div>
                        </StackItem>
                      </div>
                    </Stack>
                  </CVEDetailsPageDescription>
                </injectIntl(CVEDetailsPageDescription)>
              </div>
            </GridItem>
            <GridItem
              className="pf-u-mt-sm pf-u-ml-sm"
              md={4}
              sm={12}
            >
              <div
                className="pf-l-grid__item pf-m-12-col-on-sm pf-m-4-col-on-md pf-u-mt-sm pf-u-ml-sm"
              >
                <CVEDetailsPageSidebar
                  cveAttributes={
                    {
                      "data": {},
                      "isLoading": true,
                      "meta": {},
                    }
                  }
                >
                  <Stack
                    hasGutter={true}
                  >
                    <div
                      className="pf-l-stack pf-m-gutter"
                    >
                      <StackItem>
                        <div
                          className="pf-l-stack__item"
                        >
                          <Split
                            hasGutter={true}
                          >
                            <div
                              className="pf-l-split pf-m-gutter"
                            >
                              <SplitItem>
                                <div
                                  className="pf-l-split__item"
                                >
                                  <SnippetWithHeaderAndPopover
                                    content={
                                      <Stack
                                        className="pf-u-p-xs"
                                      >
                                        <StackItem>
                                          <Label
                                            className="pf-u-mb-xs"
                                          >
                                            Justification note
                                          </Label>
                                        </StackItem>
                                        <StackItem>
                                          --
                                        </StackItem>
                                      </Stack>
                                    }
                                    title="Business risk"
                                    value={
                                      <WithLoader
                                        isLoading={true}
                                        style={
                                          {
                                            "width": "100px",
                                          }
                                        }
                                      />
                                    }
                                  >
                                    <Popover
                                      appendTo={null}
                                      bodyContent={
                                        <Stack
                                          className="pf-u-p-xs"
                                        >
                                          <StackItem>
                                            <Label
                                              className="pf-u-mb-xs"
                                            >
                                              Justification note
                                            </Label>
                                          </StackItem>
                                          <StackItem>
                                            --
                                          </StackItem>
                                        </Stack>
                                      }
                                      headerContent=""
                                      id="popover"
                                      position="bottom"
                                    >
                                      <Popper
                                        appendTo={null}
                                        distance={25}
                                        enableFlip={true}
                                        flipBehavior={
                                          [
                                            "top",
                                            "bottom",
                                            "left",
                                            "right",
                                            "top-start",
                                            "top-end",
                                            "bottom-start",
                                            "bottom-end",
                                            "left-start",
                                            "left-end",
                                            "right-start",
                                            "right-end",
                                          ]
                                        }
                                        isVisible={false}
                                        onDocumentClick={[Function]}
                                        onDocumentKeyDown={[Function]}
                                        onTriggerClick={[Function]}
                                        placement="bottom"
                                        popper={
                                          <ForwardRef
                                            active={false}
                                            aria-describedby="popover-popover-body"
                                            aria-label=""
                                            aria-modal="true"
                                            className="pf-c-popover"
                                            focusTrapOptions={
                                              {
                                                "clickOutsideDeactivates": true,
                                                "fallbackFocus": [Function],
                                                "returnFocusOnDeactivate": true,
                                                "tabbableOptions": {
                                                  "displayCheck": "none",
                                                },
                                              }
                                            }
                                            onMouseDown={[Function]}
                                            preventScrollOnDeactivate={true}
                                            role="dialog"
                                            style={
                                              {
                                                "maxWidth": null,
                                                "minWidth": null,
                                                "opacity": 0,
                                                "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                              }
                                            }
                                          >
                                            <PopoverArrow />
                                            <PopoverContent>
                                              <PopoverCloseButton
                                                aria-label="Close"
                                                onClose={[Function]}
                                              />
                                              
                                              <PopoverBody
                                                id="popover-popover-body"
                                              >
                                                <Stack
                                                  className="pf-u-p-xs"
                                                >
                                                  <StackItem>
                                                    <Label
                                                      className="pf-u-mb-xs"
                                                    >
                                                      Justification note
                                                    </Label>
                                                  </StackItem>
                                                  <StackItem>
                                                    --
                                                  </StackItem>
                                                </Stack>
                                              </PopoverBody>
                                            </PopoverContent>
                                          </ForwardRef>
                                        }
                                        popperMatchesTriggerWidth={false}
                                        positionModifiers={
                                          {
                                            "bottom": "pf-m-bottom",
                                            "bottom-end": "pf-m-bottom-right",
                                            "bottom-start": "pf-m-bottom-left",
                                            "left": "pf-m-left",
                                            "left-end": "pf-m-left-bottom",
                                            "left-start": "pf-m-left-top",
                                            "right": "pf-m-right",
                                            "right-end": "pf-m-right-bottom",
                                            "right-start": "pf-m-right-top",
                                            "top": "pf-m-top",
                                            "top-end": "pf-m-top-right",
                                            "top-start": "pf-m-top-left",
                                          }
                                        }
                                        removeFindDomNode={false}
                                        trigger={
                                          <Stack
                                            className="popover-content"
                                          >
                                            <StackItem>
                                              <Label
                                                isLarge={true}
                                              >
                                                Business risk
                                              </Label>
                                            </StackItem>
                                            <StackItem>
                                              <a>
                                                <WithLoader
                                                  isLoading={true}
                                                  style={
                                                    {
                                                      "width": "100px",
                                                    }
                                                  }
                                                />
                                              </a>
                                            </StackItem>
                                          </Stack>
                                        }
                                        zIndex={9999}
                                      >
                                        <FindRefWrapper
                                          onFoundRef={[Function]}
                                        >
                                          <Stack
                                            className="popover-content"
                                          >
                                            <div
                                              className="pf-l-stack popover-content"
                                            >
                                              <StackItem>
                                                <div
                                                  className="pf-l-stack__item"
                                                >
                                                  <Label
                                                    isLarge={true}
                                                  >
                                                    <span
                                                      className="vuln-label "
                                                      style={
                                                        {
                                                          "display": "block",
                                                          "fontSize": "medium",
                                                        }
                                                      }
                                                    >
                                                      Business risk
                                                    </span>
                                                  </Label>
                                                </div>
                                              </StackItem>
                                              <StackItem>
                                                <div
                                                  className="pf-l-stack__item"
                                                >
                                                  <a>
                                                    <WithLoader
                                                      isLoading={true}
                                                      style={
                                                        {
                                                          "width": "100px",
                                                        }
                                                      }
                                                    >
                                                      <Skeleton
                                                        size="lg"
                                                        style={
                                                          {
                                                            "width": "100px",
                                                          }
                                                        }
                                                      >
                                                        <Skeleton
                                                          className="ins-c-skeleton ins-c-skeleton__lg"
                                                          style={
                                                            {
                                                              "width": "100px",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__lg"
                                                            style={
                                                              {
                                                                "width": "100px",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="pf-u-screen-reader"
                                                            />
                                                          </div>
                                                        </Skeleton>
                                                      </Skeleton>
                                                    </WithLoader>
                                                  </a>
                                                </div>
                                              </StackItem>
                                            </div>
                                          </Stack>
                                        </FindRefWrapper>
                                      </Popper>
                                    </Popover>
                                  </SnippetWithHeaderAndPopover>
                                </div>
                              </SplitItem>
                              <SplitItem
                                className="pf-u-ml-lg"
                              >
                                <div
                                  className="pf-l-split__item pf-u-ml-lg"
                                >
                                  <SnippetWithHeaderAndPopover
                                    content={
                                      <Stack
                                        className="pf-u-p-xs"
                                      >
                                        <StackItem>
                                          <Label
                                            className="pf-u-mb-xs"
                                          >
                                            CVE status
                                          </Label>
                                          --
                                          <Label
                                            className="pf-u-mb-xs pf-u-mt-sm"
                                          >
                                            Justification note
                                          </Label>
                                          --
                                        </StackItem>
                                      </Stack>
                                    }
                                    title="Status"
                                    value={
                                      <WithLoader
                                        isLoading={true}
                                        style={
                                          {
                                            "width": "100px",
                                          }
                                        }
                                      >
                                        <span>
                                           
                                        </span>
                                      </WithLoader>
                                    }
                                  >
                                    <Popover
                                      appendTo={null}
                                      bodyContent={
                                        <Stack
                                          className="pf-u-p-xs"
                                        >
                                          <StackItem>
                                            <Label
                                              className="pf-u-mb-xs"
                                            >
                                              CVE status
                                            </Label>
                                            --
                                            <Label
                                              className="pf-u-mb-xs pf-u-mt-sm"
                                            >
                                              Justification note
                                            </Label>
                                            --
                                          </StackItem>
                                        </Stack>
                                      }
                                      headerContent=""
                                      id="popover"
                                      position="bottom"
                                    >
                                      <Popper
                                        appendTo={null}
                                        distance={25}
                                        enableFlip={true}
                                        flipBehavior={
                                          [
                                            "top",
                                            "bottom",
                                            "left",
                                            "right",
                                            "top-start",
                                            "top-end",
                                            "bottom-start",
                                            "bottom-end",
                                            "left-start",
                                            "left-end",
                                            "right-start",
                                            "right-end",
                                          ]
                                        }
                                        isVisible={false}
                                        onDocumentClick={[Function]}
                                        onDocumentKeyDown={[Function]}
                                        onTriggerClick={[Function]}
                                        placement="bottom"
                                        popper={
                                          <ForwardRef
                                            active={false}
                                            aria-describedby="popover-popover-body"
                                            aria-label=""
                                            aria-modal="true"
                                            className="pf-c-popover"
                                            focusTrapOptions={
                                              {
                                                "clickOutsideDeactivates": true,
                                                "fallbackFocus": [Function],
                                                "returnFocusOnDeactivate": true,
                                                "tabbableOptions": {
                                                  "displayCheck": "none",
                                                },
                                              }
                                            }
                                            onMouseDown={[Function]}
                                            preventScrollOnDeactivate={true}
                                            role="dialog"
                                            style={
                                              {
                                                "maxWidth": null,
                                                "minWidth": null,
                                                "opacity": 0,
                                                "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                              }
                                            }
                                          >
                                            <PopoverArrow />
                                            <PopoverContent>
                                              <PopoverCloseButton
                                                aria-label="Close"
                                                onClose={[Function]}
                                              />
                                              
                                              <PopoverBody
                                                id="popover-popover-body"
                                              >
                                                <Stack
                                                  className="pf-u-p-xs"
                                                >
                                                  <StackItem>
                                                    <Label
                                                      className="pf-u-mb-xs"
                                                    >
                                                      CVE status
                                                    </Label>
                                                    --
                                                    <Label
                                                      className="pf-u-mb-xs pf-u-mt-sm"
                                                    >
                                                      Justification note
                                                    </Label>
                                                    --
                                                  </StackItem>
                                                </Stack>
                                              </PopoverBody>
                                            </PopoverContent>
                                          </ForwardRef>
                                        }
                                        popperMatchesTriggerWidth={false}
                                        positionModifiers={
                                          {
                                            "bottom": "pf-m-bottom",
                                            "bottom-end": "pf-m-bottom-right",
                                            "bottom-start": "pf-m-bottom-left",
                                            "left": "pf-m-left",
                                            "left-end": "pf-m-left-bottom",
                                            "left-start": "pf-m-left-top",
                                            "right": "pf-m-right",
                                            "right-end": "pf-m-right-bottom",
                                            "right-start": "pf-m-right-top",
                                            "top": "pf-m-top",
                                            "top-end": "pf-m-top-right",
                                            "top-start": "pf-m-top-left",
                                          }
                                        }
                                        removeFindDomNode={false}
                                        trigger={
                                          <Stack
                                            className="popover-content"
                                          >
                                            <StackItem>
                                              <Label
                                                isLarge={true}
                                              >
                                                Status
                                              </Label>
                                            </StackItem>
                                            <StackItem>
                                              <a>
                                                <WithLoader
                                                  isLoading={true}
                                                  style={
                                                    {
                                                      "width": "100px",
                                                    }
                                                  }
                                                >
                                                  <span>
                                                     
                                                  </span>
                                                </WithLoader>
                                              </a>
                                            </StackItem>
                                          </Stack>
                                        }
                                        zIndex={9999}
                                      >
                                        <FindRefWrapper
                                          onFoundRef={[Function]}
                                        >
                                          <Stack
                                            className="popover-content"
                                          >
                                            <div
                                              className="pf-l-stack popover-content"
                                            >
                                              <StackItem>
                                                <div
                                                  className="pf-l-stack__item"
                                                >
                                                  <Label
                                                    isLarge={true}
                                                  >
                                                    <span
                                                      className="vuln-label "
                                                      style={
                                                        {
                                                          "display": "block",
                                                          "fontSize": "medium",
                                                        }
                                                      }
                                                    >
                                                      Status
                                                    </span>
                                                  </Label>
                                                </div>
                                              </StackItem>
                                              <StackItem>
                                                <div
                                                  className="pf-l-stack__item"
                                                >
                                                  <a>
                                                    <WithLoader
                                                      isLoading={true}
                                                      style={
                                                        {
                                                          "width": "100px",
                                                        }
                                                      }
                                                    >
                                                      <Skeleton
                                                        size="lg"
                                                        style={
                                                          {
                                                            "width": "100px",
                                                          }
                                                        }
                                                      >
                                                        <Skeleton
                                                          className="ins-c-skeleton ins-c-skeleton__lg"
                                                          style={
                                                            {
                                                              "width": "100px",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__lg"
                                                            style={
                                                              {
                                                                "width": "100px",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="pf-u-screen-reader"
                                                            />
                                                          </div>
                                                        </Skeleton>
                                                      </Skeleton>
                                                    </WithLoader>
                                                  </a>
                                                </div>
                                              </StackItem>
                                            </div>
                                          </Stack>
                                        </FindRefWrapper>
                                      </Popper>
                                    </Popover>
                                  </SnippetWithHeaderAndPopover>
                                </div>
                              </SplitItem>
                            </div>
                          </Split>
                        </div>
                      </StackItem>
                      <StackItem>
                        <div
                          className="pf-l-stack__item"
                        >
                          <Label
                            className="pf-u-mb-xs"
                            isLarge={true}
                          >
                            <span
                              className="vuln-label pf-u-mb-xs"
                              style={
                                {
                                  "display": "block",
                                  "fontSize": "medium",
                                }
                              }
                            >
                              Severity
                            </span>
                          </Label>
                          <WithLoader
                            isLoading={true}
                            style={
                              {
                                "width": "100px",
                              }
                            }
                          >
                            <Skeleton
                              size="lg"
                              style={
                                {
                                  "width": "100px",
                                }
                              }
                            >
                              <Skeleton
                                className="ins-c-skeleton ins-c-skeleton__lg"
                                style={
                                  {
                                    "width": "100px",
                                  }
                                }
                              >
                                <div
                                  className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__lg"
                                  style={
                                    {
                                      "width": "100px",
                                    }
                                  }
                                >
                                  <span
                                    className="pf-u-screen-reader"
                                  />
                                </div>
                              </Skeleton>
                            </Skeleton>
                          </WithLoader>
                        </div>
                      </StackItem>
                      <StackItem>
                        <div
                          className="pf-l-stack__item"
                        >
                          <injectIntl(CvssVector)
                            score={
                              <Tooltip
                                content="CVEs published before 2005 (approximately) did not have a CVSS Base Score."
                                position="left"
                              >
                                <span>
                                  N/A
                                </span>
                              </Tooltip>
                            }
                          >
                            <CvssVector
                              intl={
                                {
                                  "$t": [Function],
                                  "defaultFormats": {},
                                  "defaultLocale": "en",
                                  "defaultRichTextElements": undefined,
                                  "fallbackOnEmptyString": true,
                                  "formatDate": [Function],
                                  "formatDateTimeRange": [Function],
                                  "formatDateToParts": [Function],
                                  "formatDisplayName": [Function],
                                  "formatList": [Function],
                                  "formatListToParts": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatNumberToParts": [Function],
                                  "formatPlural": [Function],
                                  "formatRelativeTime": [Function],
                                  "formatTime": [Function],
                                  "formatTimeToParts": [Function],
                                  "formats": {},
                                  "formatters": {
                                    "getDateTimeFormat": [Function],
                                    "getDisplayNames": [Function],
                                    "getListFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralRules": [Function],
                                    "getRelativeTimeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": {
                                    "default.cancel": "Cancel",
                                    "default.delete": "Delete",
                                    "default.remove": "Remove",
                                    "default.save": "Save",
                                  },
                                  "onError": [Function],
                                  "onWarn": [Function],
                                  "textComponent": Symbol(react.fragment),
                                  "timeZone": undefined,
                                  "wrapRichTextChunksInFragment": undefined,
                                }
                              }
                              score={
                                <Tooltip
                                  content="CVEs published before 2005 (approximately) did not have a CVSS Base Score."
                                  position="left"
                                >
                                  <span>
                                    N/A
                                  </span>
                                </Tooltip>
                              }
                            >
                              <TextContent>
                                <div
                                  className="pf-c-content"
                                >
                                  <Popover
                                    bodyContent={
                                      <WithLoader
                                        colSize={2}
                                        isLoading={true}
                                        rowSize={8}
                                        variant="compactTable"
                                      >
                                        N/A
                                      </WithLoader>
                                    }
                                    enableFlip={true}
                                    headerContent="CVSS 3.0  vector breakdown"
                                    id="popover-cvss"
                                    maxWidth="100%"
                                    position="bottom"
                                  >
                                    <Popper
                                      appendTo={[Function]}
                                      distance={25}
                                      enableFlip={true}
                                      flipBehavior={
                                        [
                                          "top",
                                          "bottom",
                                          "left",
                                          "right",
                                          "top-start",
                                          "top-end",
                                          "bottom-start",
                                          "bottom-end",
                                          "left-start",
                                          "left-end",
                                          "right-start",
                                          "right-end",
                                        ]
                                      }
                                      isVisible={false}
                                      onDocumentClick={[Function]}
                                      onDocumentKeyDown={[Function]}
                                      onTriggerClick={[Function]}
                                      placement="bottom"
                                      popper={
                                        <ForwardRef
                                          active={false}
                                          aria-describedby="popover-popover-cvss-body"
                                          aria-labelledby="popover-popover-cvss-header"
                                          aria-modal="true"
                                          className="pf-c-popover"
                                          focusTrapOptions={
                                            {
                                              "clickOutsideDeactivates": true,
                                              "fallbackFocus": [Function],
                                              "returnFocusOnDeactivate": true,
                                              "tabbableOptions": {
                                                "displayCheck": "none",
                                              },
                                            }
                                          }
                                          onMouseDown={[Function]}
                                          preventScrollOnDeactivate={true}
                                          role="dialog"
                                          style={
                                            {
                                              "maxWidth": "100%",
                                              "minWidth": null,
                                              "opacity": 0,
                                              "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                            }
                                          }
                                        >
                                          <PopoverArrow />
                                          <PopoverContent>
                                            <PopoverCloseButton
                                              aria-label="Close"
                                              onClose={[Function]}
                                            />
                                            <PopoverHeader
                                              alertSeverityScreenReaderText="undefined alert:"
                                              icon={null}
                                              id="popover-popover-cvss-header"
                                              titleHeadingLevel="h6"
                                            >
                                              CVSS 3.0  vector breakdown
                                            </PopoverHeader>
                                            <PopoverBody
                                              id="popover-popover-cvss-body"
                                            >
                                              <WithLoader
                                                colSize={2}
                                                isLoading={true}
                                                rowSize={8}
                                                variant="compactTable"
                                              >
                                                N/A
                                              </WithLoader>
                                            </PopoverBody>
                                          </PopoverContent>
                                        </ForwardRef>
                                      }
                                      popperMatchesTriggerWidth={false}
                                      positionModifiers={
                                        {
                                          "bottom": "pf-m-bottom",
                                          "bottom-end": "pf-m-bottom-right",
                                          "bottom-start": "pf-m-bottom-left",
                                          "left": "pf-m-left",
                                          "left-end": "pf-m-left-bottom",
                                          "left-start": "pf-m-left-top",
                                          "right": "pf-m-right",
                                          "right-end": "pf-m-right-bottom",
                                          "right-start": "pf-m-right-top",
                                          "top": "pf-m-top",
                                          "top-end": "pf-m-top-right",
                                          "top-start": "pf-m-top-left",
                                        }
                                      }
                                      removeFindDomNode={false}
                                      trigger={
                                        <Label
                                          className="pf-u-mb-xs pointer"
                                          isLarge={true}
                                        >
                                          CVSS 3.0
                                           
                                           base score
                                          <OutlinedQuestionCircleIcon
                                            className="pf-u-ml-xs"
                                            color="var(--pf-global--secondary-color--100)"
                                            noVerticalAlign={false}
                                            size="sm"
                                          />
                                        </Label>
                                      }
                                      zIndex={9999}
                                    >
                                      <FindRefWrapper
                                        onFoundRef={[Function]}
                                      >
                                        <Label
                                          className="pf-u-mb-xs pointer"
                                          isLarge={true}
                                        >
                                          <span
                                            className="vuln-label pf-u-mb-xs pointer"
                                            style={
                                              {
                                                "display": "block",
                                                "fontSize": "medium",
                                              }
                                            }
                                          >
                                            CVSS 3.0
                                             
                                             base score
                                            <OutlinedQuestionCircleIcon
                                              className="pf-u-ml-xs"
                                              color="var(--pf-global--secondary-color--100)"
                                              noVerticalAlign={false}
                                              size="sm"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-labelledby={null}
                                                className="pf-u-ml-xs"
                                                fill="var(--pf-global--secondary-color--100)"
                                                height="1em"
                                                role="img"
                                                style={
                                                  {
                                                    "verticalAlign": "-0.125em",
                                                  }
                                                }
                                                viewBox="0 0 512 512"
                                                width="1em"
                                              >
                                                <path
                                                  d="M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 448c-110.532 0-200-89.431-200-200 0-110.495 89.472-200 200-200 110.491 0 200 89.471 200 200 0 110.53-89.431 200-200 200zm107.244-255.2c0 67.052-72.421 68.084-72.421 92.863V300c0 6.627-5.373 12-12 12h-45.647c-6.627 0-12-5.373-12-12v-8.659c0-35.745 27.1-50.034 47.579-61.516 17.561-9.845 28.324-16.541 28.324-29.579 0-17.246-21.999-28.693-39.784-28.693-23.189 0-33.894 10.977-48.942 29.969-4.057 5.12-11.46 6.071-16.666 2.124l-27.824-21.098c-5.107-3.872-6.251-11.066-2.644-16.363C184.846 131.491 214.94 112 261.794 112c49.071 0 101.45 38.304 101.45 88.8zM298 368c0 23.159-18.841 42-42 42s-42-18.841-42-42 18.841-42 42-42 42 18.841 42 42z"
                                                />
                                              </svg>
                                            </OutlinedQuestionCircleIcon>
                                          </span>
                                        </Label>
                                      </FindRefWrapper>
                                    </Popper>
                                  </Popover>
                                  <WithLoader
                                    isLoading={true}
                                    style={
                                      {
                                        "width": "320px",
                                      }
                                    }
                                  >
                                    <Skeleton
                                      size="lg"
                                      style={
                                        {
                                          "width": "320px",
                                        }
                                      }
                                    >
                                      <Skeleton
                                        className="ins-c-skeleton ins-c-skeleton__lg"
                                        style={
                                          {
                                            "width": "320px",
                                          }
                                        }
                                      >
                                        <div
                                          className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__lg"
                                          style={
                                            {
                                              "width": "320px",
                                            }
                                          }
                                        >
                                          <span
                                            className="pf-u-screen-reader"
                                          />
                                        </div>
                                      </Skeleton>
                                    </Skeleton>
                                  </WithLoader>
                                </div>
                              </TextContent>
                            </CvssVector>
                          </injectIntl(CvssVector)>
                        </div>
                      </StackItem>
                    </div>
                  </Stack>
                </CVEDetailsPageSidebar>
              </div>
            </GridItem>
            <injectIntl(CSAwRuleBox)>
              <CSAwRuleBox
                intl={
                  {
                    "$t": [Function],
                    "defaultFormats": {},
                    "defaultLocale": "en",
                    "defaultRichTextElements": undefined,
                    "fallbackOnEmptyString": true,
                    "formatDate": [Function],
                    "formatDateTimeRange": [Function],
                    "formatDateToParts": [Function],
                    "formatDisplayName": [Function],
                    "formatList": [Function],
                    "formatListToParts": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatNumberToParts": [Function],
                    "formatPlural": [Function],
                    "formatRelativeTime": [Function],
                    "formatTime": [Function],
                    "formatTimeToParts": [Function],
                    "formats": {},
                    "formatters": {
                      "getDateTimeFormat": [Function],
                      "getDisplayNames": [Function],
                      "getListFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralRules": [Function],
                      "getRelativeTimeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": {
                      "default.cancel": "Cancel",
                      "default.delete": "Delete",
                      "default.remove": "Remove",
                      "default.save": "Save",
                    },
                    "onError": [Function],
                    "onWarn": [Function],
                    "textComponent": Symbol(react.fragment),
                    "timeZone": undefined,
                    "wrapRichTextChunksInFragment": undefined,
                  }
                }
                rules={[]}
              />
            </injectIntl(CSAwRuleBox)>
            <NotVulnerableBox />
          </div>
        </Grid>
      </CVEDetailsPageSummary>
    </Router>
  </BrowserRouter>
</Provider>
`;

exports[`CVEDetailsPageSummary component should render with long description 1`] = `
<Provider
  store={
    {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      location={
        {
          "hash": "",
          "key": "default",
          "pathname": "/",
          "search": "",
          "state": null,
        }
      }
      navigationType="POP"
      navigator={
        {
          "action": "POP",
          "createHref": [Function],
          "createURL": [Function],
          "encodeLocation": [Function],
          "go": [Function],
          "listen": [Function],
          "location": {
            "hash": "",
            "key": "default",
            "pathname": "/",
            "search": "",
            "state": null,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <CVEDetailsPageSummary
        data={
          {
            "data": {
              "data": {
                "cvss3_score": "7.000",
                "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi consectetur molestie tristique. Proin ornare urna ut consequat pellentesque. Sed commodo porta sollicitudin. Interdum et malesuada fames ac ante ipsum primis in faucibus. Pellentesque habitant morbi tristique senectus et netus et nullam.",
                "impact": "Important",
                "package_list": [],
                "public_date": "February 18th, 2019",
                "synopsis": "CVE-2019-6454",
              },
              "isLoading": false,
              "meta": {},
            },
          }
        }
      >
        <Grid
          hasGutter={true}
        >
          <div
            className="pf-l-grid pf-m-gutter"
          >
            <GridItem
              md={8}
              sm={12}
            >
              <div
                className="pf-l-grid__item pf-m-12-col-on-sm pf-m-8-col-on-md"
              >
                <injectIntl(CVEDetailsPageDescription)
                  cveAttributes={
                    {
                      "data": {
                        "cvss3_score": "7.000",
                        "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi consectetur molestie tristique. Proin ornare urna ut consequat pellentesque. Sed commodo porta sollicitudin. Interdum et malesuada fames ac ante ipsum primis in faucibus. Pellentesque habitant morbi tristique senectus et netus et nullam.",
                        "impact": "Important",
                        "package_list": [],
                        "public_date": "February 18th, 2019",
                        "synopsis": "CVE-2019-6454",
                      },
                      "isLoading": false,
                      "meta": {},
                    }
                  }
                >
                  <CVEDetailsPageDescription
                    cveAttributes={
                      {
                        "data": {
                          "cvss3_score": "7.000",
                          "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi consectetur molestie tristique. Proin ornare urna ut consequat pellentesque. Sed commodo porta sollicitudin. Interdum et malesuada fames ac ante ipsum primis in faucibus. Pellentesque habitant morbi tristique senectus et netus et nullam.",
                          "impact": "Important",
                          "package_list": [],
                          "public_date": "February 18th, 2019",
                          "synopsis": "CVE-2019-6454",
                        },
                        "isLoading": false,
                        "meta": {},
                      }
                    }
                    intl={
                      {
                        "$t": [Function],
                        "defaultFormats": {},
                        "defaultLocale": "en",
                        "defaultRichTextElements": undefined,
                        "fallbackOnEmptyString": true,
                        "formatDate": [Function],
                        "formatDateTimeRange": [Function],
                        "formatDateToParts": [Function],
                        "formatDisplayName": [Function],
                        "formatList": [Function],
                        "formatListToParts": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatNumberToParts": [Function],
                        "formatPlural": [Function],
                        "formatRelativeTime": [Function],
                        "formatTime": [Function],
                        "formatTimeToParts": [Function],
                        "formats": {},
                        "formatters": {
                          "getDateTimeFormat": [Function],
                          "getDisplayNames": [Function],
                          "getListFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralRules": [Function],
                          "getRelativeTimeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": {
                          "default.cancel": "Cancel",
                          "default.delete": "Delete",
                          "default.remove": "Remove",
                          "default.save": "Save",
                        },
                        "onError": [Function],
                        "onWarn": [Function],
                        "textComponent": Symbol(react.fragment),
                        "timeZone": undefined,
                        "wrapRichTextChunksInFragment": undefined,
                      }
                    }
                  >
                    <Stack
                      hasGutter={true}
                    >
                      <div
                        className="pf-l-stack pf-m-gutter"
                      >
                        <StackItem>
                          <div
                            className="pf-l-stack__item"
                          >
                            <WithLoader
                              isLoading={true}
                              style={
                                {
                                  "height": "132px",
                                  "width": "100%",
                                }
                              }
                              variant="rectangle"
                            >
                              <Skeleton
                                shape="square"
                                style={
                                  {
                                    "height": "132px",
                                    "width": "100%",
                                  }
                                }
                              >
                                <Skeleton
                                  className="ins-c-skeleton ins-c-skeleton__md"
                                  shape="square"
                                  style={
                                    {
                                      "height": "132px",
                                      "width": "100%",
                                    }
                                  }
                                >
                                  <div
                                    className="pf-c-skeleton pf-m-square ins-c-skeleton ins-c-skeleton__md"
                                    style={
                                      {
                                        "height": "132px",
                                        "width": "100%",
                                      }
                                    }
                                  >
                                    <span
                                      className="pf-u-screen-reader"
                                    />
                                  </div>
                                </Skeleton>
                              </Skeleton>
                            </WithLoader>
                          </div>
                        </StackItem>
                        <StackItem
                          className="pf-u-mt-sm pf-u-mb-md"
                        >
                          <div
                            className="pf-l-stack__item pf-u-mt-sm pf-u-mb-md"
                          >
                            For most up-to-date information, 
                          </div>
                        </StackItem>
                      </div>
                    </Stack>
                  </CVEDetailsPageDescription>
                </injectIntl(CVEDetailsPageDescription)>
              </div>
            </GridItem>
            <GridItem
              className="pf-u-mt-sm pf-u-ml-sm"
              md={4}
              sm={12}
            >
              <div
                className="pf-l-grid__item pf-m-12-col-on-sm pf-m-4-col-on-md pf-u-mt-sm pf-u-ml-sm"
              >
                <CVEDetailsPageSidebar
                  cveAttributes={
                    {
                      "data": {
                        "cvss3_score": "7.000",
                        "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi consectetur molestie tristique. Proin ornare urna ut consequat pellentesque. Sed commodo porta sollicitudin. Interdum et malesuada fames ac ante ipsum primis in faucibus. Pellentesque habitant morbi tristique senectus et netus et nullam.",
                        "impact": "Important",
                        "package_list": [],
                        "public_date": "February 18th, 2019",
                        "synopsis": "CVE-2019-6454",
                      },
                      "isLoading": false,
                      "meta": {},
                    }
                  }
                >
                  <Stack
                    hasGutter={true}
                  >
                    <div
                      className="pf-l-stack pf-m-gutter"
                    >
                      <StackItem>
                        <div
                          className="pf-l-stack__item"
                        >
                          <Split
                            hasGutter={true}
                          >
                            <div
                              className="pf-l-split pf-m-gutter"
                            >
                              <SplitItem>
                                <div
                                  className="pf-l-split__item"
                                >
                                  <SnippetWithHeaderAndPopover
                                    content={
                                      <Stack
                                        className="pf-u-p-xs"
                                      >
                                        <StackItem>
                                          <Label
                                            className="pf-u-mb-xs"
                                          >
                                            Justification note
                                          </Label>
                                        </StackItem>
                                        <StackItem>
                                          --
                                        </StackItem>
                                      </Stack>
                                    }
                                    title="Business risk"
                                    value={
                                      <WithLoader
                                        isLoading={true}
                                        style={
                                          {
                                            "width": "100px",
                                          }
                                        }
                                      />
                                    }
                                  >
                                    <Popover
                                      appendTo={null}
                                      bodyContent={
                                        <Stack
                                          className="pf-u-p-xs"
                                        >
                                          <StackItem>
                                            <Label
                                              className="pf-u-mb-xs"
                                            >
                                              Justification note
                                            </Label>
                                          </StackItem>
                                          <StackItem>
                                            --
                                          </StackItem>
                                        </Stack>
                                      }
                                      headerContent=""
                                      id="popover"
                                      position="bottom"
                                    >
                                      <Popper
                                        appendTo={null}
                                        distance={25}
                                        enableFlip={true}
                                        flipBehavior={
                                          [
                                            "top",
                                            "bottom",
                                            "left",
                                            "right",
                                            "top-start",
                                            "top-end",
                                            "bottom-start",
                                            "bottom-end",
                                            "left-start",
                                            "left-end",
                                            "right-start",
                                            "right-end",
                                          ]
                                        }
                                        isVisible={false}
                                        onDocumentClick={[Function]}
                                        onDocumentKeyDown={[Function]}
                                        onTriggerClick={[Function]}
                                        placement="bottom"
                                        popper={
                                          <ForwardRef
                                            active={false}
                                            aria-describedby="popover-popover-body"
                                            aria-label=""
                                            aria-modal="true"
                                            className="pf-c-popover"
                                            focusTrapOptions={
                                              {
                                                "clickOutsideDeactivates": true,
                                                "fallbackFocus": [Function],
                                                "returnFocusOnDeactivate": true,
                                                "tabbableOptions": {
                                                  "displayCheck": "none",
                                                },
                                              }
                                            }
                                            onMouseDown={[Function]}
                                            preventScrollOnDeactivate={true}
                                            role="dialog"
                                            style={
                                              {
                                                "maxWidth": null,
                                                "minWidth": null,
                                                "opacity": 0,
                                                "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                              }
                                            }
                                          >
                                            <PopoverArrow />
                                            <PopoverContent>
                                              <PopoverCloseButton
                                                aria-label="Close"
                                                onClose={[Function]}
                                              />
                                              
                                              <PopoverBody
                                                id="popover-popover-body"
                                              >
                                                <Stack
                                                  className="pf-u-p-xs"
                                                >
                                                  <StackItem>
                                                    <Label
                                                      className="pf-u-mb-xs"
                                                    >
                                                      Justification note
                                                    </Label>
                                                  </StackItem>
                                                  <StackItem>
                                                    --
                                                  </StackItem>
                                                </Stack>
                                              </PopoverBody>
                                            </PopoverContent>
                                          </ForwardRef>
                                        }
                                        popperMatchesTriggerWidth={false}
                                        positionModifiers={
                                          {
                                            "bottom": "pf-m-bottom",
                                            "bottom-end": "pf-m-bottom-right",
                                            "bottom-start": "pf-m-bottom-left",
                                            "left": "pf-m-left",
                                            "left-end": "pf-m-left-bottom",
                                            "left-start": "pf-m-left-top",
                                            "right": "pf-m-right",
                                            "right-end": "pf-m-right-bottom",
                                            "right-start": "pf-m-right-top",
                                            "top": "pf-m-top",
                                            "top-end": "pf-m-top-right",
                                            "top-start": "pf-m-top-left",
                                          }
                                        }
                                        removeFindDomNode={false}
                                        trigger={
                                          <Stack
                                            className="popover-content"
                                          >
                                            <StackItem>
                                              <Label
                                                isLarge={true}
                                              >
                                                Business risk
                                              </Label>
                                            </StackItem>
                                            <StackItem>
                                              <a>
                                                <WithLoader
                                                  isLoading={true}
                                                  style={
                                                    {
                                                      "width": "100px",
                                                    }
                                                  }
                                                />
                                              </a>
                                            </StackItem>
                                          </Stack>
                                        }
                                        zIndex={9999}
                                      >
                                        <FindRefWrapper
                                          onFoundRef={[Function]}
                                        >
                                          <Stack
                                            className="popover-content"
                                          >
                                            <div
                                              className="pf-l-stack popover-content"
                                            >
                                              <StackItem>
                                                <div
                                                  className="pf-l-stack__item"
                                                >
                                                  <Label
                                                    isLarge={true}
                                                  >
                                                    <span
                                                      className="vuln-label "
                                                      style={
                                                        {
                                                          "display": "block",
                                                          "fontSize": "medium",
                                                        }
                                                      }
                                                    >
                                                      Business risk
                                                    </span>
                                                  </Label>
                                                </div>
                                              </StackItem>
                                              <StackItem>
                                                <div
                                                  className="pf-l-stack__item"
                                                >
                                                  <a>
                                                    <WithLoader
                                                      isLoading={true}
                                                      style={
                                                        {
                                                          "width": "100px",
                                                        }
                                                      }
                                                    >
                                                      <Skeleton
                                                        size="lg"
                                                        style={
                                                          {
                                                            "width": "100px",
                                                          }
                                                        }
                                                      >
                                                        <Skeleton
                                                          className="ins-c-skeleton ins-c-skeleton__lg"
                                                          style={
                                                            {
                                                              "width": "100px",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__lg"
                                                            style={
                                                              {
                                                                "width": "100px",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="pf-u-screen-reader"
                                                            />
                                                          </div>
                                                        </Skeleton>
                                                      </Skeleton>
                                                    </WithLoader>
                                                  </a>
                                                </div>
                                              </StackItem>
                                            </div>
                                          </Stack>
                                        </FindRefWrapper>
                                      </Popper>
                                    </Popover>
                                  </SnippetWithHeaderAndPopover>
                                </div>
                              </SplitItem>
                              <SplitItem
                                className="pf-u-ml-lg"
                              >
                                <div
                                  className="pf-l-split__item pf-u-ml-lg"
                                >
                                  <SnippetWithHeaderAndPopover
                                    content={
                                      <Stack
                                        className="pf-u-p-xs"
                                      >
                                        <StackItem>
                                          <Label
                                            className="pf-u-mb-xs"
                                          >
                                            CVE status
                                          </Label>
                                          --
                                          <Label
                                            className="pf-u-mb-xs pf-u-mt-sm"
                                          >
                                            Justification note
                                          </Label>
                                          --
                                        </StackItem>
                                      </Stack>
                                    }
                                    title="Status"
                                    value={
                                      <WithLoader
                                        isLoading={true}
                                        style={
                                          {
                                            "width": "100px",
                                          }
                                        }
                                      >
                                        <span>
                                           
                                        </span>
                                      </WithLoader>
                                    }
                                  >
                                    <Popover
                                      appendTo={null}
                                      bodyContent={
                                        <Stack
                                          className="pf-u-p-xs"
                                        >
                                          <StackItem>
                                            <Label
                                              className="pf-u-mb-xs"
                                            >
                                              CVE status
                                            </Label>
                                            --
                                            <Label
                                              className="pf-u-mb-xs pf-u-mt-sm"
                                            >
                                              Justification note
                                            </Label>
                                            --
                                          </StackItem>
                                        </Stack>
                                      }
                                      headerContent=""
                                      id="popover"
                                      position="bottom"
                                    >
                                      <Popper
                                        appendTo={null}
                                        distance={25}
                                        enableFlip={true}
                                        flipBehavior={
                                          [
                                            "top",
                                            "bottom",
                                            "left",
                                            "right",
                                            "top-start",
                                            "top-end",
                                            "bottom-start",
                                            "bottom-end",
                                            "left-start",
                                            "left-end",
                                            "right-start",
                                            "right-end",
                                          ]
                                        }
                                        isVisible={false}
                                        onDocumentClick={[Function]}
                                        onDocumentKeyDown={[Function]}
                                        onTriggerClick={[Function]}
                                        placement="bottom"
                                        popper={
                                          <ForwardRef
                                            active={false}
                                            aria-describedby="popover-popover-body"
                                            aria-label=""
                                            aria-modal="true"
                                            className="pf-c-popover"
                                            focusTrapOptions={
                                              {
                                                "clickOutsideDeactivates": true,
                                                "fallbackFocus": [Function],
                                                "returnFocusOnDeactivate": true,
                                                "tabbableOptions": {
                                                  "displayCheck": "none",
                                                },
                                              }
                                            }
                                            onMouseDown={[Function]}
                                            preventScrollOnDeactivate={true}
                                            role="dialog"
                                            style={
                                              {
                                                "maxWidth": null,
                                                "minWidth": null,
                                                "opacity": 0,
                                                "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                              }
                                            }
                                          >
                                            <PopoverArrow />
                                            <PopoverContent>
                                              <PopoverCloseButton
                                                aria-label="Close"
                                                onClose={[Function]}
                                              />
                                              
                                              <PopoverBody
                                                id="popover-popover-body"
                                              >
                                                <Stack
                                                  className="pf-u-p-xs"
                                                >
                                                  <StackItem>
                                                    <Label
                                                      className="pf-u-mb-xs"
                                                    >
                                                      CVE status
                                                    </Label>
                                                    --
                                                    <Label
                                                      className="pf-u-mb-xs pf-u-mt-sm"
                                                    >
                                                      Justification note
                                                    </Label>
                                                    --
                                                  </StackItem>
                                                </Stack>
                                              </PopoverBody>
                                            </PopoverContent>
                                          </ForwardRef>
                                        }
                                        popperMatchesTriggerWidth={false}
                                        positionModifiers={
                                          {
                                            "bottom": "pf-m-bottom",
                                            "bottom-end": "pf-m-bottom-right",
                                            "bottom-start": "pf-m-bottom-left",
                                            "left": "pf-m-left",
                                            "left-end": "pf-m-left-bottom",
                                            "left-start": "pf-m-left-top",
                                            "right": "pf-m-right",
                                            "right-end": "pf-m-right-bottom",
                                            "right-start": "pf-m-right-top",
                                            "top": "pf-m-top",
                                            "top-end": "pf-m-top-right",
                                            "top-start": "pf-m-top-left",
                                          }
                                        }
                                        removeFindDomNode={false}
                                        trigger={
                                          <Stack
                                            className="popover-content"
                                          >
                                            <StackItem>
                                              <Label
                                                isLarge={true}
                                              >
                                                Status
                                              </Label>
                                            </StackItem>
                                            <StackItem>
                                              <a>
                                                <WithLoader
                                                  isLoading={true}
                                                  style={
                                                    {
                                                      "width": "100px",
                                                    }
                                                  }
                                                >
                                                  <span>
                                                     
                                                  </span>
                                                </WithLoader>
                                              </a>
                                            </StackItem>
                                          </Stack>
                                        }
                                        zIndex={9999}
                                      >
                                        <FindRefWrapper
                                          onFoundRef={[Function]}
                                        >
                                          <Stack
                                            className="popover-content"
                                          >
                                            <div
                                              className="pf-l-stack popover-content"
                                            >
                                              <StackItem>
                                                <div
                                                  className="pf-l-stack__item"
                                                >
                                                  <Label
                                                    isLarge={true}
                                                  >
                                                    <span
                                                      className="vuln-label "
                                                      style={
                                                        {
                                                          "display": "block",
                                                          "fontSize": "medium",
                                                        }
                                                      }
                                                    >
                                                      Status
                                                    </span>
                                                  </Label>
                                                </div>
                                              </StackItem>
                                              <StackItem>
                                                <div
                                                  className="pf-l-stack__item"
                                                >
                                                  <a>
                                                    <WithLoader
                                                      isLoading={true}
                                                      style={
                                                        {
                                                          "width": "100px",
                                                        }
                                                      }
                                                    >
                                                      <Skeleton
                                                        size="lg"
                                                        style={
                                                          {
                                                            "width": "100px",
                                                          }
                                                        }
                                                      >
                                                        <Skeleton
                                                          className="ins-c-skeleton ins-c-skeleton__lg"
                                                          style={
                                                            {
                                                              "width": "100px",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__lg"
                                                            style={
                                                              {
                                                                "width": "100px",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="pf-u-screen-reader"
                                                            />
                                                          </div>
                                                        </Skeleton>
                                                      </Skeleton>
                                                    </WithLoader>
                                                  </a>
                                                </div>
                                              </StackItem>
                                            </div>
                                          </Stack>
                                        </FindRefWrapper>
                                      </Popper>
                                    </Popover>
                                  </SnippetWithHeaderAndPopover>
                                </div>
                              </SplitItem>
                            </div>
                          </Split>
                        </div>
                      </StackItem>
                      <StackItem>
                        <div
                          className="pf-l-stack__item"
                        >
                          <Label
                            className="pf-u-mb-xs"
                            isLarge={true}
                          >
                            <span
                              className="vuln-label pf-u-mb-xs"
                              style={
                                {
                                  "display": "block",
                                  "fontSize": "medium",
                                }
                              }
                            >
                              Severity
                            </span>
                          </Label>
                          <WithLoader
                            isLoading={true}
                            style={
                              {
                                "width": "100px",
                              }
                            }
                          >
                            <Skeleton
                              size="lg"
                              style={
                                {
                                  "width": "100px",
                                }
                              }
                            >
                              <Skeleton
                                className="ins-c-skeleton ins-c-skeleton__lg"
                                style={
                                  {
                                    "width": "100px",
                                  }
                                }
                              >
                                <div
                                  className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__lg"
                                  style={
                                    {
                                      "width": "100px",
                                    }
                                  }
                                >
                                  <span
                                    className="pf-u-screen-reader"
                                  />
                                </div>
                              </Skeleton>
                            </Skeleton>
                          </WithLoader>
                        </div>
                      </StackItem>
                      <StackItem>
                        <div
                          className="pf-l-stack__item"
                        >
                          <injectIntl(CvssVector)
                            score={
                              <Tooltip
                                content="CVEs published before 2005 (approximately) did not have a CVSS Base Score."
                                position="left"
                              >
                                <span>
                                  N/A
                                </span>
                              </Tooltip>
                            }
                          >
                            <CvssVector
                              intl={
                                {
                                  "$t": [Function],
                                  "defaultFormats": {},
                                  "defaultLocale": "en",
                                  "defaultRichTextElements": undefined,
                                  "fallbackOnEmptyString": true,
                                  "formatDate": [Function],
                                  "formatDateTimeRange": [Function],
                                  "formatDateToParts": [Function],
                                  "formatDisplayName": [Function],
                                  "formatList": [Function],
                                  "formatListToParts": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatNumberToParts": [Function],
                                  "formatPlural": [Function],
                                  "formatRelativeTime": [Function],
                                  "formatTime": [Function],
                                  "formatTimeToParts": [Function],
                                  "formats": {},
                                  "formatters": {
                                    "getDateTimeFormat": [Function],
                                    "getDisplayNames": [Function],
                                    "getListFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralRules": [Function],
                                    "getRelativeTimeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": {
                                    "default.cancel": "Cancel",
                                    "default.delete": "Delete",
                                    "default.remove": "Remove",
                                    "default.save": "Save",
                                  },
                                  "onError": [Function],
                                  "onWarn": [Function],
                                  "textComponent": Symbol(react.fragment),
                                  "timeZone": undefined,
                                  "wrapRichTextChunksInFragment": undefined,
                                }
                              }
                              score={
                                <Tooltip
                                  content="CVEs published before 2005 (approximately) did not have a CVSS Base Score."
                                  position="left"
                                >
                                  <span>
                                    N/A
                                  </span>
                                </Tooltip>
                              }
                            >
                              <TextContent>
                                <div
                                  className="pf-c-content"
                                >
                                  <Popover
                                    bodyContent={
                                      <WithLoader
                                        colSize={2}
                                        isLoading={true}
                                        rowSize={8}
                                        variant="compactTable"
                                      >
                                        N/A
                                      </WithLoader>
                                    }
                                    enableFlip={true}
                                    headerContent="CVSS 3.0  vector breakdown"
                                    id="popover-cvss"
                                    maxWidth="100%"
                                    position="bottom"
                                  >
                                    <Popper
                                      appendTo={[Function]}
                                      distance={25}
                                      enableFlip={true}
                                      flipBehavior={
                                        [
                                          "top",
                                          "bottom",
                                          "left",
                                          "right",
                                          "top-start",
                                          "top-end",
                                          "bottom-start",
                                          "bottom-end",
                                          "left-start",
                                          "left-end",
                                          "right-start",
                                          "right-end",
                                        ]
                                      }
                                      isVisible={false}
                                      onDocumentClick={[Function]}
                                      onDocumentKeyDown={[Function]}
                                      onTriggerClick={[Function]}
                                      placement="bottom"
                                      popper={
                                        <ForwardRef
                                          active={false}
                                          aria-describedby="popover-popover-cvss-body"
                                          aria-labelledby="popover-popover-cvss-header"
                                          aria-modal="true"
                                          className="pf-c-popover"
                                          focusTrapOptions={
                                            {
                                              "clickOutsideDeactivates": true,
                                              "fallbackFocus": [Function],
                                              "returnFocusOnDeactivate": true,
                                              "tabbableOptions": {
                                                "displayCheck": "none",
                                              },
                                            }
                                          }
                                          onMouseDown={[Function]}
                                          preventScrollOnDeactivate={true}
                                          role="dialog"
                                          style={
                                            {
                                              "maxWidth": "100%",
                                              "minWidth": null,
                                              "opacity": 0,
                                              "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                            }
                                          }
                                        >
                                          <PopoverArrow />
                                          <PopoverContent>
                                            <PopoverCloseButton
                                              aria-label="Close"
                                              onClose={[Function]}
                                            />
                                            <PopoverHeader
                                              alertSeverityScreenReaderText="undefined alert:"
                                              icon={null}
                                              id="popover-popover-cvss-header"
                                              titleHeadingLevel="h6"
                                            >
                                              CVSS 3.0  vector breakdown
                                            </PopoverHeader>
                                            <PopoverBody
                                              id="popover-popover-cvss-body"
                                            >
                                              <WithLoader
                                                colSize={2}
                                                isLoading={true}
                                                rowSize={8}
                                                variant="compactTable"
                                              >
                                                N/A
                                              </WithLoader>
                                            </PopoverBody>
                                          </PopoverContent>
                                        </ForwardRef>
                                      }
                                      popperMatchesTriggerWidth={false}
                                      positionModifiers={
                                        {
                                          "bottom": "pf-m-bottom",
                                          "bottom-end": "pf-m-bottom-right",
                                          "bottom-start": "pf-m-bottom-left",
                                          "left": "pf-m-left",
                                          "left-end": "pf-m-left-bottom",
                                          "left-start": "pf-m-left-top",
                                          "right": "pf-m-right",
                                          "right-end": "pf-m-right-bottom",
                                          "right-start": "pf-m-right-top",
                                          "top": "pf-m-top",
                                          "top-end": "pf-m-top-right",
                                          "top-start": "pf-m-top-left",
                                        }
                                      }
                                      removeFindDomNode={false}
                                      trigger={
                                        <Label
                                          className="pf-u-mb-xs pointer"
                                          isLarge={true}
                                        >
                                          CVSS 3.0
                                           
                                           base score
                                          <OutlinedQuestionCircleIcon
                                            className="pf-u-ml-xs"
                                            color="var(--pf-global--secondary-color--100)"
                                            noVerticalAlign={false}
                                            size="sm"
                                          />
                                        </Label>
                                      }
                                      zIndex={9999}
                                    >
                                      <FindRefWrapper
                                        onFoundRef={[Function]}
                                      >
                                        <Label
                                          className="pf-u-mb-xs pointer"
                                          isLarge={true}
                                        >
                                          <span
                                            className="vuln-label pf-u-mb-xs pointer"
                                            style={
                                              {
                                                "display": "block",
                                                "fontSize": "medium",
                                              }
                                            }
                                          >
                                            CVSS 3.0
                                             
                                             base score
                                            <OutlinedQuestionCircleIcon
                                              className="pf-u-ml-xs"
                                              color="var(--pf-global--secondary-color--100)"
                                              noVerticalAlign={false}
                                              size="sm"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-labelledby={null}
                                                className="pf-u-ml-xs"
                                                fill="var(--pf-global--secondary-color--100)"
                                                height="1em"
                                                role="img"
                                                style={
                                                  {
                                                    "verticalAlign": "-0.125em",
                                                  }
                                                }
                                                viewBox="0 0 512 512"
                                                width="1em"
                                              >
                                                <path
                                                  d="M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 448c-110.532 0-200-89.431-200-200 0-110.495 89.472-200 200-200 110.491 0 200 89.471 200 200 0 110.53-89.431 200-200 200zm107.244-255.2c0 67.052-72.421 68.084-72.421 92.863V300c0 6.627-5.373 12-12 12h-45.647c-6.627 0-12-5.373-12-12v-8.659c0-35.745 27.1-50.034 47.579-61.516 17.561-9.845 28.324-16.541 28.324-29.579 0-17.246-21.999-28.693-39.784-28.693-23.189 0-33.894 10.977-48.942 29.969-4.057 5.12-11.46 6.071-16.666 2.124l-27.824-21.098c-5.107-3.872-6.251-11.066-2.644-16.363C184.846 131.491 214.94 112 261.794 112c49.071 0 101.45 38.304 101.45 88.8zM298 368c0 23.159-18.841 42-42 42s-42-18.841-42-42 18.841-42 42-42 42 18.841 42 42z"
                                                />
                                              </svg>
                                            </OutlinedQuestionCircleIcon>
                                          </span>
                                        </Label>
                                      </FindRefWrapper>
                                    </Popper>
                                  </Popover>
                                  <WithLoader
                                    isLoading={true}
                                    style={
                                      {
                                        "width": "320px",
                                      }
                                    }
                                  >
                                    <Skeleton
                                      size="lg"
                                      style={
                                        {
                                          "width": "320px",
                                        }
                                      }
                                    >
                                      <Skeleton
                                        className="ins-c-skeleton ins-c-skeleton__lg"
                                        style={
                                          {
                                            "width": "320px",
                                          }
                                        }
                                      >
                                        <div
                                          className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__lg"
                                          style={
                                            {
                                              "width": "320px",
                                            }
                                          }
                                        >
                                          <span
                                            className="pf-u-screen-reader"
                                          />
                                        </div>
                                      </Skeleton>
                                    </Skeleton>
                                  </WithLoader>
                                </div>
                              </TextContent>
                            </CvssVector>
                          </injectIntl(CvssVector)>
                        </div>
                      </StackItem>
                    </div>
                  </Stack>
                </CVEDetailsPageSidebar>
              </div>
            </GridItem>
            <injectIntl(CSAwRuleBox)>
              <CSAwRuleBox
                intl={
                  {
                    "$t": [Function],
                    "defaultFormats": {},
                    "defaultLocale": "en",
                    "defaultRichTextElements": undefined,
                    "fallbackOnEmptyString": true,
                    "formatDate": [Function],
                    "formatDateTimeRange": [Function],
                    "formatDateToParts": [Function],
                    "formatDisplayName": [Function],
                    "formatList": [Function],
                    "formatListToParts": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatNumberToParts": [Function],
                    "formatPlural": [Function],
                    "formatRelativeTime": [Function],
                    "formatTime": [Function],
                    "formatTimeToParts": [Function],
                    "formats": {},
                    "formatters": {
                      "getDateTimeFormat": [Function],
                      "getDisplayNames": [Function],
                      "getListFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralRules": [Function],
                      "getRelativeTimeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": {
                      "default.cancel": "Cancel",
                      "default.delete": "Delete",
                      "default.remove": "Remove",
                      "default.save": "Save",
                    },
                    "onError": [Function],
                    "onWarn": [Function],
                    "textComponent": Symbol(react.fragment),
                    "timeZone": undefined,
                    "wrapRichTextChunksInFragment": undefined,
                  }
                }
                rules={[]}
              />
            </injectIntl(CSAwRuleBox)>
            <NotVulnerableBox />
          </div>
        </Grid>
      </CVEDetailsPageSummary>
    </Router>
  </BrowserRouter>
</Provider>
`;

exports[`CVEDetailsPageSummary component should render without data 1`] = `
<Provider
  store={
    {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      location={
        {
          "hash": "",
          "key": "default",
          "pathname": "/",
          "search": "",
          "state": null,
        }
      }
      navigationType="POP"
      navigator={
        {
          "action": "POP",
          "createHref": [Function],
          "createURL": [Function],
          "encodeLocation": [Function],
          "go": [Function],
          "listen": [Function],
          "location": {
            "hash": "",
            "key": "default",
            "pathname": "/",
            "search": "",
            "state": null,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <CVEDetailsPageSummary
        data={
          {
            "data": {},
            "isLoading": false,
            "meta": {},
          }
        }
      >
        <Grid
          hasGutter={true}
        >
          <div
            className="pf-l-grid pf-m-gutter"
          >
            <GridItem
              md={8}
              sm={12}
            >
              <div
                className="pf-l-grid__item pf-m-12-col-on-sm pf-m-8-col-on-md"
              >
                <injectIntl(CVEDetailsPageDescription)
                  cveAttributes={{}}
                >
                  <CVEDetailsPageDescription
                    cveAttributes={{}}
                    intl={
                      {
                        "$t": [Function],
                        "defaultFormats": {},
                        "defaultLocale": "en",
                        "defaultRichTextElements": undefined,
                        "fallbackOnEmptyString": true,
                        "formatDate": [Function],
                        "formatDateTimeRange": [Function],
                        "formatDateToParts": [Function],
                        "formatDisplayName": [Function],
                        "formatList": [Function],
                        "formatListToParts": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatNumberToParts": [Function],
                        "formatPlural": [Function],
                        "formatRelativeTime": [Function],
                        "formatTime": [Function],
                        "formatTimeToParts": [Function],
                        "formats": {},
                        "formatters": {
                          "getDateTimeFormat": [Function],
                          "getDisplayNames": [Function],
                          "getListFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralRules": [Function],
                          "getRelativeTimeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": {
                          "default.cancel": "Cancel",
                          "default.delete": "Delete",
                          "default.remove": "Remove",
                          "default.save": "Save",
                        },
                        "onError": [Function],
                        "onWarn": [Function],
                        "textComponent": Symbol(react.fragment),
                        "timeZone": undefined,
                        "wrapRichTextChunksInFragment": undefined,
                      }
                    }
                  >
                    <Stack
                      hasGutter={true}
                    >
                      <div
                        className="pf-l-stack pf-m-gutter"
                      >
                        <StackItem>
                          <div
                            className="pf-l-stack__item"
                          >
                            <WithLoader
                              isLoading={true}
                              style={
                                {
                                  "height": "132px",
                                  "width": "100%",
                                }
                              }
                              variant="rectangle"
                            >
                              <Skeleton
                                shape="square"
                                style={
                                  {
                                    "height": "132px",
                                    "width": "100%",
                                  }
                                }
                              >
                                <Skeleton
                                  className="ins-c-skeleton ins-c-skeleton__md"
                                  shape="square"
                                  style={
                                    {
                                      "height": "132px",
                                      "width": "100%",
                                    }
                                  }
                                >
                                  <div
                                    className="pf-c-skeleton pf-m-square ins-c-skeleton ins-c-skeleton__md"
                                    style={
                                      {
                                        "height": "132px",
                                        "width": "100%",
                                      }
                                    }
                                  >
                                    <span
                                      className="pf-u-screen-reader"
                                    />
                                  </div>
                                </Skeleton>
                              </Skeleton>
                            </WithLoader>
                          </div>
                        </StackItem>
                        <StackItem
                          className="pf-u-mt-sm pf-u-mb-md"
                        >
                          <div
                            className="pf-l-stack__item pf-u-mt-sm pf-u-mb-md"
                          >
                            For most up-to-date information, 
                          </div>
                        </StackItem>
                      </div>
                    </Stack>
                  </CVEDetailsPageDescription>
                </injectIntl(CVEDetailsPageDescription)>
              </div>
            </GridItem>
            <GridItem
              className="pf-u-mt-sm pf-u-ml-sm"
              md={4}
              sm={12}
            >
              <div
                className="pf-l-grid__item pf-m-12-col-on-sm pf-m-4-col-on-md pf-u-mt-sm pf-u-ml-sm"
              >
                <CVEDetailsPageSidebar
                  cveAttributes={{}}
                >
                  <Stack
                    hasGutter={true}
                  >
                    <div
                      className="pf-l-stack pf-m-gutter"
                    >
                      <StackItem>
                        <div
                          className="pf-l-stack__item"
                        >
                          <Split
                            hasGutter={true}
                          >
                            <div
                              className="pf-l-split pf-m-gutter"
                            >
                              <SplitItem>
                                <div
                                  className="pf-l-split__item"
                                >
                                  <SnippetWithHeaderAndPopover
                                    content={
                                      <Stack
                                        className="pf-u-p-xs"
                                      >
                                        <StackItem>
                                          <Label
                                            className="pf-u-mb-xs"
                                          >
                                            Justification note
                                          </Label>
                                        </StackItem>
                                        <StackItem>
                                          --
                                        </StackItem>
                                      </Stack>
                                    }
                                    title="Business risk"
                                    value={
                                      <WithLoader
                                        isLoading={true}
                                        style={
                                          {
                                            "width": "100px",
                                          }
                                        }
                                      />
                                    }
                                  >
                                    <Popover
                                      appendTo={null}
                                      bodyContent={
                                        <Stack
                                          className="pf-u-p-xs"
                                        >
                                          <StackItem>
                                            <Label
                                              className="pf-u-mb-xs"
                                            >
                                              Justification note
                                            </Label>
                                          </StackItem>
                                          <StackItem>
                                            --
                                          </StackItem>
                                        </Stack>
                                      }
                                      headerContent=""
                                      id="popover"
                                      position="bottom"
                                    >
                                      <Popper
                                        appendTo={null}
                                        distance={25}
                                        enableFlip={true}
                                        flipBehavior={
                                          [
                                            "top",
                                            "bottom",
                                            "left",
                                            "right",
                                            "top-start",
                                            "top-end",
                                            "bottom-start",
                                            "bottom-end",
                                            "left-start",
                                            "left-end",
                                            "right-start",
                                            "right-end",
                                          ]
                                        }
                                        isVisible={false}
                                        onDocumentClick={[Function]}
                                        onDocumentKeyDown={[Function]}
                                        onTriggerClick={[Function]}
                                        placement="bottom"
                                        popper={
                                          <ForwardRef
                                            active={false}
                                            aria-describedby="popover-popover-body"
                                            aria-label=""
                                            aria-modal="true"
                                            className="pf-c-popover"
                                            focusTrapOptions={
                                              {
                                                "clickOutsideDeactivates": true,
                                                "fallbackFocus": [Function],
                                                "returnFocusOnDeactivate": true,
                                                "tabbableOptions": {
                                                  "displayCheck": "none",
                                                },
                                              }
                                            }
                                            onMouseDown={[Function]}
                                            preventScrollOnDeactivate={true}
                                            role="dialog"
                                            style={
                                              {
                                                "maxWidth": null,
                                                "minWidth": null,
                                                "opacity": 0,
                                                "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                              }
                                            }
                                          >
                                            <PopoverArrow />
                                            <PopoverContent>
                                              <PopoverCloseButton
                                                aria-label="Close"
                                                onClose={[Function]}
                                              />
                                              
                                              <PopoverBody
                                                id="popover-popover-body"
                                              >
                                                <Stack
                                                  className="pf-u-p-xs"
                                                >
                                                  <StackItem>
                                                    <Label
                                                      className="pf-u-mb-xs"
                                                    >
                                                      Justification note
                                                    </Label>
                                                  </StackItem>
                                                  <StackItem>
                                                    --
                                                  </StackItem>
                                                </Stack>
                                              </PopoverBody>
                                            </PopoverContent>
                                          </ForwardRef>
                                        }
                                        popperMatchesTriggerWidth={false}
                                        positionModifiers={
                                          {
                                            "bottom": "pf-m-bottom",
                                            "bottom-end": "pf-m-bottom-right",
                                            "bottom-start": "pf-m-bottom-left",
                                            "left": "pf-m-left",
                                            "left-end": "pf-m-left-bottom",
                                            "left-start": "pf-m-left-top",
                                            "right": "pf-m-right",
                                            "right-end": "pf-m-right-bottom",
                                            "right-start": "pf-m-right-top",
                                            "top": "pf-m-top",
                                            "top-end": "pf-m-top-right",
                                            "top-start": "pf-m-top-left",
                                          }
                                        }
                                        removeFindDomNode={false}
                                        trigger={
                                          <Stack
                                            className="popover-content"
                                          >
                                            <StackItem>
                                              <Label
                                                isLarge={true}
                                              >
                                                Business risk
                                              </Label>
                                            </StackItem>
                                            <StackItem>
                                              <a>
                                                <WithLoader
                                                  isLoading={true}
                                                  style={
                                                    {
                                                      "width": "100px",
                                                    }
                                                  }
                                                />
                                              </a>
                                            </StackItem>
                                          </Stack>
                                        }
                                        zIndex={9999}
                                      >
                                        <FindRefWrapper
                                          onFoundRef={[Function]}
                                        >
                                          <Stack
                                            className="popover-content"
                                          >
                                            <div
                                              className="pf-l-stack popover-content"
                                            >
                                              <StackItem>
                                                <div
                                                  className="pf-l-stack__item"
                                                >
                                                  <Label
                                                    isLarge={true}
                                                  >
                                                    <span
                                                      className="vuln-label "
                                                      style={
                                                        {
                                                          "display": "block",
                                                          "fontSize": "medium",
                                                        }
                                                      }
                                                    >
                                                      Business risk
                                                    </span>
                                                  </Label>
                                                </div>
                                              </StackItem>
                                              <StackItem>
                                                <div
                                                  className="pf-l-stack__item"
                                                >
                                                  <a>
                                                    <WithLoader
                                                      isLoading={true}
                                                      style={
                                                        {
                                                          "width": "100px",
                                                        }
                                                      }
                                                    >
                                                      <Skeleton
                                                        size="lg"
                                                        style={
                                                          {
                                                            "width": "100px",
                                                          }
                                                        }
                                                      >
                                                        <Skeleton
                                                          className="ins-c-skeleton ins-c-skeleton__lg"
                                                          style={
                                                            {
                                                              "width": "100px",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__lg"
                                                            style={
                                                              {
                                                                "width": "100px",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="pf-u-screen-reader"
                                                            />
                                                          </div>
                                                        </Skeleton>
                                                      </Skeleton>
                                                    </WithLoader>
                                                  </a>
                                                </div>
                                              </StackItem>
                                            </div>
                                          </Stack>
                                        </FindRefWrapper>
                                      </Popper>
                                    </Popover>
                                  </SnippetWithHeaderAndPopover>
                                </div>
                              </SplitItem>
                              <SplitItem
                                className="pf-u-ml-lg"
                              >
                                <div
                                  className="pf-l-split__item pf-u-ml-lg"
                                >
                                  <SnippetWithHeaderAndPopover
                                    content={
                                      <Stack
                                        className="pf-u-p-xs"
                                      >
                                        <StackItem>
                                          <Label
                                            className="pf-u-mb-xs"
                                          >
                                            CVE status
                                          </Label>
                                          --
                                          <Label
                                            className="pf-u-mb-xs pf-u-mt-sm"
                                          >
                                            Justification note
                                          </Label>
                                          --
                                        </StackItem>
                                      </Stack>
                                    }
                                    title="Status"
                                    value={
                                      <WithLoader
                                        isLoading={true}
                                        style={
                                          {
                                            "width": "100px",
                                          }
                                        }
                                      >
                                        <span>
                                           
                                        </span>
                                      </WithLoader>
                                    }
                                  >
                                    <Popover
                                      appendTo={null}
                                      bodyContent={
                                        <Stack
                                          className="pf-u-p-xs"
                                        >
                                          <StackItem>
                                            <Label
                                              className="pf-u-mb-xs"
                                            >
                                              CVE status
                                            </Label>
                                            --
                                            <Label
                                              className="pf-u-mb-xs pf-u-mt-sm"
                                            >
                                              Justification note
                                            </Label>
                                            --
                                          </StackItem>
                                        </Stack>
                                      }
                                      headerContent=""
                                      id="popover"
                                      position="bottom"
                                    >
                                      <Popper
                                        appendTo={null}
                                        distance={25}
                                        enableFlip={true}
                                        flipBehavior={
                                          [
                                            "top",
                                            "bottom",
                                            "left",
                                            "right",
                                            "top-start",
                                            "top-end",
                                            "bottom-start",
                                            "bottom-end",
                                            "left-start",
                                            "left-end",
                                            "right-start",
                                            "right-end",
                                          ]
                                        }
                                        isVisible={false}
                                        onDocumentClick={[Function]}
                                        onDocumentKeyDown={[Function]}
                                        onTriggerClick={[Function]}
                                        placement="bottom"
                                        popper={
                                          <ForwardRef
                                            active={false}
                                            aria-describedby="popover-popover-body"
                                            aria-label=""
                                            aria-modal="true"
                                            className="pf-c-popover"
                                            focusTrapOptions={
                                              {
                                                "clickOutsideDeactivates": true,
                                                "fallbackFocus": [Function],
                                                "returnFocusOnDeactivate": true,
                                                "tabbableOptions": {
                                                  "displayCheck": "none",
                                                },
                                              }
                                            }
                                            onMouseDown={[Function]}
                                            preventScrollOnDeactivate={true}
                                            role="dialog"
                                            style={
                                              {
                                                "maxWidth": null,
                                                "minWidth": null,
                                                "opacity": 0,
                                                "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                              }
                                            }
                                          >
                                            <PopoverArrow />
                                            <PopoverContent>
                                              <PopoverCloseButton
                                                aria-label="Close"
                                                onClose={[Function]}
                                              />
                                              
                                              <PopoverBody
                                                id="popover-popover-body"
                                              >
                                                <Stack
                                                  className="pf-u-p-xs"
                                                >
                                                  <StackItem>
                                                    <Label
                                                      className="pf-u-mb-xs"
                                                    >
                                                      CVE status
                                                    </Label>
                                                    --
                                                    <Label
                                                      className="pf-u-mb-xs pf-u-mt-sm"
                                                    >
                                                      Justification note
                                                    </Label>
                                                    --
                                                  </StackItem>
                                                </Stack>
                                              </PopoverBody>
                                            </PopoverContent>
                                          </ForwardRef>
                                        }
                                        popperMatchesTriggerWidth={false}
                                        positionModifiers={
                                          {
                                            "bottom": "pf-m-bottom",
                                            "bottom-end": "pf-m-bottom-right",
                                            "bottom-start": "pf-m-bottom-left",
                                            "left": "pf-m-left",
                                            "left-end": "pf-m-left-bottom",
                                            "left-start": "pf-m-left-top",
                                            "right": "pf-m-right",
                                            "right-end": "pf-m-right-bottom",
                                            "right-start": "pf-m-right-top",
                                            "top": "pf-m-top",
                                            "top-end": "pf-m-top-right",
                                            "top-start": "pf-m-top-left",
                                          }
                                        }
                                        removeFindDomNode={false}
                                        trigger={
                                          <Stack
                                            className="popover-content"
                                          >
                                            <StackItem>
                                              <Label
                                                isLarge={true}
                                              >
                                                Status
                                              </Label>
                                            </StackItem>
                                            <StackItem>
                                              <a>
                                                <WithLoader
                                                  isLoading={true}
                                                  style={
                                                    {
                                                      "width": "100px",
                                                    }
                                                  }
                                                >
                                                  <span>
                                                     
                                                  </span>
                                                </WithLoader>
                                              </a>
                                            </StackItem>
                                          </Stack>
                                        }
                                        zIndex={9999}
                                      >
                                        <FindRefWrapper
                                          onFoundRef={[Function]}
                                        >
                                          <Stack
                                            className="popover-content"
                                          >
                                            <div
                                              className="pf-l-stack popover-content"
                                            >
                                              <StackItem>
                                                <div
                                                  className="pf-l-stack__item"
                                                >
                                                  <Label
                                                    isLarge={true}
                                                  >
                                                    <span
                                                      className="vuln-label "
                                                      style={
                                                        {
                                                          "display": "block",
                                                          "fontSize": "medium",
                                                        }
                                                      }
                                                    >
                                                      Status
                                                    </span>
                                                  </Label>
                                                </div>
                                              </StackItem>
                                              <StackItem>
                                                <div
                                                  className="pf-l-stack__item"
                                                >
                                                  <a>
                                                    <WithLoader
                                                      isLoading={true}
                                                      style={
                                                        {
                                                          "width": "100px",
                                                        }
                                                      }
                                                    >
                                                      <Skeleton
                                                        size="lg"
                                                        style={
                                                          {
                                                            "width": "100px",
                                                          }
                                                        }
                                                      >
                                                        <Skeleton
                                                          className="ins-c-skeleton ins-c-skeleton__lg"
                                                          style={
                                                            {
                                                              "width": "100px",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__lg"
                                                            style={
                                                              {
                                                                "width": "100px",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="pf-u-screen-reader"
                                                            />
                                                          </div>
                                                        </Skeleton>
                                                      </Skeleton>
                                                    </WithLoader>
                                                  </a>
                                                </div>
                                              </StackItem>
                                            </div>
                                          </Stack>
                                        </FindRefWrapper>
                                      </Popper>
                                    </Popover>
                                  </SnippetWithHeaderAndPopover>
                                </div>
                              </SplitItem>
                            </div>
                          </Split>
                        </div>
                      </StackItem>
                      <StackItem>
                        <div
                          className="pf-l-stack__item"
                        >
                          <Label
                            className="pf-u-mb-xs"
                            isLarge={true}
                          >
                            <span
                              className="vuln-label pf-u-mb-xs"
                              style={
                                {
                                  "display": "block",
                                  "fontSize": "medium",
                                }
                              }
                            >
                              Severity
                            </span>
                          </Label>
                          <WithLoader
                            isLoading={true}
                            style={
                              {
                                "width": "100px",
                              }
                            }
                          >
                            <Skeleton
                              size="lg"
                              style={
                                {
                                  "width": "100px",
                                }
                              }
                            >
                              <Skeleton
                                className="ins-c-skeleton ins-c-skeleton__lg"
                                style={
                                  {
                                    "width": "100px",
                                  }
                                }
                              >
                                <div
                                  className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__lg"
                                  style={
                                    {
                                      "width": "100px",
                                    }
                                  }
                                >
                                  <span
                                    className="pf-u-screen-reader"
                                  />
                                </div>
                              </Skeleton>
                            </Skeleton>
                          </WithLoader>
                        </div>
                      </StackItem>
                      <StackItem>
                        <div
                          className="pf-l-stack__item"
                        >
                          <injectIntl(CvssVector)
                            score={
                              <Tooltip
                                content="CVEs published before 2005 (approximately) did not have a CVSS Base Score."
                                position="left"
                              >
                                <span>
                                  N/A
                                </span>
                              </Tooltip>
                            }
                          >
                            <CvssVector
                              intl={
                                {
                                  "$t": [Function],
                                  "defaultFormats": {},
                                  "defaultLocale": "en",
                                  "defaultRichTextElements": undefined,
                                  "fallbackOnEmptyString": true,
                                  "formatDate": [Function],
                                  "formatDateTimeRange": [Function],
                                  "formatDateToParts": [Function],
                                  "formatDisplayName": [Function],
                                  "formatList": [Function],
                                  "formatListToParts": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatNumberToParts": [Function],
                                  "formatPlural": [Function],
                                  "formatRelativeTime": [Function],
                                  "formatTime": [Function],
                                  "formatTimeToParts": [Function],
                                  "formats": {},
                                  "formatters": {
                                    "getDateTimeFormat": [Function],
                                    "getDisplayNames": [Function],
                                    "getListFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralRules": [Function],
                                    "getRelativeTimeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": {
                                    "default.cancel": "Cancel",
                                    "default.delete": "Delete",
                                    "default.remove": "Remove",
                                    "default.save": "Save",
                                  },
                                  "onError": [Function],
                                  "onWarn": [Function],
                                  "textComponent": Symbol(react.fragment),
                                  "timeZone": undefined,
                                  "wrapRichTextChunksInFragment": undefined,
                                }
                              }
                              score={
                                <Tooltip
                                  content="CVEs published before 2005 (approximately) did not have a CVSS Base Score."
                                  position="left"
                                >
                                  <span>
                                    N/A
                                  </span>
                                </Tooltip>
                              }
                            >
                              <TextContent>
                                <div
                                  className="pf-c-content"
                                >
                                  <Popover
                                    bodyContent={
                                      <WithLoader
                                        colSize={2}
                                        isLoading={true}
                                        rowSize={8}
                                        variant="compactTable"
                                      >
                                        N/A
                                      </WithLoader>
                                    }
                                    enableFlip={true}
                                    headerContent="CVSS 3.0  vector breakdown"
                                    id="popover-cvss"
                                    maxWidth="100%"
                                    position="bottom"
                                  >
                                    <Popper
                                      appendTo={[Function]}
                                      distance={25}
                                      enableFlip={true}
                                      flipBehavior={
                                        [
                                          "top",
                                          "bottom",
                                          "left",
                                          "right",
                                          "top-start",
                                          "top-end",
                                          "bottom-start",
                                          "bottom-end",
                                          "left-start",
                                          "left-end",
                                          "right-start",
                                          "right-end",
                                        ]
                                      }
                                      isVisible={false}
                                      onDocumentClick={[Function]}
                                      onDocumentKeyDown={[Function]}
                                      onTriggerClick={[Function]}
                                      placement="bottom"
                                      popper={
                                        <ForwardRef
                                          active={false}
                                          aria-describedby="popover-popover-cvss-body"
                                          aria-labelledby="popover-popover-cvss-header"
                                          aria-modal="true"
                                          className="pf-c-popover"
                                          focusTrapOptions={
                                            {
                                              "clickOutsideDeactivates": true,
                                              "fallbackFocus": [Function],
                                              "returnFocusOnDeactivate": true,
                                              "tabbableOptions": {
                                                "displayCheck": "none",
                                              },
                                            }
                                          }
                                          onMouseDown={[Function]}
                                          preventScrollOnDeactivate={true}
                                          role="dialog"
                                          style={
                                            {
                                              "maxWidth": "100%",
                                              "minWidth": null,
                                              "opacity": 0,
                                              "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                            }
                                          }
                                        >
                                          <PopoverArrow />
                                          <PopoverContent>
                                            <PopoverCloseButton
                                              aria-label="Close"
                                              onClose={[Function]}
                                            />
                                            <PopoverHeader
                                              alertSeverityScreenReaderText="undefined alert:"
                                              icon={null}
                                              id="popover-popover-cvss-header"
                                              titleHeadingLevel="h6"
                                            >
                                              CVSS 3.0  vector breakdown
                                            </PopoverHeader>
                                            <PopoverBody
                                              id="popover-popover-cvss-body"
                                            >
                                              <WithLoader
                                                colSize={2}
                                                isLoading={true}
                                                rowSize={8}
                                                variant="compactTable"
                                              >
                                                N/A
                                              </WithLoader>
                                            </PopoverBody>
                                          </PopoverContent>
                                        </ForwardRef>
                                      }
                                      popperMatchesTriggerWidth={false}
                                      positionModifiers={
                                        {
                                          "bottom": "pf-m-bottom",
                                          "bottom-end": "pf-m-bottom-right",
                                          "bottom-start": "pf-m-bottom-left",
                                          "left": "pf-m-left",
                                          "left-end": "pf-m-left-bottom",
                                          "left-start": "pf-m-left-top",
                                          "right": "pf-m-right",
                                          "right-end": "pf-m-right-bottom",
                                          "right-start": "pf-m-right-top",
                                          "top": "pf-m-top",
                                          "top-end": "pf-m-top-right",
                                          "top-start": "pf-m-top-left",
                                        }
                                      }
                                      removeFindDomNode={false}
                                      trigger={
                                        <Label
                                          className="pf-u-mb-xs pointer"
                                          isLarge={true}
                                        >
                                          CVSS 3.0
                                           
                                           base score
                                          <OutlinedQuestionCircleIcon
                                            className="pf-u-ml-xs"
                                            color="var(--pf-global--secondary-color--100)"
                                            noVerticalAlign={false}
                                            size="sm"
                                          />
                                        </Label>
                                      }
                                      zIndex={9999}
                                    >
                                      <FindRefWrapper
                                        onFoundRef={[Function]}
                                      >
                                        <Label
                                          className="pf-u-mb-xs pointer"
                                          isLarge={true}
                                        >
                                          <span
                                            className="vuln-label pf-u-mb-xs pointer"
                                            style={
                                              {
                                                "display": "block",
                                                "fontSize": "medium",
                                              }
                                            }
                                          >
                                            CVSS 3.0
                                             
                                             base score
                                            <OutlinedQuestionCircleIcon
                                              className="pf-u-ml-xs"
                                              color="var(--pf-global--secondary-color--100)"
                                              noVerticalAlign={false}
                                              size="sm"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-labelledby={null}
                                                className="pf-u-ml-xs"
                                                fill="var(--pf-global--secondary-color--100)"
                                                height="1em"
                                                role="img"
                                                style={
                                                  {
                                                    "verticalAlign": "-0.125em",
                                                  }
                                                }
                                                viewBox="0 0 512 512"
                                                width="1em"
                                              >
                                                <path
                                                  d="M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 448c-110.532 0-200-89.431-200-200 0-110.495 89.472-200 200-200 110.491 0 200 89.471 200 200 0 110.53-89.431 200-200 200zm107.244-255.2c0 67.052-72.421 68.084-72.421 92.863V300c0 6.627-5.373 12-12 12h-45.647c-6.627 0-12-5.373-12-12v-8.659c0-35.745 27.1-50.034 47.579-61.516 17.561-9.845 28.324-16.541 28.324-29.579 0-17.246-21.999-28.693-39.784-28.693-23.189 0-33.894 10.977-48.942 29.969-4.057 5.12-11.46 6.071-16.666 2.124l-27.824-21.098c-5.107-3.872-6.251-11.066-2.644-16.363C184.846 131.491 214.94 112 261.794 112c49.071 0 101.45 38.304 101.45 88.8zM298 368c0 23.159-18.841 42-42 42s-42-18.841-42-42 18.841-42 42-42 42 18.841 42 42z"
                                                />
                                              </svg>
                                            </OutlinedQuestionCircleIcon>
                                          </span>
                                        </Label>
                                      </FindRefWrapper>
                                    </Popper>
                                  </Popover>
                                  <WithLoader
                                    isLoading={true}
                                    style={
                                      {
                                        "width": "320px",
                                      }
                                    }
                                  >
                                    <Skeleton
                                      size="lg"
                                      style={
                                        {
                                          "width": "320px",
                                        }
                                      }
                                    >
                                      <Skeleton
                                        className="ins-c-skeleton ins-c-skeleton__lg"
                                        style={
                                          {
                                            "width": "320px",
                                          }
                                        }
                                      >
                                        <div
                                          className="pf-c-skeleton ins-c-skeleton ins-c-skeleton__lg"
                                          style={
                                            {
                                              "width": "320px",
                                            }
                                          }
                                        >
                                          <span
                                            className="pf-u-screen-reader"
                                          />
                                        </div>
                                      </Skeleton>
                                    </Skeleton>
                                  </WithLoader>
                                </div>
                              </TextContent>
                            </CvssVector>
                          </injectIntl(CvssVector)>
                        </div>
                      </StackItem>
                    </div>
                  </Stack>
                </CVEDetailsPageSidebar>
              </div>
            </GridItem>
            <injectIntl(CSAwRuleBox)>
              <CSAwRuleBox
                intl={
                  {
                    "$t": [Function],
                    "defaultFormats": {},
                    "defaultLocale": "en",
                    "defaultRichTextElements": undefined,
                    "fallbackOnEmptyString": true,
                    "formatDate": [Function],
                    "formatDateTimeRange": [Function],
                    "formatDateToParts": [Function],
                    "formatDisplayName": [Function],
                    "formatList": [Function],
                    "formatListToParts": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatNumberToParts": [Function],
                    "formatPlural": [Function],
                    "formatRelativeTime": [Function],
                    "formatTime": [Function],
                    "formatTimeToParts": [Function],
                    "formats": {},
                    "formatters": {
                      "getDateTimeFormat": [Function],
                      "getDisplayNames": [Function],
                      "getListFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralRules": [Function],
                      "getRelativeTimeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": {
                      "default.cancel": "Cancel",
                      "default.delete": "Delete",
                      "default.remove": "Remove",
                      "default.save": "Save",
                    },
                    "onError": [Function],
                    "onWarn": [Function],
                    "textComponent": Symbol(react.fragment),
                    "timeZone": undefined,
                    "wrapRichTextChunksInFragment": undefined,
                  }
                }
                rules={[]}
              />
            </injectIntl(CSAwRuleBox)>
            <NotVulnerableBox />
          </div>
        </Grid>
      </CVEDetailsPageSummary>
    </Router>
  </BrowserRouter>
</Provider>
`;
