// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SnippetWithHeaderAndTooltip Should render with title and label and Tooltip 1`] = `
<SnippetWithHeaderAndPopover
  title="testTitle"
  tooltipText="Some random text"
  value="testDescription"
>
  <Popover
    aria-label="Business risk popover"
    headerContent=""
    position="right"
  >
    <Popper
      appendTo={[Function]}
      distance={25}
      enableFlip={true}
      flipBehavior={
        Array [
          "top",
          "right",
          "bottom",
          "left",
          "top",
          "right",
          "bottom",
        ]
      }
      isVisible={false}
      onDocumentClick={[Function]}
      onDocumentKeyDown={[Function]}
      onPopperClick={[Function]}
      onTriggerClick={[Function]}
      onTriggerEnter={[Function]}
      placement="right"
      popper={
        <FocusTrap
          active={false}
          aria-describedby="popover-pf-1596108438464gd11s8ffz3l-body"
          aria-label="Business risk popover"
          aria-modal="true"
          className="pf-c-popover"
          focusTrapOptions={
            Object {
              "clickOutsideDeactivates": true,
              "returnFocusOnDeactivate": true,
            }
          }
          onMouseDown={[Function]}
          paused={false}
          role="dialog"
          style={
            Object {
              "maxWidth": null,
              "minWidth": null,
              "opacity": 0,
              "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
            }
          }
        >
          <PopoverArrow />
          <PopoverContent>
            <PopoverCloseButton
              aria-label="Close"
              onClose={[Function]}
            />
            
            <PopoverBody
              id="popover-pf-1596108438464gd11s8ffz3l-body"
            />
          </PopoverContent>
        </FocusTrap>
      }
      popperMatchesTriggerWidth={false}
      positionModifiers={
        Object {
          "bottom": "pf-m-bottom",
          "left": "pf-m-left",
          "right": "pf-m-right",
          "top": "pf-m-top",
        }
      }
      trigger={
        <Stack
          style={
            Object {
              "cursor": "pointer",
              "display": "inline-block",
            }
          }
        >
          <StackItem>
            <Label>
              testTitle
            </Label>
          </StackItem>
          <StackItem>
            <a>
              testDescription
            </a>
          </StackItem>
        </Stack>
      }
      zIndex={9999}
    >
      <FindRefWrapper
        onFoundRef={[Function]}
      >
        <Stack
          style={
            Object {
              "cursor": "pointer",
              "display": "inline-block",
            }
          }
        >
          <div
            className="pf-l-stack"
            style={
              Object {
                "cursor": "pointer",
                "display": "inline-block",
              }
            }
          >
            <StackItem>
              <div
                className="pf-l-stack__item"
              >
                <Label>
                  <span
                    className="vuln-label undefined"
                  >
                    testTitle
                  </span>
                </Label>
              </div>
            </StackItem>
            <StackItem>
              <div
                className="pf-l-stack__item"
              >
                <a>
                  testDescription
                </a>
              </div>
            </StackItem>
          </div>
        </Stack>
      </FindRefWrapper>
    </Popper>
  </Popover>
</SnippetWithHeaderAndPopover>
`;

exports[`SnippetWithHeaderAndTooltip Should render with title and label only 1`] = `
<SnippetWithHeaderAndPopover
  title="testTitle"
  value="testDescription"
>
  <Popover
    aria-label="Business risk popover"
    headerContent=""
    position="right"
  >
    <Popper
      appendTo={[Function]}
      distance={25}
      enableFlip={true}
      flipBehavior={
        Array [
          "top",
          "right",
          "bottom",
          "left",
          "top",
          "right",
          "bottom",
        ]
      }
      isVisible={false}
      onDocumentClick={[Function]}
      onDocumentKeyDown={[Function]}
      onPopperClick={[Function]}
      onTriggerClick={[Function]}
      onTriggerEnter={[Function]}
      placement="right"
      popper={
        <FocusTrap
          active={false}
          aria-describedby="popover-pf-1596108438450vu4n69m7kjq-body"
          aria-label="Business risk popover"
          aria-modal="true"
          className="pf-c-popover"
          focusTrapOptions={
            Object {
              "clickOutsideDeactivates": true,
              "returnFocusOnDeactivate": true,
            }
          }
          onMouseDown={[Function]}
          paused={false}
          role="dialog"
          style={
            Object {
              "maxWidth": null,
              "minWidth": null,
              "opacity": 0,
              "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
            }
          }
        >
          <PopoverArrow />
          <PopoverContent>
            <PopoverCloseButton
              aria-label="Close"
              onClose={[Function]}
            />
            
            <PopoverBody
              id="popover-pf-1596108438450vu4n69m7kjq-body"
            />
          </PopoverContent>
        </FocusTrap>
      }
      popperMatchesTriggerWidth={false}
      positionModifiers={
        Object {
          "bottom": "pf-m-bottom",
          "left": "pf-m-left",
          "right": "pf-m-right",
          "top": "pf-m-top",
        }
      }
      trigger={
        <Stack
          style={
            Object {
              "cursor": "pointer",
              "display": "inline-block",
            }
          }
        >
          <StackItem>
            <Label>
              testTitle
            </Label>
          </StackItem>
          <StackItem>
            <a>
              testDescription
            </a>
          </StackItem>
        </Stack>
      }
      zIndex={9999}
    >
      <FindRefWrapper
        onFoundRef={[Function]}
      >
        <Stack
          style={
            Object {
              "cursor": "pointer",
              "display": "inline-block",
            }
          }
        >
          <div
            className="pf-l-stack"
            style={
              Object {
                "cursor": "pointer",
                "display": "inline-block",
              }
            }
          >
            <StackItem>
              <div
                className="pf-l-stack__item"
              >
                <Label>
                  <span
                    className="vuln-label undefined"
                  >
                    testTitle
                  </span>
                </Label>
              </div>
            </StackItem>
            <StackItem>
              <div
                className="pf-l-stack__item"
              >
                <a>
                  testDescription
                </a>
              </div>
            </StackItem>
          </div>
        </Stack>
      </FindRefWrapper>
    </Popper>
  </Popover>
</SnippetWithHeaderAndPopover>
`;

exports[`SnippetWithHeaderAndTooltip Should render without params 1`] = `
<SnippetWithHeaderAndPopover>
  <Popover
    aria-label="Business risk popover"
    headerContent=""
    position="right"
  >
    <Popper
      appendTo={[Function]}
      distance={25}
      enableFlip={true}
      flipBehavior={
        Array [
          "top",
          "right",
          "bottom",
          "left",
          "top",
          "right",
          "bottom",
        ]
      }
      isVisible={false}
      onDocumentClick={[Function]}
      onDocumentKeyDown={[Function]}
      onPopperClick={[Function]}
      onTriggerClick={[Function]}
      onTriggerEnter={[Function]}
      placement="right"
      popper={
        <FocusTrap
          active={false}
          aria-describedby="popover-pf-1596108438406hltzlkxeg5v-body"
          aria-label="Business risk popover"
          aria-modal="true"
          className="pf-c-popover"
          focusTrapOptions={
            Object {
              "clickOutsideDeactivates": true,
              "returnFocusOnDeactivate": true,
            }
          }
          onMouseDown={[Function]}
          paused={false}
          role="dialog"
          style={
            Object {
              "maxWidth": null,
              "minWidth": null,
              "opacity": 0,
              "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
            }
          }
        >
          <PopoverArrow />
          <PopoverContent>
            <PopoverCloseButton
              aria-label="Close"
              onClose={[Function]}
            />
            
            <PopoverBody
              id="popover-pf-1596108438406hltzlkxeg5v-body"
            />
          </PopoverContent>
        </FocusTrap>
      }
      popperMatchesTriggerWidth={false}
      positionModifiers={
        Object {
          "bottom": "pf-m-bottom",
          "left": "pf-m-left",
          "right": "pf-m-right",
          "top": "pf-m-top",
        }
      }
      trigger={
        <Stack
          style={
            Object {
              "cursor": "pointer",
              "display": "inline-block",
            }
          }
        >
          <StackItem>
            <Label />
          </StackItem>
          <StackItem>
            <a />
          </StackItem>
        </Stack>
      }
      zIndex={9999}
    >
      <FindRefWrapper
        onFoundRef={[Function]}
      >
        <Stack
          style={
            Object {
              "cursor": "pointer",
              "display": "inline-block",
            }
          }
        >
          <div
            className="pf-l-stack"
            style={
              Object {
                "cursor": "pointer",
                "display": "inline-block",
              }
            }
          >
            <StackItem>
              <div
                className="pf-l-stack__item"
              >
                <Label>
                  <span
                    className="vuln-label undefined"
                  />
                </Label>
              </div>
            </StackItem>
            <StackItem>
              <div
                className="pf-l-stack__item"
              >
                <a />
              </div>
            </StackItem>
          </div>
        </Stack>
      </FindRefWrapper>
    </Popper>
  </Popover>
</SnippetWithHeaderAndPopover>
`;
