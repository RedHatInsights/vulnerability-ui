import StatusColumn from './StatusColumn'

describe('StatusColumn', () => {
   
    it('Should render icon', () => {
        const wrapper = mount(<StatusColumn cveStatusId={0} systemStatusId={1}/>);
        expect(wrapper.find('ServerAltIcon')).toHaveLength(1)
    })

    it('Should not render icon', () => {
        const wrapper = mount(<StatusColumn cveStatusId={0} systemStatusId={0}/>);
        expect(wrapper.find('ServerAltIcon')).toHaveLength(0)
    })

    it('Status should be Not reviewed ', () => {
        const wrapper = shallow(<StatusColumn cveStatusId={0} systemStatusId={0}/>);
        expect(wrapper.find('span').text()).toBe('Not reviewed')
    })

    it('Status should be In review', () => {
        const wrapper = shallow(<StatusColumn cveStatusId={1} systemStatusId={1}/>);
        expect(wrapper.find('span').text()).toBe('In review')
    })

    it('Status should be On-hold', () => {
        const wrapper = shallow(<StatusColumn cveStatusId={2} systemStatusId={2}/>);
        expect(wrapper.find('span').text()).toBe('On-hold')
    })

    it('Status should be Scheduled for patch', () => {
        const wrapper = shallow(<StatusColumn cveStatusId={3} systemStatusId={3}/>);
        expect(wrapper.find('span').text()).toBe('Scheduled for patch')
    })

    it('Status should be Resolved', () => {
        const wrapper = shallow(<StatusColumn cveStatusId={4} systemStatusId={4}/>);
        expect(wrapper.find('span').text()).toBe('Resolved')
    })

    it('Status should be No action - risk accepted', () => {
        const wrapper = shallow(<StatusColumn cveStatusId={5} systemStatusId={5}/>);
        expect(wrapper.find('span').text()).toBe('No action - risk accepted')
    })

    it('Status should be Resolved via mitigation ', () => {
        const wrapper = shallow(<StatusColumn cveStatusId={6} systemStatusId={6}/>);
        expect(wrapper.find('span').text()).toBe('Resolved via mitigation')
    })
  
})
