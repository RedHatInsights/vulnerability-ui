import React from 'react';
import CVEDetailsPageDescription from './CVEDetailsPageDescription';
import { render } from '@testing-library/react';
import { IntlProvider } from '@redhat-cloud-services/frontend-components-translations';
import { CVEPageContext } from '../../SmartComponents/CVEDetailsPage/CVEDetailsPage';

describe('CVEDetailsPageDescription component', () => {
    const cveAttributes = {
        business_risk: "Not defined",
        business_risk_id: 0,
        business_risk_justification: null,
        cvss3_metrics: "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
        cvss3_score: "5.900",
        public_date: "12 May 2020",
        impact: "Important",
        status: "Resolved via mitigation",
        status_id: 6,
        synopsis: "CVE-2020-10711",
        description:
            'It was found that ghostscript could leak sensitive operators on the operand stack when a pseudo-operator' +
            ' pushes a subroutine. A specially crafted PostScript file could use this flaw to escape the -dSAFER' +
            ' protection in order to, for example, have access to the file system and execute commands.',
        systems_status_detail: { 0: 2 }
    };

    it('should render without props', () => {
        const { asFragment } = render(
            <IntlProvider locale="en">
                <CVEPageContext.Provider value={{ isLoading: false }}>
                    <CVEDetailsPageDescription cveAttributes={cveAttributes} />
                </CVEPageContext.Provider>
            </IntlProvider>
        );

        expect(asFragment()).toMatchSnapshot();
    });
});
