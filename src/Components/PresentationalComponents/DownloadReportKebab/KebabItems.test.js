import React from 'react';
import {
    kebabItemDownloadJSON,
    kebabItemDownloadCSV,
    kebabItemEditBusinessRisk,
    kebabItemEditStatus,
    kebabItemToggleCvesDescription,
    kebabItemExcludeSystemAnalysis,
    kebabItemExcludeSystem,
    kebabItemToggleExcludeSystemDisplay
} from './KebabItems';
import toJson from 'enzyme-to-json';
import BaseKebab from './BaseKebab';

describe('KebabItems component', () => {
    it('Should render without default params', () => {
        const option1 = (function1) => (
            <DropdownItem key="o1" component="button" onClick={() => function1()}>
                Option1
            </DropdownItem>
        );

        const items = [
            kebabItemDownloadJSON(),
            kebabItemDownloadCSV(),
            kebabItemEditBusinessRisk(),
            kebabItemEditStatus(),
            kebabItemToggleCvesDescription(null, false),
            kebabItemExcludeSystemAnalysis(null, false),
            kebabItemExcludeSystem(null, false),
            kebabItemToggleExcludeSystemDisplay(null, false)
        ]

        const wrapper = mount(<BaseKebab dropdownItems={items}/>);
        
        const kebabButton = wrapper.find('button');
        kebabButton.simulate('click');

        expect(toJson(wrapper)).toMatchSnapshot();
    });

    it('should render with collapse all text', () => {
        const items = [
            kebabItemToggleCvesDescription(null, true),
        ]

        const wrapper = mount(<BaseKebab dropdownItems={items}/>);
        
        const kebabButton = wrapper.find('button');
        kebabButton.simulate('click');

        expect(toJson(wrapper)).toMatchSnapshot();
    });

    it('should render with resume text', () => {
        const items = [
            kebabItemExcludeSystemAnalysis(null, true),
            kebabItemExcludeSystem(null, true)
        ]

        const wrapper = mount(<BaseKebab dropdownItems={items}/>);
        
        const kebabButton = wrapper.find('button');
        kebabButton.simulate('click');

        expect(toJson(wrapper)).toMatchSnapshot();
    });

    it('should render with hide systems', () => {
        const items = [
            kebabItemToggleExcludeSystemDisplay(null, true),
        ]

        const wrapper = mount(<BaseKebab dropdownItems={items}/>);
        
        const kebabButton = wrapper.find('button');
        kebabButton.simulate('click');

        expect(toJson(wrapper)).toMatchSnapshot();
    })
});
