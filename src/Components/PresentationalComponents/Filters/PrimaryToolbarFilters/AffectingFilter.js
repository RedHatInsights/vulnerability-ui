import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';
import { intl } from '../../../../Utilities/IntlProvider';
import messages from '../../../../Messages';
import { getAffectingFilterOptions } from '../../../../Helpers/constants';

const affectingFilter = (apply, currentFilter = {}, isEdgeParityEnabled) => {
    let { affecting: currentValue } = currentFilter;

    const filterByAffecting = (values) => {
        apply({
            affecting: values.length > 0 ? values?.join(',') : undefined,
            page: 1
        });
    };

    const filterItems = getAffectingFilterOptions(isEdgeParityEnabled);
    return {
        label: intl.formatMessage(messages.filterSystemsExposed),
        type: conditionalFilterType.checkbox,
        urlParam: 'affecting',
        filterValues: {
            onChange: (event, value) => {
                filterByAffecting(value);
            },
            items: filterItems,
            value: currentValue?.split(',')
        }
    };
};

export default affectingFilter;
