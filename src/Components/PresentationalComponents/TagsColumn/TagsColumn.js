import React, { Fragment, useState } from 'react';
import PropTypes from 'prop-types';
import { useIntl } from 'react-intl';
import { TagCount } from '@redhat-cloud-services/frontend-components/components/cjs/TagCount';
import { TagModal } from '@redhat-cloud-services/frontend-components/components/cjs/TagModal';
import { cellWidth } from '@patternfly/react-table';
import messages from '../../../Messages';

const TagColumn = ({ tags, name }) => {
    const [isOpen, toggleModal] = useState(false);
    const intl = useIntl();

    const rows = tags.map(({ key, value, namespace }) => ({
        id: `${namespace}/${key}=${value}`,
        cells: [key, value, namespace]
    }));

    const column = [
        { title: intl.formatMessage(messages.systemsColumnHeaderName) },
        { title: intl.formatMessage(messages.cvssVectorValue), transforms: [cellWidth(30)] },
        { title: intl.formatMessage(messages.tagSource), transforms: [cellWidth(30)] }
    ];

    return (
        <Fragment>
            <TagCount count={tags.length} onTagClick={() => toggleModal(true)} />
            <TagModal
                width="auto"
                systemName={name}
                isOpen={isOpen}
                loaded
                columns={column}
                rows={rows}
                pagination={{ count: tags.length }}
                toggleModal={() => toggleModal(!isOpen)}
            />
        </Fragment>
    );
};

TagColumn.defaultProps = {
    tags: [],
    name: 'System'
};

TagColumn.propTypes = {
    tags: PropTypes.array,
    name: PropTypes.string
};

export default TagColumn;
