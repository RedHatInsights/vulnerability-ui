import React from 'react';
import PropTypes from 'prop-types';
import { useIntl } from 'react-intl';
import { Paragraph } from '@redhat-cloud-services/frontend-components-pdf-generator';
import messages from '../../../../../Messages';
import { intlFormatWithBold } from '../../../../../Helpers/ReportsHelper';

const SystemsFilterParagraph = ({ filtersBuilder, filterStringSegments, filters }) => {
    const intl = useIntl();

    const includedValues = filters.find(filter => filter.key === 'excluded')?.multiValue;

    return (Object.values(filtersBuilder)?.filter(filter => filter.isAllChosen !== true)?.length > 0 ? (
        <Paragraph>
            {
                intl.formatMessage(messages.systemsPDFreportSubHeader)
            }
            {
                includedValues?.length === 1 && (includedValues[0] === 'true'
                    ? ' ' + intl.formatMessage(messages.systemsPDFreportFiltersDisabled)
                    : ' ' + intl.formatMessage(messages.systemsPDFreportFiltersEnabled))
            }
            {
                filterStringSegments.map(filter => (
                    filtersBuilder.hasOwnProperty(filter.name) && !filtersBuilder[filter.name]?.isAllChosen
                ) && intlFormatWithBold(filter.msg,
                    {
                        values: filter.lowercase ?
                            filtersBuilder[filter.name].values.toLowerCase() :
                            filtersBuilder[filter.name].values,
                        prefix: filter.isFirst ? '' : (filter.isLast ? intl.formatMessage(messages.customReportAnd) : ';')
                    }
                ))
            }
            {'.\n\n'}
        </Paragraph>
    ) : null
    );
};

SystemsFilterParagraph.propTypes = {
    filtersBuilder: PropTypes.object,
    filterStringSegments: PropTypes.array,
    filters: PropTypes.object
};

export default SystemsFilterParagraph;
