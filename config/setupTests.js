import { configure, mount, render, shallow } from 'enzyme';
import Adapter from '@wojtekmaj/enzyme-adapter-react-17';
import React from 'react';
import 'babel-polyfill';
import { TextDecoder, TextEncoder } from 'util';

configure({ adapter: new Adapter() });

global.shallow = shallow;
global.render = render;
global.mount = mount;
global.React = React;
jest.mock('@redhat-cloud-services/frontend-components/useChrome', () => ({
    __esModule: true,
    default: () => ({
        updateDocumentTitle: jest.fn(),
        appAction: jest.fn(),
        appObjectId: jest.fn(),
        on: () => { },
        isBeta: jest.fn(),
        hideGlobalFilter: () => { },
        getApp: () => 'vulnerability',
        getBundle: () => 'insights',
    }),
    useChrome: () => ({
        isBeta: jest.fn(),
        chrome: jest.fn(),
        updateDocumentTitle: jest.fn(),
        hideGlobalFilter: jest.fn()
    }),
}));

window.insights = {
    chrome: {
        getUserPermissions: () => Promise.resolve(),
        auth: {
            getUser: () => "Testing Name"
        }
    },
    loadInventory: () => Promise.resolve({
        inventoryConnector: (args) => {
            const InventoryTable = () => <div>A mock passed!</div>;
            return ({ InventoryTable });
        },
        mergeWithEntities: () => { },
        mergeWithDetail: () => { }
    })
};

global.window.__scalprum__ = {
    scalprumOptions: {
        cacheTimeout: 999999
    },
    appsConfig: {
        inventory: {
            manifestLocation: 'https://console.stage.redhat.com/apps/inventory/fed-mods.json?ts=1643875037626',
            module: 'inventory#./RootApp',
            name: 'inventory'
        },
        remediations: {
            manifestLocation: 'https://console.stage.redhat.com/apps/remediations/fed-mods.json?ts=1643875037626',
            module: 'remediations#./RemediationButton',
            name: 'remediations'
        }
    },
    factories: {
        inventory: {
            expiration: new Date('01-01-3000'),
            modules: {
                './InventoryTable': {
                    __esModule: true,
                    default: () => <div><h1>Inventory mock</h1></div>
                }
            }
        },
        remediations: {
            expiration: new Date('01-01-3000'),
            modules: {
                './RemediationButton': {
                    __esModule: true,
                    default: () => <div><h1>Remediations mock</h1></div>
                }
            }
        }
    }
};

jest.useFakeTimers('modern').setSystemTime(new Date('2020-01-01').getTime());
  
jest.mock('@redhat-cloud-services/frontend-components/Inventory', () => ({
    InventoryTable: (props) => <div {...props} />,
}));

jest.mock('@redhat-cloud-services/frontend-components/AsyncComponent', () => {
    return {
        __esModule: true,
        default: () => (<div>AsyncComponent</div>)
    };
});

jest.mock('@redhat-cloud-services/frontend-components-pdf-generator', () => {
    return {
        __esModule: true,
        Section: () => (<div />),
        Panel: () => (<div />),
        PanelItem: () => (<div />),
        InsightsLabel: () => (<div />),
        Table: () => (<div />),
        Paragraph: () => (<div />)
    };
});

// Required for React 18 but not provided by jsdom env. See: https://github.com/jsdom/jsdom/issues/2524
global.TextEncoder = TextEncoder;
global.TextDecoder = TextDecoder;
