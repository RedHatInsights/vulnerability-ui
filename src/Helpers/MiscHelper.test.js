import { SecurityIcon, UnknownIcon } from '@patternfly/react-icons';
import { impactList, impactColorList } from './constants';
import { constructParameters, getImpactDetails } from './MiscHelper';

describe('MiscHelper', () => {
    it('constructParameters with apiProps', () => {
        const allowedParams = ['a', 'b', 'c', 'd'];
        const apiProps = { a: '', b: 'b', nope: 'no-way', d: 'd' }; //misses c and has nope extra, and a  is empty string
        const res = constructParameters(apiProps, allowedParams);
        expect(res).toEqual([undefined, 'b', undefined, 'd']);
    });
    it('constructParameters without apiProps', () => {
        const allowedParams = ['a', 'b', 'c', 'd'];
        const res = constructParameters(undefined, allowedParams);
        expect(res).toEqual([]);
    });
    for (let impact of Object.keys(impactList)) {
        it('getImpactDetails with ' + impact + ' impact', () => {
            const expected = {
                title: impactList[impact].title,
                color: impactList[impact].color,
                text: impactList[impact].text,
                titleContent: (
                    <span>
                        <SecurityIcon size="lg" />
                    </span>
                )
            };
            const res = getImpactDetails(impact);
            expect(res).toEqual(expected);
        });
    }
    it('getImpactDetails with no impact', () => {
        const expected = {
            title: 'Unknown',
            color: impactColorList['unknown'],
            text: '',
            titleContent: ( 
                    <span>
                        <UnknownIcon size="lg" />
                    </span>
                )
        };
        const res = getImpactDetails(undefined);
        expect(res).toEqual(expected);
    });
});
