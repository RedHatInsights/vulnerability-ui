import { shallow } from 'enzyme';
import toJson from 'enzyme-to-json';
import React from 'react';
import { BrowserRouter as Router } from 'react-router-dom';
import Header from './Header';

describe('VulnerabilityHeader component', () => {
    it('should render without props', () => {
        const wrapper = shallow(<Header />);
    });

    it('should render with props', () => {
        const breadcrumbs = [
            {
                title: 'First item',
                to: '#',
                isActive: true
            }
        ]
        const wrapper = shallow(<Header title='title' breadcrumbs={breadcrumbs}/>);
    });

    it('should render with title Hello world', () => {
        const title = 'Hello world'
        const wrapper = shallow(<Header title={title} />);
        expect(wrapper.find('PageHeaderTitle')).toHaveLength(1)
        expect(wrapper.find('PageHeaderTitle').prop('title')).toBe(title)

    });

    it('should render default title', () => {
        const wrapper = shallow(<Header />);
        expect(wrapper.find('PageHeaderTitle')).toHaveLength(1)
        expect(wrapper.find('PageHeaderTitle').prop('title')).toBe('CVEs')

    });

    it('should not render Breadcrumb', () => {
        const wrapper = shallow(<Header showBreadcrumb={false} />);
        expect(wrapper.find('Breadcrumb')).toHaveLength(0)
    });

    it('should render breadcrumb item with skeleton', () => {
        const breadcrumbs = [
            {
                title: 'First item',
                to: '#',
                isActive: true,
                loaded: false
            }
        ]

        const wrapper = mount(
            <Router>
                <Header showBreadcrumb breadcrumbs={breadcrumbs} />
            </Router>
        );
        expect(wrapper.find('Breadcrumb .pf-c-skeleton')).toHaveLength(1)

    });

    it('should render with 1 breadcrumb item and last is active', () => {
        const breadcrumbs = [
            {
                title: 'First item',
                to: '#',
                isActive: true,
                loaded: true
            }
        ]

        const wrapper = mount(
            <Router>
                <Header showBreadcrumb breadcrumbs={breadcrumbs} />
            </Router>
        );
        const list = wrapper.find('Breadcrumb .pf-c-breadcrumb__item').at(1);
        expect(list.find('Link')).toHaveLength(0)
        expect(list.text()).toBe(breadcrumbs[0].title)

    });

    it('should render with 2 breadcrumb items and last is active', () => {
        const breadcrumbs = [
            {
                title: 'First item',
                to: '/first',
                isActive: false,
                loaded: true
            },
            {
                title: 'Second item',
                to: '#',
                isActive: true,
                loaded: true
            }
        ]
        const wrapper = mount(
            <Router>
                <Header showBreadcrumb breadcrumbs={breadcrumbs} />
            </Router>
        );
        const list = wrapper.find('Breadcrumb .pf-c-breadcrumb__item');
        expect(list.at(1).find('Link')).toHaveLength(1)
        expect(list.at(1).find('Link').prop('to')).toBe(breadcrumbs[0].to)
        expect(list.at(2).find('Link')).toHaveLength(0)
        expect(list.at(2).text()).toBe(breadcrumbs[1].title)
    });

});
