import { getCveListByAccount } from '../../../Helpers/APIHelper';
import { formatDate } from '../../../Helpers/MiscHelper';
import { PUBLIC_DATE_OPTIONS } from '../../../Helpers/constants';

export const createCustomReport = async (filterData, pageData) => {
    const cveList = await getCveListByAccount(constructFilterParameters(filterData));

    // send filterData, pageData and cveList to the CustomReportBuilder
    pageData;
    cveList;
};

// maybe move this to misc helper
function constructFilterParameters(filterParams) {
    // construct publish date
    let publicEntry = PUBLIC_DATE_OPTIONS.find(item => item.value === filterParams.publishDate);
    let from = undefined;
    let to = undefined;

    if (typeof publicEntry !== 'undefined') {
        from = publicEntry.from && formatDate(publicEntry.from);
        to = publicEntry.to && formatDate(publicEntry.to);
    }

    // construct rest of params
    let newParams =  {
        status_id: filterParams.statusId.toString(),
        business_risk_id: filterParams.businessRiskId.toString(),
        cvss_from: filterParams.cvssScore.min,
        cvss_to: filterParams.cvssScore.max,
        publish_date: filterParams.publishDate,
        security_rule: filterParams.securityRules === 'all' ? undefined : filterParams.securityRules,
        show_all: filterParams.exposedSystems === 'show',
        public_from: from,
        public_to: to
    };

    return newParams;
}
