// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CVEPageDetails component should render with data 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <CVEPageDetails
        data={
          Object {
            "data": Object {
              "data": Object {
                "cvss3_score": "7.000",
                "description": "Lorem ipsum",
                "impact": "Important",
                "mitre_link": Object {
                  "_owner": null,
                  "_store": Object {},
                  "key": null,
                  "props": Object {
                    "children": "MITRE Database",
                    "href": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-6454",
                  },
                  "ref": null,
                  "type": "a",
                },
                "package_list": Array [
                  Object {
                    "_owner": null,
                    "_store": Object {},
                    "key": "systemd-resolved-219-62.el7_6.5.i686",
                    "props": Object {
                      "children": "systemd-resolved-219-62.el7_6.5.i686",
                    },
                    "ref": null,
                    "type": "li",
                  },
                  Object {
                    "_owner": null,
                    "_store": Object {},
                    "key": "systemd-resolved-219-62.el7_6.5.x86_64",
                    "props": Object {
                      "children": "systemd-resolved-219-62.el7_6.5.x86_64",
                    },
                    "ref": null,
                    "type": "li",
                  },
                  Object {
                    "_owner": null,
                    "_store": Object {},
                    "key": "systemd-devel-219-62.el7_6.5.ppc",
                    "props": Object {
                      "children": "systemd-devel-219-62.el7_6.5.ppc",
                    },
                    "ref": null,
                    "type": "li",
                  },
                ],
                "public_date": "February 18th, 2019",
                "rh_link": Object {
                  "_owner": null,
                  "_store": Object {},
                  "key": null,
                  "props": Object {
                    "children": "Red Hat CVE Database",
                    "href": "https://access.redhat.com/security/cve/CVE-2019-6454",
                  },
                  "ref": null,
                  "type": "a",
                },
                "synopsis": "CVE-2019-6454",
              },
              "isLoading": false,
              "meta": Object {},
            },
          }
        }
      >
        <Grid
          hasGutter={true}
        >
          <div
            className="pf-l-grid pf-m-gutter"
          >
            <GridItem
              md={8}
              sm={12}
            >
              <div
                className="pf-l-grid__item pf-m-12-col-on-sm pf-m-8-col-on-md"
              >
                <WithLoader
                  loading={true}
                  variant="spinner"
                >
                  <Spinner
                    centered={true}
                  >
                    <div
                      className="ins-c-spinner ins-m-center"
                      role="status"
                    >
                      <span
                        className="pf-u-screen-reader"
                      >
                        Loading...
                      </span>
                    </div>
                  </Spinner>
                </WithLoader>
              </div>
            </GridItem>
            <GridItem
              className="severity-info-box pf-u-mt-md"
              md={4}
              sm={12}
            >
              <div
                className="pf-l-grid__item pf-m-12-col-on-sm pf-m-4-col-on-md severity-info-box pf-u-mt-md"
              >
                <injectIntl(CVEPageDetailsSeverity)>
                  <CVEPageDetailsSeverity
                    impact="Unknown"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatDateToParts": [Function],
                        "formatDisplayName": [Function],
                        "formatList": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatNumberToParts": [Function],
                        "formatPlural": [Function],
                        "formatRelativeTime": [Function],
                        "formatTime": [Function],
                        "formatTimeToParts": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getDisplayNames": [Function],
                          "getListFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralRules": [Function],
                          "getRelativeTimeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {
                          "default.cancel": "Cancel",
                          "default.delete": "Delete",
                          "default.remove": "Remove",
                          "default.save": "Save",
                        },
                        "onError": [Function],
                        "textComponent": Symbol(react.fragment),
                        "timeZone": undefined,
                        "wrapRichTextChunksInFragment": undefined,
                      }
                    }
                  >
                    <Stack
                      hasGutter={true}
                    >
                      <div
                        className="pf-l-stack pf-m-gutter"
                      >
                        <StackItem>
                          <div
                            className="pf-l-stack__item"
                          >
                            <CVEInfoBox
                              descriptionContent={
                                <Popover
                                  aria-label="Learn more"
                                  bodyContent={
                                    <TextContent>
                                      <Text
                                        component="p"
                                      >
                                        
                                      </Text>
                                    </TextContent>
                                  }
                                  enableFlip={true}
                                  footerContent={
                                    <a
                                      href="https://access.redhat.com/security/updates/classification/"
                                      rel="noopener noreferrer"
                                      target="_blank"
                                    >
                                      Learn more about security ratings
                                        
                                      <ExternalLinkAltIcon
                                        color="currentColor"
                                        noVerticalAlign={false}
                                        size="sm"
                                      />
                                    </a>
                                  }
                                  headerContent={
                                    <div>
                                      Unknown severity
                                    </div>
                                  }
                                  id="learn-more"
                                  position="bottom"
                                >
                                  <a>
                                    Learn more
                                  </a>
                                </Popover>
                              }
                              descriptionTitle="Unknown severity"
                              titleColor="severity-unknown"
                              titleContent={
                                <UnknownIcon
                                  color="currentColor"
                                  noVerticalAlign={false}
                                  size="lg"
                                />
                              }
                            >
                              <Split
                                className="infobox-square"
                                hasGutter={true}
                              >
                                <div
                                  className="pf-l-split pf-m-gutter infobox-square"
                                >
                                  <WithLoader
                                    loading={true}
                                  >
                                    <Skeleton
                                      isDark={false}
                                      size="lg"
                                    >
                                      <div
                                        className="ins-c-skeleton ins-c-skeleton__lg"
                                      >
                                         
                                      </div>
                                    </Skeleton>
                                  </WithLoader>
                                </div>
                              </Split>
                            </CVEInfoBox>
                          </div>
                        </StackItem>
                        <StackItem>
                          <div
                            className="pf-l-stack__item"
                          >
                            <CVEInfoBox
                              descriptionTitle="CVSS 3.0 base score"
                              titleContent={
                                <TextContent>
                                  <Text
                                    component="h3"
                                  >
                                    <Tooltip
                                      content="CVEs published before 2005 (approximately) did not have a CVSS Base Score."
                                      position="left"
                                    >
                                      <span>
                                        N/A
                                      </span>
                                    </Tooltip>
                                  </Text>
                                </TextContent>
                              }
                            >
                              <Split
                                className="infobox-square"
                                hasGutter={true}
                              >
                                <div
                                  className="pf-l-split pf-m-gutter infobox-square"
                                >
                                  <WithLoader
                                    loading={true}
                                  >
                                    <Skeleton
                                      isDark={false}
                                      size="lg"
                                    >
                                      <div
                                        className="ins-c-skeleton ins-c-skeleton__lg"
                                      >
                                         
                                      </div>
                                    </Skeleton>
                                  </WithLoader>
                                </div>
                              </Split>
                            </CVEInfoBox>
                          </div>
                        </StackItem>
                        <StackItem>
                          <div
                            className="pf-l-stack__item"
                          >
                            <injectIntl(CvssVector)>
                              <CvssVector
                                intl={
                                  Object {
                                    "defaultFormats": Object {},
                                    "defaultLocale": "en",
                                    "formatDate": [Function],
                                    "formatDateToParts": [Function],
                                    "formatDisplayName": [Function],
                                    "formatList": [Function],
                                    "formatMessage": [Function],
                                    "formatNumber": [Function],
                                    "formatNumberToParts": [Function],
                                    "formatPlural": [Function],
                                    "formatRelativeTime": [Function],
                                    "formatTime": [Function],
                                    "formatTimeToParts": [Function],
                                    "formats": Object {},
                                    "formatters": Object {
                                      "getDateTimeFormat": [Function],
                                      "getDisplayNames": [Function],
                                      "getListFormat": [Function],
                                      "getMessageFormat": [Function],
                                      "getNumberFormat": [Function],
                                      "getPluralRules": [Function],
                                      "getRelativeTimeFormat": [Function],
                                    },
                                    "locale": "en",
                                    "messages": Object {
                                      "default.cancel": "Cancel",
                                      "default.delete": "Delete",
                                      "default.remove": "Remove",
                                      "default.save": "Save",
                                    },
                                    "onError": [Function],
                                    "textComponent": Symbol(react.fragment),
                                    "timeZone": undefined,
                                    "wrapRichTextChunksInFragment": undefined,
                                  }
                                }
                              >
                                <TextContent>
                                  <div
                                    className="pf-c-content"
                                  >
                                    <WithLoader
                                      loading={true}
                                    >
                                      <Skeleton
                                        isDark={false}
                                        size="lg"
                                      >
                                        <div
                                          className="ins-c-skeleton ins-c-skeleton__lg"
                                        >
                                           
                                        </div>
                                      </Skeleton>
                                    </WithLoader>
                                    <WithLoader
                                      loading={true}
                                    >
                                      <Skeleton
                                        isDark={false}
                                        size="lg"
                                      >
                                        <div
                                          className="ins-c-skeleton ins-c-skeleton__lg"
                                        >
                                           
                                        </div>
                                      </Skeleton>
                                    </WithLoader>
                                  </div>
                                </TextContent>
                              </CvssVector>
                            </injectIntl(CvssVector)>
                          </div>
                        </StackItem>
                      </div>
                    </Stack>
                  </CVEPageDetailsSeverity>
                </injectIntl(CVEPageDetailsSeverity)>
              </div>
            </GridItem>
            <injectIntl(CSAwRuleBox)>
              <CSAwRuleBox
                intl={
                  Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatDateToParts": [Function],
                    "formatDisplayName": [Function],
                    "formatList": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatNumberToParts": [Function],
                    "formatPlural": [Function],
                    "formatRelativeTime": [Function],
                    "formatTime": [Function],
                    "formatTimeToParts": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getDisplayNames": [Function],
                      "getListFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralRules": [Function],
                      "getRelativeTimeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {
                      "default.cancel": "Cancel",
                      "default.delete": "Delete",
                      "default.remove": "Remove",
                      "default.save": "Save",
                    },
                    "onError": [Function],
                    "textComponent": Symbol(react.fragment),
                    "timeZone": undefined,
                    "wrapRichTextChunksInFragment": undefined,
                  }
                }
                rules={Array []}
              />
            </injectIntl(CSAwRuleBox)>
          </div>
        </Grid>
      </CVEPageDetails>
    </Router>
  </BrowserRouter>
</Provider>
`;

exports[`CVEPageDetails component should render with enabled WithLoader 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <CVEPageDetails
        data={
          Object {
            "data": Object {
              "data": Object {},
              "isLoading": true,
              "meta": Object {},
            },
          }
        }
      >
        <Grid
          hasGutter={true}
        >
          <div
            className="pf-l-grid pf-m-gutter"
          >
            <GridItem
              md={8}
              sm={12}
            >
              <div
                className="pf-l-grid__item pf-m-12-col-on-sm pf-m-8-col-on-md"
              >
                <WithLoader
                  loading={true}
                  variant="spinner"
                >
                  <Spinner
                    centered={true}
                  >
                    <div
                      className="ins-c-spinner ins-m-center"
                      role="status"
                    >
                      <span
                        className="pf-u-screen-reader"
                      >
                        Loading...
                      </span>
                    </div>
                  </Spinner>
                </WithLoader>
              </div>
            </GridItem>
            <GridItem
              className="severity-info-box pf-u-mt-md"
              md={4}
              sm={12}
            >
              <div
                className="pf-l-grid__item pf-m-12-col-on-sm pf-m-4-col-on-md severity-info-box pf-u-mt-md"
              >
                <injectIntl(CVEPageDetailsSeverity)>
                  <CVEPageDetailsSeverity
                    impact="Unknown"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatDateToParts": [Function],
                        "formatDisplayName": [Function],
                        "formatList": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatNumberToParts": [Function],
                        "formatPlural": [Function],
                        "formatRelativeTime": [Function],
                        "formatTime": [Function],
                        "formatTimeToParts": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getDisplayNames": [Function],
                          "getListFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralRules": [Function],
                          "getRelativeTimeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {
                          "default.cancel": "Cancel",
                          "default.delete": "Delete",
                          "default.remove": "Remove",
                          "default.save": "Save",
                        },
                        "onError": [Function],
                        "textComponent": Symbol(react.fragment),
                        "timeZone": undefined,
                        "wrapRichTextChunksInFragment": undefined,
                      }
                    }
                  >
                    <Stack
                      hasGutter={true}
                    >
                      <div
                        className="pf-l-stack pf-m-gutter"
                      >
                        <StackItem>
                          <div
                            className="pf-l-stack__item"
                          >
                            <CVEInfoBox
                              descriptionContent={
                                <Popover
                                  aria-label="Learn more"
                                  bodyContent={
                                    <TextContent>
                                      <Text
                                        component="p"
                                      >
                                        
                                      </Text>
                                    </TextContent>
                                  }
                                  enableFlip={true}
                                  footerContent={
                                    <a
                                      href="https://access.redhat.com/security/updates/classification/"
                                      rel="noopener noreferrer"
                                      target="_blank"
                                    >
                                      Learn more about security ratings
                                        
                                      <ExternalLinkAltIcon
                                        color="currentColor"
                                        noVerticalAlign={false}
                                        size="sm"
                                      />
                                    </a>
                                  }
                                  headerContent={
                                    <div>
                                      Unknown severity
                                    </div>
                                  }
                                  id="learn-more"
                                  position="bottom"
                                >
                                  <a>
                                    Learn more
                                  </a>
                                </Popover>
                              }
                              descriptionTitle="Unknown severity"
                              titleColor="severity-unknown"
                              titleContent={
                                <UnknownIcon
                                  color="currentColor"
                                  noVerticalAlign={false}
                                  size="lg"
                                />
                              }
                            >
                              <Split
                                className="infobox-square"
                                hasGutter={true}
                              >
                                <div
                                  className="pf-l-split pf-m-gutter infobox-square"
                                >
                                  <WithLoader
                                    loading={true}
                                  >
                                    <Skeleton
                                      isDark={false}
                                      size="lg"
                                    >
                                      <div
                                        className="ins-c-skeleton ins-c-skeleton__lg"
                                      >
                                         
                                      </div>
                                    </Skeleton>
                                  </WithLoader>
                                </div>
                              </Split>
                            </CVEInfoBox>
                          </div>
                        </StackItem>
                        <StackItem>
                          <div
                            className="pf-l-stack__item"
                          >
                            <CVEInfoBox
                              descriptionTitle="CVSS 3.0 base score"
                              titleContent={
                                <TextContent>
                                  <Text
                                    component="h3"
                                  >
                                    <Tooltip
                                      content="CVEs published before 2005 (approximately) did not have a CVSS Base Score."
                                      position="left"
                                    >
                                      <span>
                                        N/A
                                      </span>
                                    </Tooltip>
                                  </Text>
                                </TextContent>
                              }
                            >
                              <Split
                                className="infobox-square"
                                hasGutter={true}
                              >
                                <div
                                  className="pf-l-split pf-m-gutter infobox-square"
                                >
                                  <WithLoader
                                    loading={true}
                                  >
                                    <Skeleton
                                      isDark={false}
                                      size="lg"
                                    >
                                      <div
                                        className="ins-c-skeleton ins-c-skeleton__lg"
                                      >
                                         
                                      </div>
                                    </Skeleton>
                                  </WithLoader>
                                </div>
                              </Split>
                            </CVEInfoBox>
                          </div>
                        </StackItem>
                        <StackItem>
                          <div
                            className="pf-l-stack__item"
                          >
                            <injectIntl(CvssVector)>
                              <CvssVector
                                intl={
                                  Object {
                                    "defaultFormats": Object {},
                                    "defaultLocale": "en",
                                    "formatDate": [Function],
                                    "formatDateToParts": [Function],
                                    "formatDisplayName": [Function],
                                    "formatList": [Function],
                                    "formatMessage": [Function],
                                    "formatNumber": [Function],
                                    "formatNumberToParts": [Function],
                                    "formatPlural": [Function],
                                    "formatRelativeTime": [Function],
                                    "formatTime": [Function],
                                    "formatTimeToParts": [Function],
                                    "formats": Object {},
                                    "formatters": Object {
                                      "getDateTimeFormat": [Function],
                                      "getDisplayNames": [Function],
                                      "getListFormat": [Function],
                                      "getMessageFormat": [Function],
                                      "getNumberFormat": [Function],
                                      "getPluralRules": [Function],
                                      "getRelativeTimeFormat": [Function],
                                    },
                                    "locale": "en",
                                    "messages": Object {
                                      "default.cancel": "Cancel",
                                      "default.delete": "Delete",
                                      "default.remove": "Remove",
                                      "default.save": "Save",
                                    },
                                    "onError": [Function],
                                    "textComponent": Symbol(react.fragment),
                                    "timeZone": undefined,
                                    "wrapRichTextChunksInFragment": undefined,
                                  }
                                }
                              >
                                <TextContent>
                                  <div
                                    className="pf-c-content"
                                  >
                                    <WithLoader
                                      loading={true}
                                    >
                                      <Skeleton
                                        isDark={false}
                                        size="lg"
                                      >
                                        <div
                                          className="ins-c-skeleton ins-c-skeleton__lg"
                                        >
                                           
                                        </div>
                                      </Skeleton>
                                    </WithLoader>
                                    <WithLoader
                                      loading={true}
                                    >
                                      <Skeleton
                                        isDark={false}
                                        size="lg"
                                      >
                                        <div
                                          className="ins-c-skeleton ins-c-skeleton__lg"
                                        >
                                           
                                        </div>
                                      </Skeleton>
                                    </WithLoader>
                                  </div>
                                </TextContent>
                              </CvssVector>
                            </injectIntl(CvssVector)>
                          </div>
                        </StackItem>
                      </div>
                    </Stack>
                  </CVEPageDetailsSeverity>
                </injectIntl(CVEPageDetailsSeverity)>
              </div>
            </GridItem>
            <injectIntl(CSAwRuleBox)>
              <CSAwRuleBox
                intl={
                  Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatDateToParts": [Function],
                    "formatDisplayName": [Function],
                    "formatList": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatNumberToParts": [Function],
                    "formatPlural": [Function],
                    "formatRelativeTime": [Function],
                    "formatTime": [Function],
                    "formatTimeToParts": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getDisplayNames": [Function],
                      "getListFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralRules": [Function],
                      "getRelativeTimeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {
                      "default.cancel": "Cancel",
                      "default.delete": "Delete",
                      "default.remove": "Remove",
                      "default.save": "Save",
                    },
                    "onError": [Function],
                    "textComponent": Symbol(react.fragment),
                    "timeZone": undefined,
                    "wrapRichTextChunksInFragment": undefined,
                  }
                }
                rules={Array []}
              />
            </injectIntl(CSAwRuleBox)>
          </div>
        </Grid>
      </CVEPageDetails>
    </Router>
  </BrowserRouter>
</Provider>
`;

exports[`CVEPageDetails component should render with long description 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <CVEPageDetails
        data={
          Object {
            "data": Object {
              "data": Object {
                "cvss3_score": "7.000",
                "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi consectetur molestie tristique. Proin ornare urna ut consequat pellentesque. Sed commodo porta sollicitudin. Interdum et malesuada fames ac ante ipsum primis in faucibus. Pellentesque habitant morbi tristique senectus et netus et nullam.",
                "impact": "Important",
                "package_list": Array [],
                "public_date": "February 18th, 2019",
                "synopsis": "CVE-2019-6454",
              },
              "isLoading": false,
              "meta": Object {},
            },
          }
        }
      >
        <Grid
          hasGutter={true}
        >
          <div
            className="pf-l-grid pf-m-gutter"
          >
            <GridItem
              md={8}
              sm={12}
            >
              <div
                className="pf-l-grid__item pf-m-12-col-on-sm pf-m-8-col-on-md"
              >
                <WithLoader
                  loading={true}
                  variant="spinner"
                >
                  <Spinner
                    centered={true}
                  >
                    <div
                      className="ins-c-spinner ins-m-center"
                      role="status"
                    >
                      <span
                        className="pf-u-screen-reader"
                      >
                        Loading...
                      </span>
                    </div>
                  </Spinner>
                </WithLoader>
              </div>
            </GridItem>
            <GridItem
              className="severity-info-box pf-u-mt-md"
              md={4}
              sm={12}
            >
              <div
                className="pf-l-grid__item pf-m-12-col-on-sm pf-m-4-col-on-md severity-info-box pf-u-mt-md"
              >
                <injectIntl(CVEPageDetailsSeverity)>
                  <CVEPageDetailsSeverity
                    impact="Unknown"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatDateToParts": [Function],
                        "formatDisplayName": [Function],
                        "formatList": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatNumberToParts": [Function],
                        "formatPlural": [Function],
                        "formatRelativeTime": [Function],
                        "formatTime": [Function],
                        "formatTimeToParts": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getDisplayNames": [Function],
                          "getListFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralRules": [Function],
                          "getRelativeTimeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {
                          "default.cancel": "Cancel",
                          "default.delete": "Delete",
                          "default.remove": "Remove",
                          "default.save": "Save",
                        },
                        "onError": [Function],
                        "textComponent": Symbol(react.fragment),
                        "timeZone": undefined,
                        "wrapRichTextChunksInFragment": undefined,
                      }
                    }
                  >
                    <Stack
                      hasGutter={true}
                    >
                      <div
                        className="pf-l-stack pf-m-gutter"
                      >
                        <StackItem>
                          <div
                            className="pf-l-stack__item"
                          >
                            <CVEInfoBox
                              descriptionContent={
                                <Popover
                                  aria-label="Learn more"
                                  bodyContent={
                                    <TextContent>
                                      <Text
                                        component="p"
                                      >
                                        
                                      </Text>
                                    </TextContent>
                                  }
                                  enableFlip={true}
                                  footerContent={
                                    <a
                                      href="https://access.redhat.com/security/updates/classification/"
                                      rel="noopener noreferrer"
                                      target="_blank"
                                    >
                                      Learn more about security ratings
                                        
                                      <ExternalLinkAltIcon
                                        color="currentColor"
                                        noVerticalAlign={false}
                                        size="sm"
                                      />
                                    </a>
                                  }
                                  headerContent={
                                    <div>
                                      Unknown severity
                                    </div>
                                  }
                                  id="learn-more"
                                  position="bottom"
                                >
                                  <a>
                                    Learn more
                                  </a>
                                </Popover>
                              }
                              descriptionTitle="Unknown severity"
                              titleColor="severity-unknown"
                              titleContent={
                                <UnknownIcon
                                  color="currentColor"
                                  noVerticalAlign={false}
                                  size="lg"
                                />
                              }
                            >
                              <Split
                                className="infobox-square"
                                hasGutter={true}
                              >
                                <div
                                  className="pf-l-split pf-m-gutter infobox-square"
                                >
                                  <WithLoader
                                    loading={true}
                                  >
                                    <Skeleton
                                      isDark={false}
                                      size="lg"
                                    >
                                      <div
                                        className="ins-c-skeleton ins-c-skeleton__lg"
                                      >
                                         
                                      </div>
                                    </Skeleton>
                                  </WithLoader>
                                </div>
                              </Split>
                            </CVEInfoBox>
                          </div>
                        </StackItem>
                        <StackItem>
                          <div
                            className="pf-l-stack__item"
                          >
                            <CVEInfoBox
                              descriptionTitle="CVSS 3.0 base score"
                              titleContent={
                                <TextContent>
                                  <Text
                                    component="h3"
                                  >
                                    <Tooltip
                                      content="CVEs published before 2005 (approximately) did not have a CVSS Base Score."
                                      position="left"
                                    >
                                      <span>
                                        N/A
                                      </span>
                                    </Tooltip>
                                  </Text>
                                </TextContent>
                              }
                            >
                              <Split
                                className="infobox-square"
                                hasGutter={true}
                              >
                                <div
                                  className="pf-l-split pf-m-gutter infobox-square"
                                >
                                  <WithLoader
                                    loading={true}
                                  >
                                    <Skeleton
                                      isDark={false}
                                      size="lg"
                                    >
                                      <div
                                        className="ins-c-skeleton ins-c-skeleton__lg"
                                      >
                                         
                                      </div>
                                    </Skeleton>
                                  </WithLoader>
                                </div>
                              </Split>
                            </CVEInfoBox>
                          </div>
                        </StackItem>
                        <StackItem>
                          <div
                            className="pf-l-stack__item"
                          >
                            <injectIntl(CvssVector)>
                              <CvssVector
                                intl={
                                  Object {
                                    "defaultFormats": Object {},
                                    "defaultLocale": "en",
                                    "formatDate": [Function],
                                    "formatDateToParts": [Function],
                                    "formatDisplayName": [Function],
                                    "formatList": [Function],
                                    "formatMessage": [Function],
                                    "formatNumber": [Function],
                                    "formatNumberToParts": [Function],
                                    "formatPlural": [Function],
                                    "formatRelativeTime": [Function],
                                    "formatTime": [Function],
                                    "formatTimeToParts": [Function],
                                    "formats": Object {},
                                    "formatters": Object {
                                      "getDateTimeFormat": [Function],
                                      "getDisplayNames": [Function],
                                      "getListFormat": [Function],
                                      "getMessageFormat": [Function],
                                      "getNumberFormat": [Function],
                                      "getPluralRules": [Function],
                                      "getRelativeTimeFormat": [Function],
                                    },
                                    "locale": "en",
                                    "messages": Object {
                                      "default.cancel": "Cancel",
                                      "default.delete": "Delete",
                                      "default.remove": "Remove",
                                      "default.save": "Save",
                                    },
                                    "onError": [Function],
                                    "textComponent": Symbol(react.fragment),
                                    "timeZone": undefined,
                                    "wrapRichTextChunksInFragment": undefined,
                                  }
                                }
                              >
                                <TextContent>
                                  <div
                                    className="pf-c-content"
                                  >
                                    <WithLoader
                                      loading={true}
                                    >
                                      <Skeleton
                                        isDark={false}
                                        size="lg"
                                      >
                                        <div
                                          className="ins-c-skeleton ins-c-skeleton__lg"
                                        >
                                           
                                        </div>
                                      </Skeleton>
                                    </WithLoader>
                                    <WithLoader
                                      loading={true}
                                    >
                                      <Skeleton
                                        isDark={false}
                                        size="lg"
                                      >
                                        <div
                                          className="ins-c-skeleton ins-c-skeleton__lg"
                                        >
                                           
                                        </div>
                                      </Skeleton>
                                    </WithLoader>
                                  </div>
                                </TextContent>
                              </CvssVector>
                            </injectIntl(CvssVector)>
                          </div>
                        </StackItem>
                      </div>
                    </Stack>
                  </CVEPageDetailsSeverity>
                </injectIntl(CVEPageDetailsSeverity)>
              </div>
            </GridItem>
            <injectIntl(CSAwRuleBox)>
              <CSAwRuleBox
                intl={
                  Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatDateToParts": [Function],
                    "formatDisplayName": [Function],
                    "formatList": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatNumberToParts": [Function],
                    "formatPlural": [Function],
                    "formatRelativeTime": [Function],
                    "formatTime": [Function],
                    "formatTimeToParts": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getDisplayNames": [Function],
                      "getListFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralRules": [Function],
                      "getRelativeTimeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {
                      "default.cancel": "Cancel",
                      "default.delete": "Delete",
                      "default.remove": "Remove",
                      "default.save": "Save",
                    },
                    "onError": [Function],
                    "textComponent": Symbol(react.fragment),
                    "timeZone": undefined,
                    "wrapRichTextChunksInFragment": undefined,
                  }
                }
                rules={Array []}
              />
            </injectIntl(CSAwRuleBox)>
          </div>
        </Grid>
      </CVEPageDetails>
    </Router>
  </BrowserRouter>
</Provider>
`;

exports[`CVEPageDetails component should render without data 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <CVEPageDetails
        data={
          Object {
            "data": Object {},
            "isLoading": false,
            "meta": Object {},
          }
        }
      >
        <Grid
          hasGutter={true}
        >
          <div
            className="pf-l-grid pf-m-gutter"
          >
            <GridItem
              md={8}
              sm={12}
            >
              <div
                className="pf-l-grid__item pf-m-12-col-on-sm pf-m-8-col-on-md"
              >
                <WithLoader
                  loading={true}
                  variant="spinner"
                >
                  <Spinner
                    centered={true}
                  >
                    <div
                      className="ins-c-spinner ins-m-center"
                      role="status"
                    >
                      <span
                        className="pf-u-screen-reader"
                      >
                        Loading...
                      </span>
                    </div>
                  </Spinner>
                </WithLoader>
              </div>
            </GridItem>
            <GridItem
              className="severity-info-box pf-u-mt-md"
              md={4}
              sm={12}
            >
              <div
                className="pf-l-grid__item pf-m-12-col-on-sm pf-m-4-col-on-md severity-info-box pf-u-mt-md"
              >
                <injectIntl(CVEPageDetailsSeverity)>
                  <CVEPageDetailsSeverity
                    impact="Unknown"
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatDateToParts": [Function],
                        "formatDisplayName": [Function],
                        "formatList": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatNumberToParts": [Function],
                        "formatPlural": [Function],
                        "formatRelativeTime": [Function],
                        "formatTime": [Function],
                        "formatTimeToParts": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getDisplayNames": [Function],
                          "getListFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralRules": [Function],
                          "getRelativeTimeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {
                          "default.cancel": "Cancel",
                          "default.delete": "Delete",
                          "default.remove": "Remove",
                          "default.save": "Save",
                        },
                        "onError": [Function],
                        "textComponent": Symbol(react.fragment),
                        "timeZone": undefined,
                        "wrapRichTextChunksInFragment": undefined,
                      }
                    }
                  >
                    <Stack
                      hasGutter={true}
                    >
                      <div
                        className="pf-l-stack pf-m-gutter"
                      >
                        <StackItem>
                          <div
                            className="pf-l-stack__item"
                          >
                            <CVEInfoBox
                              descriptionContent={
                                <Popover
                                  aria-label="Learn more"
                                  bodyContent={
                                    <TextContent>
                                      <Text
                                        component="p"
                                      >
                                        
                                      </Text>
                                    </TextContent>
                                  }
                                  enableFlip={true}
                                  footerContent={
                                    <a
                                      href="https://access.redhat.com/security/updates/classification/"
                                      rel="noopener noreferrer"
                                      target="_blank"
                                    >
                                      Learn more about security ratings
                                        
                                      <ExternalLinkAltIcon
                                        color="currentColor"
                                        noVerticalAlign={false}
                                        size="sm"
                                      />
                                    </a>
                                  }
                                  headerContent={
                                    <div>
                                      Unknown severity
                                    </div>
                                  }
                                  id="learn-more"
                                  position="bottom"
                                >
                                  <a>
                                    Learn more
                                  </a>
                                </Popover>
                              }
                              descriptionTitle="Unknown severity"
                              titleColor="severity-unknown"
                              titleContent={
                                <UnknownIcon
                                  color="currentColor"
                                  noVerticalAlign={false}
                                  size="lg"
                                />
                              }
                            >
                              <Split
                                className="infobox-square"
                                hasGutter={true}
                              >
                                <div
                                  className="pf-l-split pf-m-gutter infobox-square"
                                >
                                  <WithLoader
                                    loading={true}
                                  >
                                    <Skeleton
                                      isDark={false}
                                      size="lg"
                                    >
                                      <div
                                        className="ins-c-skeleton ins-c-skeleton__lg"
                                      >
                                         
                                      </div>
                                    </Skeleton>
                                  </WithLoader>
                                </div>
                              </Split>
                            </CVEInfoBox>
                          </div>
                        </StackItem>
                        <StackItem>
                          <div
                            className="pf-l-stack__item"
                          >
                            <CVEInfoBox
                              descriptionTitle="CVSS 3.0 base score"
                              titleContent={
                                <TextContent>
                                  <Text
                                    component="h3"
                                  >
                                    <Tooltip
                                      content="CVEs published before 2005 (approximately) did not have a CVSS Base Score."
                                      position="left"
                                    >
                                      <span>
                                        N/A
                                      </span>
                                    </Tooltip>
                                  </Text>
                                </TextContent>
                              }
                            >
                              <Split
                                className="infobox-square"
                                hasGutter={true}
                              >
                                <div
                                  className="pf-l-split pf-m-gutter infobox-square"
                                >
                                  <WithLoader
                                    loading={true}
                                  >
                                    <Skeleton
                                      isDark={false}
                                      size="lg"
                                    >
                                      <div
                                        className="ins-c-skeleton ins-c-skeleton__lg"
                                      >
                                         
                                      </div>
                                    </Skeleton>
                                  </WithLoader>
                                </div>
                              </Split>
                            </CVEInfoBox>
                          </div>
                        </StackItem>
                        <StackItem>
                          <div
                            className="pf-l-stack__item"
                          >
                            <injectIntl(CvssVector)>
                              <CvssVector
                                intl={
                                  Object {
                                    "defaultFormats": Object {},
                                    "defaultLocale": "en",
                                    "formatDate": [Function],
                                    "formatDateToParts": [Function],
                                    "formatDisplayName": [Function],
                                    "formatList": [Function],
                                    "formatMessage": [Function],
                                    "formatNumber": [Function],
                                    "formatNumberToParts": [Function],
                                    "formatPlural": [Function],
                                    "formatRelativeTime": [Function],
                                    "formatTime": [Function],
                                    "formatTimeToParts": [Function],
                                    "formats": Object {},
                                    "formatters": Object {
                                      "getDateTimeFormat": [Function],
                                      "getDisplayNames": [Function],
                                      "getListFormat": [Function],
                                      "getMessageFormat": [Function],
                                      "getNumberFormat": [Function],
                                      "getPluralRules": [Function],
                                      "getRelativeTimeFormat": [Function],
                                    },
                                    "locale": "en",
                                    "messages": Object {
                                      "default.cancel": "Cancel",
                                      "default.delete": "Delete",
                                      "default.remove": "Remove",
                                      "default.save": "Save",
                                    },
                                    "onError": [Function],
                                    "textComponent": Symbol(react.fragment),
                                    "timeZone": undefined,
                                    "wrapRichTextChunksInFragment": undefined,
                                  }
                                }
                              >
                                <TextContent>
                                  <div
                                    className="pf-c-content"
                                  >
                                    <WithLoader
                                      loading={true}
                                    >
                                      <Skeleton
                                        isDark={false}
                                        size="lg"
                                      >
                                        <div
                                          className="ins-c-skeleton ins-c-skeleton__lg"
                                        >
                                           
                                        </div>
                                      </Skeleton>
                                    </WithLoader>
                                    <WithLoader
                                      loading={true}
                                    >
                                      <Skeleton
                                        isDark={false}
                                        size="lg"
                                      >
                                        <div
                                          className="ins-c-skeleton ins-c-skeleton__lg"
                                        >
                                           
                                        </div>
                                      </Skeleton>
                                    </WithLoader>
                                  </div>
                                </TextContent>
                              </CvssVector>
                            </injectIntl(CvssVector)>
                          </div>
                        </StackItem>
                      </div>
                    </Stack>
                  </CVEPageDetailsSeverity>
                </injectIntl(CVEPageDetailsSeverity)>
              </div>
            </GridItem>
            <injectIntl(CSAwRuleBox)>
              <CSAwRuleBox
                intl={
                  Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatDateToParts": [Function],
                    "formatDisplayName": [Function],
                    "formatList": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatNumberToParts": [Function],
                    "formatPlural": [Function],
                    "formatRelativeTime": [Function],
                    "formatTime": [Function],
                    "formatTimeToParts": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getDisplayNames": [Function],
                      "getListFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralRules": [Function],
                      "getRelativeTimeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {
                      "default.cancel": "Cancel",
                      "default.delete": "Delete",
                      "default.remove": "Remove",
                      "default.save": "Save",
                    },
                    "onError": [Function],
                    "textComponent": Symbol(react.fragment),
                    "timeZone": undefined,
                    "wrapRichTextChunksInFragment": undefined,
                  }
                }
                rules={Array []}
              />
            </injectIntl(CSAwRuleBox)>
          </div>
        </Grid>
      </CVEPageDetails>
    </Router>
  </BrowserRouter>
</Provider>
`;
