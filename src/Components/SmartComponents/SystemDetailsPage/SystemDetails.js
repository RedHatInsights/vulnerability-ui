import React from 'react';
import propTypes from 'prop-types';
import { connect } from 'react-redux';
import { ConnectedSystemCves } from '../SystemCves/SystemCves';
import {
    EmptyStateExcludedSystem,
    NotAuthorized
} from '../../PresentationalComponents/EmptyStates/EmptyStates';
import { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';
import { intl } from '../../../Utilities/IntlProvider';
import messages from '../../../Messages';

const SystemDetails = ({ entity, isOptOut, optOutSystemHandler, loaded, rbacPermissions, isRbacLoading }) => {
    const {
        canExport,
        canReadVulnerabilityResults,
        canEditPairStatus,
        canReadExcludedIncluded
    } = rbacPermissions;

    let allowedCveActions = ['REMEDIATE', ...canEditPairStatus ? ['EDIT_STATUS'] : []];

    if (isRbacLoading) {
        return <Spinner centered/>;
    } else if (canReadVulnerabilityResults) {
        if (canReadExcludedIncluded) {
            if (entity && loaded && isOptOut) {
                return <EmptyStateExcludedSystem buttonAction={() => optOutSystemHandler(false)}/>;
            } else {
                return <ConnectedSystemCves
                    entity={{ id: entity?.id, display_name: entity?.display_name }}
                    allowedCveActions={allowedCveActions}
                    showHeaderLabel
                    setPageTitle
                    canExport={canExport}
                />;
            }
        } else {
            return <NotAuthorized title={intl.formatMessage(messages.notAuthorizedNoAccessForSystem)}/>;
        }
    } else {
        return <NotAuthorized />;
    }
};

SystemDetails.propTypes = {
    entity: propTypes.object,
    isOptOut: propTypes.bool,
    loaded: propTypes.bool,
    optOutSystemHandler: propTypes.func,
    rbacPermissions: propTypes.object,
    isRbacLoading: propTypes.bool
};

function mapStateToProps({ entityDetails: { entity, opt_out: isOptOut, loaded } }) {
    return {
        entity,
        isOptOut,
        loaded
    };
}

export default connect(
    mapStateToProps,
    null
)(SystemDetails);
