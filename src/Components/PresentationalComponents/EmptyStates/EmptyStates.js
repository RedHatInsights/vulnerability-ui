import React from 'react';
import propTypes from 'prop-types';
import { FormattedMessage } from 'react-intl';
import {
    Bullseye,
    Button,
    EmptyStateVariant,
    EmptyState,
    EmptyStateBody,
    EmptyStateIcon,
    Text,
    TextVariants,
    TextContent,
    Title
} from '@patternfly/react-core';

import { CubesIcon, ExternalLinkAltIcon, ExclamationCircleIcon, SecurityIcon } from '@patternfly/react-icons';
import messages from '../../../Messages';

// Reports that no CVEs were found after filtering results
export const FilterNotFoundForCVE = (
    <Bullseye style={{ height: 'auto' }}>
        <EmptyState variant={EmptyStateVariant.large}>
            <Title headingLevel="h5" size="lg">
                <FormattedMessage {...messages.emptyStateNoMatchingCves} />
            </Title>
            <TextContent>
                <EmptyStateBody style={{ whiteSpace: 'normal' }}>
                    <FormattedMessage {...messages.emptyStateMaybeFollowing} />
                    <Text>
                        <FormattedMessage {...messages.emptyStateNoCveReported} />
                    </Text>
                    <Text component={TextVariants.p}>
                        <FormattedMessage {...messages.emptyStateForMoreInfo} />
                        <a href="https://access.redhat.com/security/team/contact/" target="__blank" rel="noopener noreferrer">
                            <FormattedMessage {...messages.emptyStateForMoreLink} />  <ExternalLinkAltIcon />
                        </a>
                    </Text>
                </EmptyStateBody>
            </TextContent>
        </EmptyState>
    </Bullseye>
);

export const FilterNotFoundForSystem = (
    <Bullseye style={{ height: 'auto' }}>
        <EmptyState variant={EmptyStateVariant.large}>
            <Title headingLevel="h5" size="lg">
                <FormattedMessage {...messages.emptyStateNoCvesReported} />
            </Title>
            <TextContent>
                <EmptyStateBody style={{ whiteSpace: 'normal' }}>
                    <Text>
                        <FormattedMessage {...messages.emptyStateNoCveReported} />
                    </Text>
                    <Text component={TextVariants.p}>
                        <FormattedMessage {...messages.emptyStateIfCveForSystem} />
                        <a href="https://access.redhat.com/security/team/contact/" target="__blank" rel="noopener noreferrer">
                            <FormattedMessage {...messages.emptyStateForMoreLink} />  <ExternalLinkAltIcon />
                        </a>
                    </Text>
                </EmptyStateBody>
            </TextContent>
        </EmptyState>
    </Bullseye>
);

export const EmptyCVEListForSystem = (
    <Bullseye style={{ height: 'auto' }}>
        <EmptyState variant={EmptyStateVariant.large}>
            <Title headingLevel="h5" size="lg">
                <FormattedMessage {...messages.emptyStateNoReportedSystem} />
            </Title>
            <TextContent>
                <EmptyStateBody style={{ whiteSpace: 'normal' }}>
                    <Text>
                        <FormattedMessage {...messages.emptyStateNoCveAffects} />
                    </Text>
                    <Text component={TextVariants.p}>
                        <FormattedMessage {...messages.emptyStateIfCveForSystem}/>
                        <a href="https://access.redhat.com/security/team/contact/" target="__blank" rel="noopener noreferrer">
                            <FormattedMessage {...messages.emptyStateForMoreLink} />  <ExternalLinkAltIcon />
                        </a>.
                    </Text>

                </EmptyStateBody>
            </TextContent>
        </EmptyState>
    </Bullseye>
);

export const EmptyExcludedSystem = ({ buttonAction }) => (
    <Bullseye>
        <EmptyState variant={EmptyStateVariant.large}>
            <EmptyStateIcon icon={SecurityIcon} size={'sm'} />
            <Title headingLevel="h5" size="lg">
                <FormattedMessage {...messages.emptyStateSystemExcludedTitle} />
            </Title>
            <EmptyStateBody>
                <FormattedMessage {...messages.emptyStateSystemExcludedBody} />
            </EmptyStateBody>
            <Button variant="primary" component="a" onClick={buttonAction}>
                <FormattedMessage {...messages.emptyStateSystemResumeAnalysis} />
            </Button>
        </EmptyState>
    </Bullseye>
);

EmptyExcludedSystem.propTypes = {
    buttonAction: propTypes.func
};

export const EmptyCVEList = (
    <Bullseye style={{ height: 'auto' }}>
        <EmptyState variant={EmptyStateVariant.large}>
            <Title headingLevel="h5" size="lg">
                <FormattedMessage {...messages.emptyStateNoReportedSystem} />
            </Title>
            <TextContent>
                <EmptyStateBody style={{ whiteSpace: 'normal' }}>
                    <Text>
                        <FormattedMessage {...messages.emptyStateNoCveAffects} />
                    </Text>
                    <FormattedMessage {...messages.emptyStateIfCveForSystems}/>
                    <a href="https://access.redhat.com/security/team/contact/" target="__blank" rel="noopener noreferrer">
                        <FormattedMessage {...messages.emptyStateForMoreLink} /> <ExternalLinkAltIcon />
                    </a>
                    .
                </EmptyStateBody>
            </TextContent>
        </EmptyState>
    </Bullseye>
);

// Indicates that Insights is not activated
export const EmptyVulnerabilityData = (
    <Bullseye>
        <EmptyState>
            <EmptyStateIcon icon={CubesIcon} />
            <Title headingLevel="h5" size="lg">
                <FormattedMessage {...messages.emptyStateNoData} />
            </Title>
            <EmptyStateBody>
                <FormattedMessage {...messages.emptyStateActivateInsights} />
            </EmptyStateBody>
            <Button
                variant="primary"
                component="a"
                href="http://access.redhat.com/products/cloud_management_services_for_rhel#getstarted"
            >
                <FormattedMessage {...messages.emptyStateLearnInsights} />
            </Button>
        </EmptyState>
    </Bullseye>
);

// Generic error
export const GenericError = (
    <Bullseye>
        <EmptyState variant={EmptyStateVariant.large}>
            <EmptyStateIcon icon={ExclamationCircleIcon} color={'var(--pf-global--danger-color--100)'} />
            <Title headingLevel="h5" size="lg">
                <FormattedMessage {...messages.somethingWrong} />
            </Title>
            <EmptyStateBody>
                <FormattedMessage {...messages.tryRefreshing} />
                <br/><br/>
                <FormattedMessage {...messages.ifProblemPersists}
                    values = {{
                        statusPageLink:
                                <a href="https://status.redhat.com" target="__blank" rel="noopener noreferrer">
                                    <FormattedMessage {...messages.statusPage} />
                                </a>
                    }}
                />
                <br/><br/>
                <Button variant="primary" onClick={ () => history.back() }>
                    <FormattedMessage {...messages.returnToPreviousPage} />
                </Button>

            </EmptyStateBody>
        </EmptyState>
    </Bullseye>
);
