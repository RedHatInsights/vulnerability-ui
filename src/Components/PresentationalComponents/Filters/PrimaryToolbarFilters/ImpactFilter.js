
import React from 'react';
import { conditionalFilterType } from '@redhat-cloud-services/frontend-components';
import { IMPACT_OPTIONS } from '../../../../Helpers/constants';
import { intl } from '../../../../Utilities/IntlProvider';
import messages from '../../../../Messages';
import { SecurityIcon } from '@patternfly/react-icons';

const impactFilter = (apply, currentFilter = {}) => {
    let { impact: currentValue } = currentFilter;

    const filterByImpact = values => {
        apply({ impact: (values.length > '0' && values.filter(value => value !== ',').join(',')) || '' });
    };

    return {
        label: intl.formatMessage(messages.impact),
        type: conditionalFilterType.checkbox,
        urlParam: 'impact',
        filterValues: {
            onChange: (event, value) => {
                filterByImpact(value);
            },
            items: IMPACT_OPTIONS.map(item => ({
                label: (
                    <React.Fragment>
                        { item.hasIcon && <SecurityIcon className="pf-u-mr-xs" color={item.iconColor}/> }
                        {item.label}
                    </React.Fragment>
                ),
                value: item.value
            })),
            value: (currentValue ? currentValue.split(',') : [])
        }
    };
};

export default impactFilter;
