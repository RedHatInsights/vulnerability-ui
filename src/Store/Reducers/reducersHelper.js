export const error = {
    errorCode: null,
    message: null,
    hasError: false
};

const hasResetFilters = (workloads, SIDs, tags) => workloads === undefined && SIDs.length === 0 && tags.length === 0;
const hasSetAnyFilter = (state) => ['sap_system', 'tags', 'sap_sids'].some(key => state.hasOwnProperty(key));

export const applyGlobalFilter = (state, { workloads, SIDs, tags }) => {
    // DO nothing in first load
    if (!hasSetAnyFilter(state) && hasResetFilters(workloads, SIDs, tags)) {
        return state;
    }

    if (hasSetAnyFilter(state) && hasResetFilters(workloads, SIDs, tags)) {
        // reset the filters
        state = {
            ...state,
            sap_system: false,
            tags: undefined,
            sap_sids: undefined,
            page: 1
        };
    } else {
        state = {
            ...state,
            ...workloads?.SAP?.isSelected && { sap_system: true },
            ...SIDs?.length > 0 && { sap_sids: SIDs },
            ...tags?.length > 0 && { tags },
            page: 1
        };
    }

    return state;
};
