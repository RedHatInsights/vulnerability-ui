import { FilterDropdown, SimpleTableFilter } from '@redhat-cloud-services/frontend-components';
import routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';
import debounce from 'lodash/debounce';
import propTypes from 'prop-types';
import React from 'react';
import { connect } from 'react-redux';

const Filters = (props) => {

    const { filterValues, filterCategories, searchPlaceholder, apply } = props;

    const addFilter = (param, value, type) => {
        let newFilter;
        if (type === 'radio' || param === 'show_all') {
            newFilter = { [param]: value };
        } else {
            newFilter = filterValues[param] ? { [param]: `${filterValues[param]},${value}` } : { [param]: value };
        }

        apply({ ...newFilter, page: 1 });
    };

    const removeFilter = (key, value) => {
        const values = value.split(',');
        const newFilter = {
            [key]: filterValues[key]
            .split(',')
            .filter(item => !values.includes(item))
            .join(',')
        };

        if (newFilter.length !== 0) {
            apply({ ...newFilter, page: 1 });
        } else {
            const filter = { ...filterValues, [key]: undefined };
            apply({ ...filter, page: 1 });
        }
    };

    const changeFilterValue = (filter) => {

        const handleFilterChange = debounce(filter => {
            apply({ filter, page: 1 });
        }, 400);

        handleFilterChange(filter);
    };

    return (
        <React.Fragment>
            <div>
                <SimpleTableFilter
                    buttonTitle={null}
                    placeholder={searchPlaceholder}
                    onFilterChange={value => changeFilterValue(value)}
                />
            </div>
            <div>
                <FilterDropdown
                    addFilter={addFilter}
                    removeFilter={removeFilter}
                    filters={filterValues}
                    filterCategories={filterCategories}
                />
            </div>
        </React.Fragment>
    );

};

Filters.propTypes = {
    filterValues: propTypes.object,
    filterCategories: propTypes.array,
    searchPlaceholder: propTypes.string,
    apply: propTypes.func
};

export default connect()(routerParams(Filters));
