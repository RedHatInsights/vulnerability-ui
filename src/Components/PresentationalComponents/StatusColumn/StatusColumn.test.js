import StatusColumn from './StatusColumn'
import { render, screen } from '@testing-library/react';
import { IntlProvider } from '@redhat-cloud-services/frontend-components-translations';

describe('StatusColumn', () => {
    it('Should render icon', () => {
        render(
            <IntlProvider locale="en">
                <StatusColumn cveStatusId={0} systemStatusId={1}/>
            </IntlProvider>
        );

        expect(screen.getByTestId('status-column-server-icon')).toBeTruthy();
    });

    it('Should not render icon and status should be Not reviewed', () => {
        render(
            <IntlProvider locale="en">
                <StatusColumn cveStatusId={0} systemStatusId={0}/>
            </IntlProvider>
        );

        expect(screen.queryByTestId('status-column-server-icon')).toBeFalsy();
        expect(screen.getByText('Not reviewed')).toBeTruthy();
    });

    it('Status should be In review', () => {
        render(
            <IntlProvider locale="en">
                <StatusColumn cveStatusId={1} systemStatusId={1}/>
            </IntlProvider>
        );

        expect(screen.getByText('In review')).toBeTruthy();
    });

    it('Status should be On-hold', () => {
        render(
            <IntlProvider locale="en">
                <StatusColumn cveStatusId={2} systemStatusId={2}/>
            </IntlProvider>
        );

        expect(screen.getByText('On-hold')).toBeTruthy();
    });

    it('Status should be Scheduled for patch', () => {
        render(
            <IntlProvider locale="en">
                <StatusColumn cveStatusId={3} systemStatusId={3}/>
            </IntlProvider>
        );

        expect(screen.getByText('Scheduled for patch')).toBeTruthy();
    });

    it('Status should be Resolved', () => {
        render(
            <IntlProvider locale="en">
                <StatusColumn cveStatusId={4} systemStatusId={4}/>
            </IntlProvider>
        );

        expect(screen.getByText('Resolved')).toBeTruthy();
    });

    it('Status should be No action - risk accepted', () => {
        render(
            <IntlProvider locale="en">
                <StatusColumn cveStatusId={5} systemStatusId={5}/>
            </IntlProvider>
        );

        expect(screen.getByText('No action - risk accepted')).toBeTruthy();
    });

    it('Status should be Resolved via mitigation ', () => {
        render(
            <IntlProvider locale="en">
                <StatusColumn cveStatusId={6} systemStatusId={6}/>
            </IntlProvider>
        );

        expect(screen.getByText('Resolved via mitigation')).toBeTruthy();
    });

})
