import toJson from 'enzyme-to-json';
import { mountWithIntl } from '../../../Helpers/MiscHelper';
import { BrowserRouter as Router } from 'react-router-dom';
import configureStore from 'redux-mock-store';
import { Provider } from "react-redux";
import { useSelector } from 'react-redux';
import ReportConfigModal from './ReportConfigModal';
import { act } from 'react-dom/test-utils';
import { FILTERS, DEFAULT_FILTER_DATA } from '../../../Helpers/constants';
import DownloadCVEsReport from '../Reports/DownloadCVEsReport';

jest.useFakeTimers('modern').setSystemTime(new Date('2020-01-01').getTime());

const customMiddleWare = store => next => action => {
    useSelector.mockImplementation(callback => {
        return callback({ });
    });
    next(action);
}

const mockStore = configureStore([customMiddleWare]);
const store = mockStore({});
window.insights = { loadRemediations: jest.fn(), chrome: { getUserPermissions: jest.fn() } }

let wrapper;
beforeEach(() => {
    let columnsToInclude = DEFAULT_FILTER_DATA;
    const setColumnsToInclude = (newColumns) => columnsToInclude = newColumns; 

    wrapper = mountWithIntl(
        <Provider store={store}>
            <Router>                    
                <ReportConfigModal
                    isOpen
                    onClose={jest.fn()}
                    filterData={columnsToInclude}
                    setColumnsToInclude={setColumnsToInclude}
                    columnsToInclude={Object.keys(FILTERS)}
                    userNotes=""
                />
            </Router>
        </Provider>
    ); 
});

describe('Report config modal component', () => {
    it('Should match snapshots', () => {
        expect(toJson(wrapper)).toMatchSnapshot();
    });

    it('Should pass correct selected columns array according to checkboxes', () => {
        const publishDateColumnCheckbox = wrapper.find('Checkbox').at(2).prop('onChange');
        const columnsToInclude = wrapper.find(ReportConfigModal).prop('columnsToInclude');

        expect(columnsToInclude).toEqual(Object.keys(FILTERS));

        act(() => {
            publishDateColumnCheckbox(false);
            wrapper.update();
        });

        // when publish date is unchecked, it is expected that header contains all columns except publish date
        expect(columnsToInclude).toEqual(Object.keys(FILTERS).splice("publish_date"));

        act(() => {
            publishDateColumnCheckbox(true);
            wrapper.update();
        });

        // check publish date, header should now contain all columns
        expect(columnsToInclude).toEqual(Object.keys(FILTERS));
    });

    it('Should clear state on close', () => {
        const publishDateColumnCheckbox = wrapper.find('Checkbox').at(2).prop('onChange');
        const columnsToInclude = wrapper.find(ReportConfigModal).prop('columnsToInclude');

        act(() => {
            publishDateColumnCheckbox(false);
            wrapper.update();
        });

        expect(columnsToInclude).toEqual(Object.keys(FILTERS).splice("publish_date"));
        
        act(() =>Â {
            wrapper.find('Modal').invoke('onClose')();
        })

        expect(columnsToInclude).toEqual(Object.keys(FILTERS));
    })
});
