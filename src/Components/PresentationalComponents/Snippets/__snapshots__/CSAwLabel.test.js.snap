// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CSAwLabel component Should match snapshot 1`] = `
<Provider
  store={
    {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      location={
        {
          "hash": "",
          "key": "default",
          "pathname": "/",
          "search": "",
          "state": null,
        }
      }
      navigationType="POP"
      navigator={
        {
          "action": "POP",
          "createHref": [Function],
          "createURL": [Function],
          "encodeLocation": [Function],
          "go": [Function],
          "listen": [Function],
          "location": {
            "hash": "",
            "key": "default",
            "pathname": "/",
            "search": "",
            "state": null,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <CSAwLabel>
        <Tooltip
          content={
            <Memo(MemoizedFormattedMessage)
              defaultMessage="Denotes a security rule. Security rules are written by Red Hat to help you configure your systems"
              description="Tooltip"
              id="rules.iconTooolip"
            />
          }
        >
          <Popper
            appendTo={[Function]}
            distance={15}
            enableFlip={true}
            flipBehavior={
              [
                "top",
                "right",
                "bottom",
                "left",
                "top",
                "right",
                "bottom",
              ]
            }
            isVisible={false}
            onBlur={[Function]}
            onDocumentClick={false}
            onDocumentKeyDown={[Function]}
            onFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onPopperMouseEnter={[Function]}
            onPopperMouseLeave={[Function]}
            onTriggerEnter={[Function]}
            placement="top"
            popper={
              <div
                aria-live="off"
                className="pf-c-tooltip"
                id="pf-tooltip-1"
                role="tooltip"
                style={
                  {
                    "maxWidth": null,
                    "opacity": 0,
                    "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                  }
                }
              >
                <TooltipArrow />
                <TooltipContent
                  isLeftAligned={false}
                >
                  <Memo(MemoizedFormattedMessage)
                    defaultMessage="Denotes a security rule. Security rules are written by Red Hat to help you configure your systems"
                    description="Tooltip"
                    id="rules.iconTooolip"
                  />
                </TooltipContent>
              </div>
            }
            popperMatchesTriggerWidth={false}
            positionModifiers={
              {
                "bottom": "pf-m-bottom",
                "bottom-end": "pf-m-bottom-right",
                "bottom-start": "pf-m-bottom-left",
                "left": "pf-m-left",
                "left-end": "pf-m-left-bottom",
                "left-start": "pf-m-left-top",
                "right": "pf-m-right",
                "right-end": "pf-m-right-bottom",
                "right-start": "pf-m-right-top",
                "top": "pf-m-top",
                "top-end": "pf-m-top-right",
                "top-start": "pf-m-top-left",
              }
            }
            removeFindDomNode={false}
            trigger={
              <Label
                className={
                  [
                    "cve-labels",
                    undefined,
                  ]
                }
                color="blue"
                style={{}}
              >
                <Memo(MemoizedFormattedMessage)
                  defaultMessage="Security rule "
                  description="Security rule label"
                  id="securityRuleLabel"
                />
              </Label>
            }
            zIndex={9999}
          >
            <FindRefWrapper
              onFoundRef={[Function]}
            >
              <Label
                className={
                  [
                    "cve-labels",
                    undefined,
                  ]
                }
                color="blue"
                style={{}}
              >
                <span
                  className="pf-c-label pf-m-blue cve-labels"
                  style={{}}
                >
                  <span
                    className="pf-c-label__content"
                  >
                    <FormattedMessage
                      defaultMessage="Security rule "
                      description="Security rule label"
                      id="securityRuleLabel"
                    >
                      Security rule 
                    </FormattedMessage>
                  </span>
                </span>
              </Label>
            </FindRefWrapper>
          </Popper>
        </Tooltip>
      </CSAwLabel>
    </Router>
  </BrowserRouter>
</Provider>
`;
