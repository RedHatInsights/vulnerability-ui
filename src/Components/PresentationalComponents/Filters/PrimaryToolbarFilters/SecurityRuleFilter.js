
import { conditionalFilterType } from '@redhat-cloud-services/frontend-components';
import { securityRulesOptions } from '../../../../Helpers/constants';
import { intl } from '../../../../Utilities/IntlProvider';
import messages from '../../../../Messages';
import unionWith from 'lodash/unionWith';
import isEqual from 'lodash/isEqual';

const securityRuleFilter = (apply, currentFilter = {}, dynamicFilters = []) => {
    let { security_rule: currentValue } = currentFilter;
    if (currentValue === '' || !currentValue) {
        currentValue = 'all';
    }

    const filterBySecurityRule = values => {
        apply({ security_rule: values === 'all' ? '' : values  });
    };

    return {
        label: intl.formatMessage(messages.securityRules),
        type: conditionalFilterType.radio,
        urlParam: 'security_rule',
        filterValues: {
            onChange: (event, value) => {
                filterBySecurityRule(value);
            },
            items:
                unionWith(securityRulesOptions, dynamicFilters, isEqual).map(item => ({ label: item.label, value: item.value })),
            value: currentValue
        }
    };
};

export default securityRuleFilter;
