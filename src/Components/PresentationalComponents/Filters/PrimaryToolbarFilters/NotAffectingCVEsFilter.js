import { conditionalFilterType } from '@redhat-cloud-services/frontend-components';
import { AFFECTING_SYSTEMS_OPTIONS } from '../../../../Helpers/constants';
import { intl } from '../../../../Utilities/IntlProvider';
import messages from '../../../../Messages';

const notAffectingCvesFilter = (apply, currentFilter = {}) => {
    let { show_all: currentValue } = currentFilter;
    currentValue = (currentValue === '' || !currentValue) ? 'show' :  'hide';

    const filterByNoAffect = value => {
        value = value === 'hide' ? true : '';
        apply({ show_all: value });
    };

    return {
        label: intl.formatMessage(messages.filterAffectingCVEs),
        type: conditionalFilterType.radio,
        urlParam: 'show_all',
        filterValues: {
            onChange: (event, value) => {
                filterByNoAffect(value);
            },
            items: AFFECTING_SYSTEMS_OPTIONS.map(item => ({ label: item.label, value: item.value })),
            value: currentValue
        }
    };

};

export default  notAffectingCvesFilter;
