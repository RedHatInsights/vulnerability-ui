import {
    EmptyStateNoCVEs,
    EmptyStateNoSystems,
    EmptyStateExcludedSystem
} from './EmptyStates'
import { fireEvent, render, screen } from '@testing-library/react';
import TestWrapper from '../../../Utilities/TestWrapper';
import messages from '../../../Messages'
import '@testing-library/jest-dom';

describe('Empty states', () => {
    it('should render EmptyStateNoCVEs', () => {
        const { asFragment } = render(<TestWrapper><EmptyStateNoCVEs secondParagraph={messages.emptyStateThereShouldBeCVEs}/></TestWrapper>);
        expect(asFragment()).toMatchSnapshot();

        expect(screen.getByTestId('prod-sec-link')).toBeVisible();
    });

    it('should render EmptyStateNoSystems', () => {
        const { asFragment } = render(<TestWrapper><EmptyStateNoSystems /></TestWrapper>);
        expect(asFragment()).toMatchSnapshot();
    });

    it('should render EmptyStateExcludedSystem', () => {
        const mockAction = jest.fn();
        const { asFragment } = render(<TestWrapper><EmptyStateExcludedSystem buttonAction={mockAction} /></TestWrapper>);
        expect(asFragment()).toMatchSnapshot();

        fireEvent.click(screen.getByTestId('empty-state-button-action'));
        expect(mockAction).toHaveBeenCalled();
    });
});
