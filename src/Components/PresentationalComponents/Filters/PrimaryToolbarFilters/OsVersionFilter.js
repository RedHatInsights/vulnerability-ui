import { useSelector } from 'react-redux';
import { useLoadModule } from '@scalprum/react-core';
import { intl } from '../../../../Utilities/IntlProvider';
import messages from '../../../../Messages';

const useOsVersionFilter = (appliedVersions, apply) => {
    /* operatingSystems are obtained from the Inventory store */
    const operatingSystems = useSelector(({ entities }) => entities?.operatingSystems) || [];
    const [{ toGroupSelectionValue, buildOSFilterConfig } = {}] = useLoadModule({
        appName: 'inventory',
        scope: 'inventory',
        module: './OsFilterHelpers'
    });

    return buildOSFilterConfig
        ? [
            buildOSFilterConfig(
                {
                    label: intl.formatMessage(messages.osFilterLabel),
                    type: 'checkbox',
                    id: 'rhel_version',
                    value: toGroupSelectionValue(
                        appliedVersions
                            ? appliedVersions.split(',')
                            : []
                    ),
                    onChange: (event, value) => {
                    /* `versions` must be of type string, e.g., "8.9,9.0" */
                        const versions = Object.values(value)
                            .flatMap((versions) => Object.keys(versions))
                            .toString();
                        apply({ rhel_version: versions, page: 1 });
                    },
                    placeholder: intl.formatMessage(messages.osFilterPlaceholder)
                },
                operatingSystems
            )
        ]
        : [];
};

export default useOsVersionFilter;
