import ThirdPage from './ThirdPage';
import toJson from 'enzyme-to-json';
import { mountWithIntl } from '../../../../Helpers/MiscHelper';
import { BrowserRouter as Router } from 'react-router-dom';
import configureStore from 'redux-mock-store';
import { Provider } from 'react-redux';
import { intl } from '../../../../Utilities/IntlProvider';

const mockStore = configureStore([store => next => action => {}]);
let store = mockStore({ });

const data = {
    "topRules": [
        {
            "associated_cves": [
                "CVE-2018-12126",
                "CVE-2018-12127",
                "CVE-2018-12130",
                "CVE-2019-11091"
            ],
            "description": "Installed package versions are unable to assess this vulnerability.\n",
            "name": "\"MDS\": CPU side-channel",
            "rule_id": "CVE_2018_12130_cpu_kernel|CVE_2018_12130_CPU_KERNEL_NEED_UPDATE",
            "severity": 3,
            "systems_affected": 98
        },
        {
            "associated_cves": [
                "CVE-2019-1125"
            ],
            "description": "Vulnerable package versions are installed.\n",
            "name": "\"SWAPGS\": CPU side-channel",
            "rule_id": "CVE_2019_1125_kernel|CVE_2019_1125_KERNEL_2",
            "severity": 3,
            "systems_affected": 98
        },
        {
            "associated_cves": [
                "CVE-2018-3620",
                "CVE-2018-3646"
            ],
            "description": "Installed package versions are unable to assess this vulnerability.\n",
            "name": "\"L1TF\": CPU side-channel with outdated kernel",
            "rule_id": "CVE_2018_3620_cpu_kernel|CVE_2018_3620_CPU_KERNEL_NEED_UPDATE",
            "severity": 3,
            "systems_affected": 96
        }
    ],
    "rulesHeader": [
        "Severity",
        "Num. security rules",
        "Num. affected systems"
    ],
    "rulesBySeverityMap": [
        [
            "Critical",
            "0",
            "0"
        ],
        [
            "Important",
            "11",
            "135"
        ],
        [
            "Moderate",
            "0",
            "0"
        ],
        [
            "Low",
            "0",
            "0"
        ]
    ],
    "rulesChart": [
        {
            "name": "Critical",
            "x": "Critical",
            "y": 0
        },
        {
            "name": "Important",
            "x": "Important",
            "y": 135
        },
        {
            "name": "Moderate",
            "x": "Moderate",
            "y": 0
        },
        {
            "name": "Low",
            "x": "Low",
            "y": 0
        }
    ]
}

describe('ThirdPage component', () => {
    it('Should match snapshot', () => {
        const wrapper = mountWithIntl(
            <Provider store={store}>
                <Router>
                    <ThirdPage data={data} intl={intl} />
                </Router>
            </Provider>);

        expect(toJson(wrapper)).toMatchSnapshot();
    })
});
