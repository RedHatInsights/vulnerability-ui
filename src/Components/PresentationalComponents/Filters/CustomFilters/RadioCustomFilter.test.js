import RadioCustomFilter from './RadioCustomFilter';
import { fireEvent, render, screen } from '@testing-library/react';

const selectProps = null
const options = [
    { value: "op1", label: "option 1" },
    { value: "op2", label: "option 2" },
    { value: "op3", label: "option 3" }
]
const filterName = "My filter"
const filterId = "my_filter"

describe('RadioCustomFilter component', () => {
    it('Should have selected first item by default.', () => {
        let filterData = { my_filter: "op1" }
        const setFilterData = newData => filterData = newData

        render(
            <RadioCustomFilter filterData={filterData} setFilterData={setFilterData} selectProps={selectProps} options={options} filterName={filterName} filterId={filterId} />
        );

        fireEvent.click(screen.getByLabelText('Options menu'));

        expect(screen.getByRole('radio', { name: /option 1/i }).checked).toBeTruthy();
        expect(screen.getByRole('radio', { name: /option 2/i }).checked).toBeFalsy();
        expect(screen.getByRole('radio', { name: /option 3/i }).checked).toBeFalsy();
    });

    it('Should update filter data on radio change.', () => {
        let filterData = { my_filter: "op1" }
        const setFilterData = newData => filterData = newData

        render(
            <RadioCustomFilter filterData={filterData} setFilterData={setFilterData} selectProps={selectProps} options={options} filterName={filterName} filterId={filterId} />
        );

        fireEvent.click(screen.getByLabelText('Options menu'));
        fireEvent.click(screen.getByRole('radio', { name: /option 2/i }));

        expect(filterData).toStrictEqual({ my_filter: "op2" })
    });
});
