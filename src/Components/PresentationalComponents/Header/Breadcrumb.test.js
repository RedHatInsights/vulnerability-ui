import Breadcrumb from './Breadcrumb';
import { BrowserRouter as Router } from 'react-router-dom';
import toJson from 'enzyme-to-json';

describe('Breadcrumb component', () => {
    it('Should show skeleton when items are loading', () => {
        const items = [{
            title: 'some page',
            to: '/somewhere',
            loaded: false
        }];

        const wrapper = mount(
            <Router>
                <Breadcrumb breadcrumbs={items}/>
            </Router>
        ); 
            
        expect(wrapper.find('Skeleton')).toHaveLength(1);
    })

    it('Should match snapshot', () => {
        const items = [{
            title: 'some page',
            to: '/somewhere',
            loaded: false
        },
        {
            title: 'some other page',
            to: '/somewhereElse',
            loaded: true
        },
        {
            title: 'current page',
            isActive: true,
            loaded: true
        }]

        const wrapper = mount(
            <Router>
                <Breadcrumb breadcrumbs={items}/>
            </Router>
        );     
            
        expect(toJson(wrapper)).toMatchSnapshot();
    })

    it('Should link to the correct pages', () => {
        const items = [{
            title: 'some page',
            to: '/somewhere',
            loaded: true
        },
        {
            title: 'current page',
            isActive: true,
            loaded: true
        }]

        const wrapper = mount(
            <Router>
                <Breadcrumb breadcrumbs={items}/>
            </Router>
        );     
            
        const parts = wrapper.find('li');

        expect(parts.at(0).find('a')).toHaveLength(1);
        expect(parts.at(0).find('a').prop('href')).toEqual('/cves');

        expect(parts.at(1).find('a')).toHaveLength(1);
        expect(parts.at(1).find('a').prop('href')).toEqual('/somewhere');

        expect(parts.at(2).find('a')).toHaveLength(0); // last element (current page) is active, and has no link
    })
});
