// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CVElabels component Should match snapshot with exploit and security rule label. 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <CVElabels
        hasExploit={true}
        hasRule={true}
        intl={
          Object {
            "defaultFormats": Object {},
            "defaultLocale": "en",
            "defaultRichTextElements": undefined,
            "formatDate": [Function],
            "formatDateTimeRange": [Function],
            "formatDateToParts": [Function],
            "formatDisplayName": [Function],
            "formatList": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatNumberToParts": [Function],
            "formatPlural": [Function],
            "formatRelativeTime": [Function],
            "formatTime": [Function],
            "formatTimeToParts": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getDisplayNames": [Function],
              "getListFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralRules": [Function],
              "getRelativeTimeFormat": [Function],
            },
            "locale": "en",
            "messages": Object {},
            "onError": [Function],
            "textComponent": Symbol(react.fragment),
            "timeZone": undefined,
          }
        }
      >
        <VIEW
          style={
            Object {
              "flexDirection": "row",
              "marginBottom": "2px",
              "marginTop": "2px",
            }
          }
        >
          <VIEW
            style={
              Object {
                "marginRight": "8px",
                "width": 70,
              }
            }
          >
            <InsightsLabel
              icon={false}
              label="Known exploit"
              variant={4}
              width={75}
            >
              <VIEW
                style={
                  Object {
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                  }
                }
                width={75}
              >
                <CANVAS
                  style={
                    Object {
                      "backgroundColor": "#faeae8",
                      "borderRadius": 30,
                      "height": 20,
                      "width": 75,
                    }
                  }
                />
                <TEXT
                  style={
                    Object {
                      "color": "#7d1007",
                      "left": -65,
                      "top": 4,
                    }
                  }
                >
                  Known exploit
                </TEXT>
              </VIEW>
            </InsightsLabel>
          </VIEW>
          <VIEW
            style={
              Object {
                "marginRight": "8px",
                "width": 70,
              }
            }
          >
            <InsightsLabel
              icon={false}
              label="Security rule "
              variant={1}
              width={63}
            >
              <VIEW
                style={
                  Object {
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                  }
                }
                width={63}
              >
                <CANVAS
                  style={
                    Object {
                      "backgroundColor": "#e7f1fa",
                      "borderRadius": 30,
                      "height": 20,
                      "width": 63,
                    }
                  }
                />
                <TEXT
                  style={
                    Object {
                      "color": "#002952",
                      "left": -56,
                      "top": 4,
                    }
                  }
                >
                  Security rule 
                </TEXT>
              </VIEW>
            </InsightsLabel>
          </VIEW>
        </VIEW>
      </CVElabels>
    </Router>
  </BrowserRouter>
</Provider>
`;

exports[`CVElabels component Should match snapshot with no labels. 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <CVElabels
        intl={
          Object {
            "defaultFormats": Object {},
            "defaultLocale": "en",
            "defaultRichTextElements": undefined,
            "formatDate": [Function],
            "formatDateTimeRange": [Function],
            "formatDateToParts": [Function],
            "formatDisplayName": [Function],
            "formatList": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatNumberToParts": [Function],
            "formatPlural": [Function],
            "formatRelativeTime": [Function],
            "formatTime": [Function],
            "formatTimeToParts": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getDisplayNames": [Function],
              "getListFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralRules": [Function],
              "getRelativeTimeFormat": [Function],
            },
            "locale": "en",
            "messages": Object {},
            "onError": [Function],
            "textComponent": Symbol(react.fragment),
            "timeZone": undefined,
          }
        }
      >
        <VIEW
          style={
            Object {
              "flexDirection": "row",
              "marginBottom": "2px",
              "marginTop": "2px",
            }
          }
        />
      </CVElabels>
    </Router>
  </BrowserRouter>
</Provider>
`;
