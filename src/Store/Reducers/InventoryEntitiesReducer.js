// Initial State
export const init = {
    columns: [],
    rows: [],
    entities: []
};
// Reducer

function modifyInventory(columns, state, getSelectedFunc) {
    // If a system does not have insights_id, it means it was deleted from inventory but somehow survived in Vuln backend
    if (state.loaded) {
        const selected = getSelectedFunc();
        return {
            ...state,
            rows: state.rows.filter(item => item.insights_id).map(item => ({ ...item, selected: selected.has(item.id) })),
            columns
        };
    }

    return state;
}

function selectEntities(state, getSelectedFunc) {
    const selected = getSelectedFunc();
    const myRows = state.rows.slice();
    const retval = {
        ...state,
        rows: myRows
        .map(item => {
            const newValue =  { ...item, selected: selected.has(item.id) };
            return newValue;
        })
    };
    return retval;
}

export const inventoryEntitiesReducer = (columns, selected) => (state = init, action) => {
    switch (action.type) {
        case 'LOAD_ENTITIES_FULFILLED':
            return modifyInventory(columns, state, selected);
        case 'SELECT_MULTIPLE_ENTITIES':
            return selectEntities(state, selected);

        default:
            return state;
    }
};
