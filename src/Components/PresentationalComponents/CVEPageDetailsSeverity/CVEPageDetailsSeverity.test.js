import React from 'react';
import { shallow } from 'enzyme';
import toJson from 'enzyme-to-json';
import CVEPageDetailsSeverity from './CVEPageDetailsSeverity';

describe('CVEPageDetailsSeverity component', () => {
    it('should render without props', () => {
        const wrapper = shallow(<CVEPageDetailsSeverity />);
        expect(toJson(wrapper)).toMatchSnapshot();
    });

    it('should render where impact value is undefined', () => {
        const wrapper = shallow(<CVEPageDetailsSeverity impact={undefined} />);
        expect(toJson(wrapper)).toMatchSnapshot();
    });

    it('should render where impact value is Critial', () => {
        const wrapper = shallow(<CVEPageDetailsSeverity impact={'Critical'} />);
        expect(toJson(wrapper)).toMatchSnapshot();
    });

    it('score when CVSS2 is not defined and CVSS3 is 7.300', () => {
        const wrapper = shallow(<CVEPageDetailsSeverity cvss2_score={undefined} cvss3_score={'7.300'} />);
        expect(wrapper.instance().cvssScore).toBe('7.3');
    });

    it('score when CVSS2 is 2.500 and CVSS3 is 3.500', () => {
        const wrapper = shallow(<CVEPageDetailsSeverity cvss2_score={'2.500'} cvss3_score={'3.500'} />);
        expect(wrapper.instance().cvssScore).toBe('3.5');
    });

    it('score when CVSS2 is 4.500 and CVSS3 is undefined', () => {
        const wrapper = shallow(<CVEPageDetailsSeverity cvss2_score={'4.500'} cvss3_score={undefined} />);
        expect(wrapper.instance().cvssScore).toBe('4.5 (v2)');
    });

    it('score when CVSS2 is undefined and CVSS3 is undefined', () => {
        const wrapper = shallow(<CVEPageDetailsSeverity cvss2_score={undefined} cvss3_score={undefined} />);
        expect(wrapper.instance().cvssScore).toBe('N/A');
    });
});
