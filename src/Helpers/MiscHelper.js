import { SecurityIcon } from '@patternfly/react-icons';
import { SortByDirection } from '@patternfly/react-table';
import findIndex from 'lodash/findIndex';
import propTypes from 'prop-types';
import React from 'react';
import { impactColorList, impactList } from './constants';

export const dataShape = propTypes.shape({
    data: propTypes.oneOfType([propTypes.object, propTypes.array]),
    meta: propTypes.object,
    isLoading: propTypes.bool
});

export function constructParameters(apiProps, allowedParams) {
    if (apiProps) {
        Object.keys(apiProps).forEach(key => (apiProps[key] === undefined || apiProps[key] === '') && delete apiProps[key]);
        const params = allowedParams.map(item => apiProps[item]);

        return params;
    }

    return [];
}

export function getImpactDetails(impact) {
    if (Object.keys(impactList).includes(impact)) {
        return {
            title: impactList[impact].title,
            color: impactList[impact].color,
            text: impactList[impact].text,
            titleContent: (
                <span>
                    <SecurityIcon size="lg" />
                </span>
            )
        };
    } else {
        return {
            title: 'Unknown',
            color: impactColorList.default,
            text: '',
            titleContent: 'N/A'
        };
    }
}

export const createSortBy = (header, value) => {
    if (value) {
        let direction = value[0] === '-' ? SortByDirection.desc : SortByDirection.asc;
        value = value.replace(/^(-|\+)/, '');
        const index = findIndex(header, item => item.key === value);
        let sort = {
            index,
            direction
        };
        return sort;
    }

    return {};
};
