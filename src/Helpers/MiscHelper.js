import { SecurityIcon } from '@patternfly/react-icons';
import saveAs from 'file-saver';
import propTypes from 'prop-types';
import React from 'react';

/* global require */

export function processDate(dateString) {
    let date = new Date(dateString);
    let dateFormat = require('dateformat');
    return dateFormat(date, 'mmmm dS, yyyy');
}

export function processImpactForTable(impact) {
    let icon;
    switch (impact) {
        case 'High':
        case 'Important':
            icon = <SecurityIcon size="md" color="#ec7a08" />;
            break;
        case 'Medium':
        case 'Moderate':
            icon = <SecurityIcon size="md" color="var(--pf-global--warning-color--100)" />;
            break;
        case 'Critical':
            icon = <SecurityIcon size="md" color="var(--pf-global--danger-color--100)" />;
            break;
        case 'Low':
            icon = <SecurityIcon size="md" color="var(--pf-global--BackgroundColor--disabled)" />;
            break;
    }

    return <span>{icon}</span>;
}

export function processCvssScore(score) {
    return score || 'N/A';
}

export function truncate(str, max) {
    return str.length > max ? str.substr(0, max - 1) + '...' : str;
}

export const dataShape = propTypes.shape({
    data: propTypes.oneOfType([propTypes.object, propTypes.array]),
    meta: propTypes.object,
    isLoading: propTypes.bool
});

export function triggerFileDownload(data) {
    let blob = new Blob([data], { type: 'text/plain;charset=utf-8' });
    saveAs(blob, new Date().toISOString() + '.txt');
}
