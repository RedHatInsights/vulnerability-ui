// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CSAW Rule Box Should render with rules 1`] = `
<Fragment>
  <Card
    className="card-box-shadow"
    key="CVE_2019_11135_cpu_taa|CVE_2019_11135_CPU_TAA_KERNEL"
  >
    <CardBody>
      <Grid
        gutter="md"
      >
        <GridItem
          span={12}
        >
          <TextContent
            className="icon-with-label"
          >
            <Text
              component="h3"
            >
              <Tooltip
                appendTo={[Function]}
                aria="describedby"
                boundary="window"
                className=""
                content={
                  <FormattedMessage
                    defaultMessage="Denotes a security rule. Security rules are written by Red Hat to help you configure your systems"
                    description="Tooltip"
                    id="rules.iconTooolip"
                    values={Object {}}
                  />
                }
                distance={15}
                enableFlip={true}
                entryDelay={500}
                exitDelay={500}
                flipBehavior={
                  Array [
                    "top",
                    "right",
                    "bottom",
                    "left",
                    "top",
                    "right",
                    "bottom",
                  ]
                }
                id=""
                isAppLauncher={false}
                isContentLeftAligned={false}
                isVisible={false}
                maxWidth="18.75rem"
                position="top"
                tippyProps={Object {}}
                trigger="mouseenter focus"
                zIndex={9999}
              >
                <CSAwIcon />
              </Tooltip>
              CVE-2019-11135: "TAA" kernel side-channel
            </Text>
          </TextContent>
        </GridItem>
        <GridItem
          span={8}
        >
          <Stack
            gutter="md"
          >
            <StackItem>
              <TextContent>
                <TruncatedText
                  characterLimit={250}
                  component="p"
                  content="An issue was found in the manner in which certain x86 microprocessors manage thread memory access synchronization. It has been assigned [CVE-2019-11135](https://access.redhat.com/security/cve/CVE-2019-11135). Complete mitigations for this issue require microcode and kernel updates, and disabling hyperthreading where applicable.

An unprivileged user can use this flaw to gain read access to privileged memory that would otherwise be inacessible, including from other virtual machines on the same host system.
"
                  showLessLabel={
                    <FormattedMessage
                      defaultMessage="Read less"
                      description="Read less label for general usage"
                      id="readLess"
                      values={Object {}}
                    />
                  }
                  showMoreLabel={
                    <FormattedMessage
                      defaultMessage="Read More"
                      description="Read more generic label"
                      id="readMore"
                      values={Object {}}
                    />
                  }
                />
              </TextContent>
            </StackItem>
            <StackItem>
              <TextContent>
                <Text
                  component="h4"
                >
                   
                  <FormattedMessage
                    defaultMessage="Associated CVEs:"
                    description="Associated CVEs general label"
                    id="associatedCves"
                    values={Object {}}
                  />
                </Text>
                <Text
                  component="p"
                >
                  CVE-2019-11135
                   (
                  <FormattedMessage
                    defaultMessage="current"
                    description="Current label for general usage"
                    id="current"
                    values={Object {}}
                  />
                  )
                </Text>
              </TextContent>
            </StackItem>
            <StackItem>
              <TextContent>
                <Text
                  className="icon-with-label"
                  component="a"
                >
                  <a
                    href="https://access.redhat.com/node/4572391"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    <FormattedMessage
                      defaultMessage="Knowledgebase article"
                      description="Knowledgebase article"
                      id="knowledgebasearticle"
                      values={Object {}}
                    />
                    <ExternalLinkAltIcon
                      className="l-sm-spacer"
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                      title={null}
                    />
                  </a>
                </Text>
              </TextContent>
            </StackItem>
          </Stack>
        </GridItem>
        <GridItem
          span={4}
        >
          <Stack
            gutter="md"
          >
            <StackItem>
              <TextContent>
                <Text
                  component="a"
                  onClick={[Function]}
                >
                  <Link
                    key="CVE_2019_11135_cpu_taa|CVE_2019_11135_CPU_TAA_KERNEL"
                    replace={false}
                    to="/cves/CVE-2019-11135/?security_rule=CVE_2019_11135_cpu_taa|CVE_2019_11135_CPU_TAA_KERNEL"
                  >
                    <FormattedMessage
                      defaultMessage="Filter by affected systems"
                      description="Temporaty csaw filter"
                      id="filterByAffectedSystems"
                      values={Object {}}
                    />
                  </Link>
                </Text>
              </TextContent>
            </StackItem>
            <StackItem>
              <TextContent>
                <Text
                  component="h4"
                >
                  <FormattedMessage
                    defaultMessage="Remediation"
                    description="Remediation label for general usage "
                    id="remediation"
                    values={Object {}}
                  />
                </Text>
                <Split
                  gutter="md"
                >
                  <SplitItem>
                    <Label
                      className="label"
                    >
                      <FormattedMessage
                        defaultMessage="Ansible remediation"
                        description="label for remediating with Ansible"
                        id="ansibleRemediation"
                        values={Object {}}
                      />
                    </Label>
                  </SplitItem>
                  <SplitItem
                    className="icon-with-label"
                    isFilled={true}
                  >
                    <CheckCircleIcon
                      className="ansible-success"
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                      title={null}
                    />
                    <FormattedMessage
                      defaultMessage="Yes"
                      description="Yes general label"
                      id="yes"
                      values={Object {}}
                    />
                    <Tooltip
                      appendTo={[Function]}
                      aria="describedby"
                      boundary="window"
                      className=""
                      content={
                        <FormattedMessage
                          defaultMessage="You can create Ansible Playbooks and remediate your systems with Remediation application"
                          description="Tooltip for remediating with Ansible"
                          id="ansibleRemediationTooltip"
                          values={Object {}}
                        />
                      }
                      distance={15}
                      enableFlip={true}
                      entryDelay={500}
                      exitDelay={500}
                      flipBehavior={
                        Array [
                          "top",
                          "right",
                          "bottom",
                          "left",
                          "top",
                          "right",
                          "bottom",
                        ]
                      }
                      id=""
                      isAppLauncher={false}
                      isContentLeftAligned={false}
                      isVisible={false}
                      maxWidth="18.75rem"
                      position="top"
                      tippyProps={Object {}}
                      trigger="mouseenter focus"
                      zIndex={9999}
                    >
                      <OutlinedQuestionCircleIcon
                        className="l-sm-spacer"
                        color="var(--pf-global--secondary-color--100)"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Tooltip>
                  </SplitItem>
                </Split>
                <Split
                  gutter="md"
                >
                  <SplitItem>
                    <Label
                      className="label"
                    >
                      <FormattedMessage
                        defaultMessage="Risk of change"
                        description="Risk of change label for CVE rules"
                        id="riskOfChange"
                        values={Object {}}
                      />
                    </Label>
                  </SplitItem>
                  <SplitItem
                    className="icon-with-label"
                    isFilled={true}
                  >
                    <ExclamationTriangleIcon
                      color="var(--pf-global--warning-color--100)"
                      noVerticalAlign={false}
                      size="sm"
                      title={null}
                    />
                    Moderate
                    <Tooltip
                      appendTo={[Function]}
                      aria="describedby"
                      boundary="window"
                      className=""
                      content="These will likely require an outage window."
                      distance={15}
                      enableFlip={true}
                      entryDelay={500}
                      exitDelay={500}
                      flipBehavior={
                        Array [
                          "top",
                          "right",
                          "bottom",
                          "left",
                          "top",
                          "right",
                          "bottom",
                        ]
                      }
                      id=""
                      isAppLauncher={false}
                      isContentLeftAligned={false}
                      isVisible={false}
                      maxWidth="18.75rem"
                      position="top"
                      tippyProps={Object {}}
                      trigger="mouseenter focus"
                      zIndex={9999}
                    >
                      <OutlinedQuestionCircleIcon
                        className="l-sm-spacer"
                        color="var(--pf-global--secondary-color--100)"
                        noVerticalAlign={false}
                        size="sm"
                        title={null}
                      />
                    </Tooltip>
                    <br />
                  </SplitItem>
                </Split>
              </TextContent>
            </StackItem>
          </Stack>
        </GridItem>
      </Grid>
    </CardBody>
  </Card>
</Fragment>
`;

exports[`CSAW Rule Box Should render without rules  1`] = `<Fragment />`;
