import { Text, TextContent } from '@patternfly/react-core';
import propTypes from 'prop-types';
import React, { useState, useEffect } from 'react';

const TruncatedText = props => {
    const [isDescriptionTruncated, setDescriptionTruncated] = useState(true);
    const [isDescriptionTooLong, setDescriptionTooLong] = useState(false);
    const [shortDescription, setShortDescription] = useState('');

    const { characterLimit, showMoreLabel, showLessLabel, content: description, component } = props;

    useEffect(() => {
        if (String(description).length > characterLimit) {
            setDescriptionTooLong(true);
            setShortDescription(description.slice(0, characterLimit - 1) + 'â€¦');
        }
        else {
            setDescriptionTooLong(false);
            setDescriptionTruncated(false);
        }
    }, []);

    return (
        <TextContent>
            <Text component={component}>{isDescriptionTruncated ? shortDescription : description}</Text>
            {isDescriptionTooLong && (
                <a rel="noopener noreferrer" onClick={() => setDescriptionTruncated(!isDescriptionTruncated)}>
                    {isDescriptionTruncated ? showMoreLabel : showLessLabel}
                </a>
            )}
        </TextContent>
    );
};

TruncatedText.propTypes = {
    component: propTypes.any,
    content: propTypes.string,
    characterLimit: propTypes.number,
    showMoreLabel: propTypes.string,
    showLessLabel: propTypes.string
};

TruncatedText.defaultProps = {
    showMoreLabel: 'Show more',
    showLessLabel: 'Show less',
    characterLimit: 500
};

export default TruncatedText;
