import PaginationWrapper from './PaginationWrapper'
import { render, screen } from '@testing-library/react';
import { IntlProvider } from '@redhat-cloud-services/frontend-components-translations';
import userEvent from '@testing-library/user-event';

describe('PaginationWrapper', () => {
    const meta = {
        page: 1,
        page_size: 20,
        pages: 6,
        total_items: 138
    };

    const applyMock = jest.fn(filters => { return filters });

    it('Should render with default params', () => {
        const defaultMeta = { pages: 6 }
        const { asFragment } = render(
            <IntlProvider locale="en">
                <PaginationWrapper variant="bottom" meta={defaultMeta} apply={applyMock} />
            </IntlProvider>
        );

        expect(asFragment()).toMatchSnapshot();
    });

    it('Should change page number', () => {
        render(
            <IntlProvider locale="en">
                <PaginationWrapper variant="bottom" meta={meta} apply={applyMock} />
            </IntlProvider>
        );

        userEvent.click(screen.getByLabelText('Go to next page'));
        expect(applyMock).toHaveReturnedWith({
            'page': meta.page + 1
        });
    });

    it('Should change page size number', () => {
        render(
            <IntlProvider locale="en">
                <PaginationWrapper variant="bottom" meta={meta} apply={applyMock} />
            </IntlProvider>
        );

        userEvent.click(screen.getByLabelText('Items per page'));
        userEvent.click(screen.getByRole('menuitem', { name: '10 per page' }));

        expect(applyMock).toHaveReturnedWith({
            'page_size': 10,
            'page': 1
        });
    });
});
