// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InsightsSystemRule Should render with rule 1`] = `
<InsightsSystemRule
  rule={
    Object {
      "details": Object {
        "cmd_any": false,
        "cmdline_dict": Object {
          "BOOT_IMAGE": Array [
            "/vmlinuz-3.10.0-1062.el7.x86_64",
          ],
          "LANG": Array [
            "en_US.UTF-8",
          ],
          "console": Array [
            "ttyS0,115200n81",
          ],
          "crashkernel": Array [
            "auto",
          ],
          "rd.lvm.lv": Array [
            "rhel_sat-r220-01/root",
            "rhel_sat-r220-01/swap",
          ],
          "ro": Array [
            true,
          ],
          "root": Array [
            "/dev/mapper/rhel_sat--r220--01-root",
          ],
        },
        "cmdline_raw": "BOOT_IMAGE=/vmlinuz-3.10.0-1062.el7.x86_64 root=/dev/mapper/rhel_sat--r220--01-root ro crashkernel=auto rd.lvm.lv=rhel_sat-r220-01/root rd.lvm.lv=rhel_sat-r220-01/swap console=ttyS0,115200n81 LANG=en_US.UTF-8",
        "cves": Object {
          "CVE-2018-12126": false,
          "CVE-2018-12127": false,
          "CVE-2018-12130": false,
          "CVE-2019-11091": false,
        },
        "dmesg_wrapped": false,
        "error_key": "CVE_2018_12130_CPU_KERNEL_VULNERABLE_2",
        "rel": 7,
        "rh6nosmt": false,
        "rh6nosmt1st": false,
        "rt": false,
        "type": "rule",
        "vuln": Array [
          "Mitigation: Clear CPU buffers; SMT vulnerable",
        ],
      },
      "resolution": Object {
        "resolution": "Addressing the vulnerabilities reported by the kernel may require further steps such as disabling SMT in the system BIOS or via the kernel command line. See below for links to further documentation and tools to assist in making these changes.{{? pydata.rh6nosmt1st }}

It appears that you've tried to enable the full mitigation using the \`mds=full,nosmt\` command line argument. This RHEL6 machine might require an additional separate \`nosmt\` command line argument to disable SMT:

~~~
# grubby --update-kernel=ALL --args=nosmt
~~~
Reboot:
~~~
# reboot
~~~
{{?}}{{? pydata.dmesg_wrapped }}

The kernel ring buffer has wrapped, making some information from \`dmesg\` unreliable. See [How do I increase the kernel log ring buffer size?](https://access.redhat.com/solutions/47276) for further information. Rebooting the system may also overcome this issue.{{?}}

{{? pydata.virtualization }}**Note about virtualization**

In virtualized environment, there are more steps to mitigate the issue, including:
* Host needs to have updated kernel and CPU microcode
* Host needs to have updated virtualization software
* Guest needs to have updated kernel
* Hypervisor needs to propagate new CPU features correctly

For more details about mitigations in virtualized environment see: [https://access.redhat.com/articles/3331571](https://access.redhat.com/articles/3331571){{?}}

{{? pydata.virtualization == \\"vmware\\" }}For help with setting VMWare to propagate CPU features correctly, refer to the following knowledge-base article: [https://kb.vmware.com/s/article/52085](https://kb.vmware.com/s/article/52085){{?}}",
      },
      "rule": Object {
        "description": "CVE-2018-12126, CVE-2018-12127, CVE-2018-12130, CVE-2019-11091: \\"MDS\\" CPU side-channel reported by kernel",
        "more_info": "* For more information about the flaw, see [the vulnerability article](https://access.redhat.com/security/vulnerabilities/mds).
* For guidance in disabling hyper-threading, see the article [Reviewing and Disabling Hyper-Threading in Red Hat Enterprise Linux](https://access.redhat.com/solutions/rhel-smt).
* For information about the performance impact of disabling hyperthreading, see the **Disabling Hyper-Threading** section of the article [Performance Considerations for L1 Terminal Fault](https://access.redhat.com/security/vulnerabilities/L1TF-perf).
* Similar vulnerabilities are listed on the [CPU Side Channel Attack Index Page](https://access.redhat.com/articles/4067611).
* For information about the microcode availability, see [Is CPU Microcode available to address the CVEs?](https://access.redhat.com/articles/4138151).
* For information about detecting mitigations in hosted environments, see the article [CPU Side Channel Microcode Detection in Hosted/Cloud Environments](https://access.redhat.com/solution/CPUSideChannelMicrocode).
* To learn how to upgrade packages, see [What is yum and how do I use it?](https://access.redhat.com/solutions/9934).
* The Customer Portal page for the [Red Hat Security Team](https://access.redhat.com/security/) contains more information about policies, procedures, and alerts for Red Hat products.
* The Security Team also maintains a frequently updated blog at [securityblog.redhat.com](https://securityblog.redhat.com).
",
        "reason": "The system's kernel reports other vulnerable components as follows:

{{=pydata.vuln}}

It means:

* It has a vulnerable CPU
{{? pydata.vuln[0].indexOf(\\"Vulnerable: Clear CPU buffers attempted\\") != -1 }}* CPU microcode update is not detected
{{?}}{{? ( pydata.vuln[0].indexOf(\\"Vulnerable\\") != -1 ) && ( pydata.vuln[0].indexOf(\\"Vulnerable: Clear CPU buffers attempted\\") == -1 ) }}* MDS mitigation is disabled
{{?}}{{? pydata.vuln[0].indexOf(\\"SMT vulnerable\\") != -1 }}* SMT is vulnerable
{{?}}

{{? pydata.vuln[0].indexOf(\\"Vulnerable: Clear CPU buffers attempted\\") != -1 }}If CPU microcode update is not detected by the kernel it may be caused by either:
1. Microcode update not installed on the system or its underlying hardware in case of virtual machine
{{? pydata.virtualization }}2. Outdated virtualization software (hypervisor) on the host system
3. Virtualization software (hypervisor) on the host system not propagating new CPU features correctly
{{?}}{{?}}
",
        "rule_id": "CVE_2018_12130_cpu_kernel|CVE_2018_12130_CPU_KERNEL_VULNERABLE_2",
      },
    }
  }
>
  <TextContent
    className="icon-with-label"
  >
    <div
      className="pf-c-content icon-with-label"
    >
      <Text
        component="h3"
        style={
          Object {
            "paddingLeft": "var(--pf-global--spacer--lg)",
          }
        }
      >
        <h3
          className=""
          data-pf-content={true}
          style={
            Object {
              "paddingLeft": "var(--pf-global--spacer--lg)",
            }
          }
        >
          <Label>
            <span
              className="vuln-label undefined"
            >
              <Tooltip
                appendTo={[Function]}
                aria="describedby"
                boundary="window"
                className=""
                content={
                  <FormattedMessage
                    defaultMessage="Denotes a security rule. Security rules are written by Red Hat to help you configure your systems"
                    id="rules.iconTooolip"
                    values={Object {}}
                  />
                }
                distance={15}
                enableFlip={true}
                entryDelay={500}
                exitDelay={500}
                flipBehavior={
                  Array [
                    "top",
                    "right",
                    "bottom",
                    "left",
                    "top",
                    "right",
                    "bottom",
                  ]
                }
                id=""
                isAppLauncher={false}
                isContentLeftAligned={false}
                isVisible={false}
                maxWidth="18.75rem"
                position="top"
                tippyProps={Object {}}
                trigger="mouseenter focus"
                zIndex={9999}
              >
                <PopoverBase
                  appendTo={[Function]}
                  aria="describedby"
                  arrow={true}
                  boundary="window"
                  content={
                    <div
                      className=""
                      id=""
                      role="tooltip"
                    >
                      <TooltipContent
                        isLeftAligned={false}
                      >
                        <FormattedMessage
                          defaultMessage="Denotes a security rule. Security rules are written by Red Hat to help you configure your systems"
                          id="rules.iconTooolip"
                          values={Object {}}
                        />
                      </TooltipContent>
                    </div>
                  }
                  delay={
                    Array [
                      500,
                      500,
                    ]
                  }
                  distance={15}
                  flip={true}
                  flipBehavior={
                    Array [
                      "top",
                      "right",
                      "bottom",
                      "left",
                      "top",
                      "right",
                      "bottom",
                    ]
                  }
                  isVisible={false}
                  lazy={true}
                  maxWidth="18.75rem"
                  onCreate={[Function]}
                  placement="top"
                  popperOptions={
                    Object {
                      "modifiers": Object {
                        "hide": Object {
                          "enabled": true,
                        },
                        "preventOverflow": Object {
                          "enabled": true,
                        },
                      },
                    }
                  }
                  theme="pf-tooltip"
                  trigger="mouseenter focus"
                  zIndex={9999}
                >
                  <CSAwIcon>
                    <img
                      alt="Customer security awareness icon"
                      className="csaw-icon"
                      src="test-file-stub"
                    />
                  </CSAwIcon>
                  <Portal
                    containerInfo={
                      <div>
                        <div
                          class=""
                          id=""
                          role="tooltip"
                        >
                          <div
                            class="pf-c-tooltip__content"
                          >
                            Denotes a security rule. Security rules are written by Red Hat to help you configure your systems
                          </div>
                        </div>
                      </div>
                    }
                  >
                    <div
                      className=""
                      id=""
                      role="tooltip"
                    >
                      <TooltipContent
                        isLeftAligned={false}
                      >
                        <div
                          className="pf-c-tooltip__content"
                        >
                          <FormattedMessage
                            defaultMessage="Denotes a security rule. Security rules are written by Red Hat to help you configure your systems"
                            id="rules.iconTooolip"
                            values={Object {}}
                          >
                            Denotes a security rule. Security rules are written by Red Hat to help you configure your systems
                          </FormattedMessage>
                        </div>
                      </TooltipContent>
                    </div>
                  </Portal>
                </PopoverBase>
              </Tooltip>
            </span>
          </Label>
          <span
            className="rule-name"
          >
            CVE-2018-12126, CVE-2018-12127, CVE-2018-12130, CVE-2019-11091: "MDS" CPU side-channel reported by kernel
          </span>
        </h3>
      </Text>
    </div>
  </TextContent>
  <ReportDetails
    kbaDetail={Object {}}
    report={
      Object {
        "details": Object {
          "cmd_any": false,
          "cmdline_dict": Object {
            "BOOT_IMAGE": Array [
              "/vmlinuz-3.10.0-1062.el7.x86_64",
            ],
            "LANG": Array [
              "en_US.UTF-8",
            ],
            "console": Array [
              "ttyS0,115200n81",
            ],
            "crashkernel": Array [
              "auto",
            ],
            "rd.lvm.lv": Array [
              "rhel_sat-r220-01/root",
              "rhel_sat-r220-01/swap",
            ],
            "ro": Array [
              true,
            ],
            "root": Array [
              "/dev/mapper/rhel_sat--r220--01-root",
            ],
          },
          "cmdline_raw": "BOOT_IMAGE=/vmlinuz-3.10.0-1062.el7.x86_64 root=/dev/mapper/rhel_sat--r220--01-root ro crashkernel=auto rd.lvm.lv=rhel_sat-r220-01/root rd.lvm.lv=rhel_sat-r220-01/swap console=ttyS0,115200n81 LANG=en_US.UTF-8",
          "cves": Object {
            "CVE-2018-12126": false,
            "CVE-2018-12127": false,
            "CVE-2018-12130": false,
            "CVE-2019-11091": false,
          },
          "dmesg_wrapped": false,
          "error_key": "CVE_2018_12130_CPU_KERNEL_VULNERABLE_2",
          "rel": 7,
          "rh6nosmt": false,
          "rh6nosmt1st": false,
          "rt": false,
          "type": "rule",
          "vuln": Array [
            "Mitigation: Clear CPU buffers; SMT vulnerable",
          ],
        },
        "resolution": Object {
          "resolution": "Addressing the vulnerabilities reported by the kernel may require further steps such as disabling SMT in the system BIOS or via the kernel command line. See below for links to further documentation and tools to assist in making these changes.{{? pydata.rh6nosmt1st }}

It appears that you've tried to enable the full mitigation using the \`mds=full,nosmt\` command line argument. This RHEL6 machine might require an additional separate \`nosmt\` command line argument to disable SMT:

~~~
# grubby --update-kernel=ALL --args=nosmt
~~~
Reboot:
~~~
# reboot
~~~
{{?}}{{? pydata.dmesg_wrapped }}

The kernel ring buffer has wrapped, making some information from \`dmesg\` unreliable. See [How do I increase the kernel log ring buffer size?](https://access.redhat.com/solutions/47276) for further information. Rebooting the system may also overcome this issue.{{?}}

{{? pydata.virtualization }}**Note about virtualization**

In virtualized environment, there are more steps to mitigate the issue, including:
* Host needs to have updated kernel and CPU microcode
* Host needs to have updated virtualization software
* Guest needs to have updated kernel
* Hypervisor needs to propagate new CPU features correctly

For more details about mitigations in virtualized environment see: [https://access.redhat.com/articles/3331571](https://access.redhat.com/articles/3331571){{?}}

{{? pydata.virtualization == \\"vmware\\" }}For help with setting VMWare to propagate CPU features correctly, refer to the following knowledge-base article: [https://kb.vmware.com/s/article/52085](https://kb.vmware.com/s/article/52085){{?}}",
        },
        "rule": Object {
          "description": "CVE-2018-12126, CVE-2018-12127, CVE-2018-12130, CVE-2019-11091: \\"MDS\\" CPU side-channel reported by kernel",
          "more_info": "* For more information about the flaw, see [the vulnerability article](https://access.redhat.com/security/vulnerabilities/mds).
* For guidance in disabling hyper-threading, see the article [Reviewing and Disabling Hyper-Threading in Red Hat Enterprise Linux](https://access.redhat.com/solutions/rhel-smt).
* For information about the performance impact of disabling hyperthreading, see the **Disabling Hyper-Threading** section of the article [Performance Considerations for L1 Terminal Fault](https://access.redhat.com/security/vulnerabilities/L1TF-perf).
* Similar vulnerabilities are listed on the [CPU Side Channel Attack Index Page](https://access.redhat.com/articles/4067611).
* For information about the microcode availability, see [Is CPU Microcode available to address the CVEs?](https://access.redhat.com/articles/4138151).
* For information about detecting mitigations in hosted environments, see the article [CPU Side Channel Microcode Detection in Hosted/Cloud Environments](https://access.redhat.com/solution/CPUSideChannelMicrocode).
* To learn how to upgrade packages, see [What is yum and how do I use it?](https://access.redhat.com/solutions/9934).
* The Customer Portal page for the [Red Hat Security Team](https://access.redhat.com/security/) contains more information about policies, procedures, and alerts for Red Hat products.
* The Security Team also maintains a frequently updated blog at [securityblog.redhat.com](https://securityblog.redhat.com).
",
          "reason": "The system's kernel reports other vulnerable components as follows:

{{=pydata.vuln}}

It means:

* It has a vulnerable CPU
{{? pydata.vuln[0].indexOf(\\"Vulnerable: Clear CPU buffers attempted\\") != -1 }}* CPU microcode update is not detected
{{?}}{{? ( pydata.vuln[0].indexOf(\\"Vulnerable\\") != -1 ) && ( pydata.vuln[0].indexOf(\\"Vulnerable: Clear CPU buffers attempted\\") == -1 ) }}* MDS mitigation is disabled
{{?}}{{? pydata.vuln[0].indexOf(\\"SMT vulnerable\\") != -1 }}* SMT is vulnerable
{{?}}

{{? pydata.vuln[0].indexOf(\\"Vulnerable: Clear CPU buffers attempted\\") != -1 }}If CPU microcode update is not detected by the kernel it may be caused by either:
1. Microcode update not installed on the system or its underlying hardware in case of virtual machine
{{? pydata.virtualization }}2. Outdated virtualization software (hypervisor) on the host system
3. Virtualization software (hypervisor) on the host system not propagating new CPU features correctly
{{?}}{{?}}
",
          "rule_id": "CVE_2018_12130_cpu_kernel|CVE_2018_12130_CPU_KERNEL_VULNERABLE_2",
        },
      }
    }
  >
    <Card
      style={
        Object {
          "boxShadow": "none",
        }
      }
    >
      <article
        className="pf-c-card"
        style={
          Object {
            "boxShadow": "none",
          }
        }
      >
        <CardBody>
          <div
            className="pf-c-card__body"
          >
            <Stack
              className="ins-c-inventory-advisor__card ins-c-rules-card"
              gutter="md"
              widget-type="InsightsRulesCard"
            >
              <div
                className="pf-l-stack pf-m-gutter ins-c-inventory-advisor__card ins-c-rules-card"
                widget-type="InsightsRulesCard"
              >
                <StackItem>
                  <div
                    className="pf-l-stack__item"
                  >
                    <Card
                      className="ins-m-card__flat"
                    >
                      <article
                        className="pf-c-card ins-m-card__flat"
                      >
                        <CardHeader>
                          <div
                            className="pf-c-card__header pf-c-title pf-m-md"
                          >
                            <BullseyeIcon
                              color="currentColor"
                              noVerticalAlign={false}
                              size="sm"
                              title={null}
                            >
                              <svg
                                aria-hidden={true}
                                aria-labelledby={null}
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style={
                                  Object {
                                    "verticalAlign": "-0.125em",
                                  }
                                }
                                viewBox="0 0 496 512"
                                width="1em"
                              >
                                <path
                                  d="M248 8C111.03 8 0 119.03 0 256s111.03 248 248 248 248-111.03 248-248S384.97 8 248 8zm0 432c-101.69 0-184-82.29-184-184 0-101.69 82.29-184 184-184 101.69 0 184 82.29 184 184 0 101.69-82.29 184-184 184zm0-312c-70.69 0-128 57.31-128 128s57.31 128 128 128 128-57.31 128-128-57.31-128-128-128zm0 192c-35.29 0-64-28.71-64-64s28.71-64 64-64 64 28.71 64 64-28.71 64-64 64z"
                                  transform=""
                                />
                              </svg>
                            </BullseyeIcon>
                            <strong>
                               Detected issues
                            </strong>
                          </div>
                        </CardHeader>
                        <CardBody>
                          <div
                            className="pf-c-card__body"
                          >
                            <div
                              dangerouslySetInnerHTML={
                                Object {
                                  "__html": "<p>The system&#39;s kernel reports other vulnerable components as follows:</p>
<p>Mitigation: Clear CPU buffers; SMT vulnerable</p>
<p>It means:</p>
<ul class=\\"pf-c-list\\" style=\\"font-size: inherit\\">
<li>It has a vulnerable CPU</li>
<li>SMT is vulnerable</li>
</ul>
",
                                }
                              }
                            />
                          </div>
                        </CardBody>
                      </article>
                    </Card>
                  </div>
                </StackItem>
                <StackItem>
                  <div
                    className="pf-l-stack__item"
                  >
                    <Card
                      className="ins-m-card__flat"
                    >
                      <article
                        className="pf-c-card ins-m-card__flat"
                      >
                        <CardHeader>
                          <div
                            className="pf-c-card__header pf-c-title pf-m-md"
                          >
                            <ThumbsUpIcon
                              color="currentColor"
                              noVerticalAlign={false}
                              size="sm"
                              title={null}
                            >
                              <svg
                                aria-hidden={true}
                                aria-labelledby={null}
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style={
                                  Object {
                                    "verticalAlign": "-0.125em",
                                  }
                                }
                                viewBox="0 0 512 512"
                                width="1em"
                              >
                                <path
                                  d="M104 224H24c-13.255 0-24 10.745-24 24v240c0 13.255 10.745 24 24 24h80c13.255 0 24-10.745 24-24V248c0-13.255-10.745-24-24-24zM64 472c-13.255 0-24-10.745-24-24s10.745-24 24-24 24 10.745 24 24-10.745 24-24 24zM384 81.452c0 42.416-25.97 66.208-33.277 94.548h101.723c33.397 0 59.397 27.746 59.553 58.098.084 17.938-7.546 37.249-19.439 49.197l-.11.11c9.836 23.337 8.237 56.037-9.308 79.469 8.681 25.895-.069 57.704-16.382 74.757 4.298 17.598 2.244 32.575-6.148 44.632C440.202 511.587 389.616 512 346.839 512l-2.845-.001c-48.287-.017-87.806-17.598-119.56-31.725-15.957-7.099-36.821-15.887-52.651-16.178-6.54-.12-11.783-5.457-11.783-11.998v-213.77c0-3.2 1.282-6.271 3.558-8.521 39.614-39.144 56.648-80.587 89.117-113.111 14.804-14.832 20.188-37.236 25.393-58.902C282.515 39.293 291.817 0 312 0c24 0 72 8 72 81.452z"
                                  transform=""
                                />
                              </svg>
                            </ThumbsUpIcon>
                            <strong>
                               Steps to resolve
                            </strong>
                          </div>
                        </CardHeader>
                        <CardBody>
                          <div
                            className="pf-c-card__body"
                          >
                            <div
                              dangerouslySetInnerHTML={
                                Object {
                                  "__html": "<p>Addressing the vulnerabilities reported by the kernel may require further steps such as disabling SMT in the system BIOS or via the kernel command line. See below for links to further documentation and tools to assist in making these changes.</p>
",
                                }
                              }
                            />
                          </div>
                        </CardBody>
                      </article>
                    </Card>
                  </div>
                </StackItem>
                <StackItem>
                  <div
                    className="pf-l-stack__item"
                  >
                    <Card
                      className="ins-m-card__flat"
                    >
                      <article
                        className="pf-c-card ins-m-card__flat"
                      >
                        <CardHeader>
                          <div
                            className="pf-c-card__header pf-c-title pf-m-md"
                          >
                            <LightbulbIcon
                              color="currentColor"
                              noVerticalAlign={false}
                              size="sm"
                              title={null}
                            >
                              <svg
                                aria-hidden={true}
                                aria-labelledby={null}
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style={
                                  Object {
                                    "verticalAlign": "-0.125em",
                                  }
                                }
                                viewBox="0 0 352 512"
                                width="1em"
                              >
                                <path
                                  d="M96.06 454.35c.01 6.29 1.87 12.45 5.36 17.69l17.09 25.69a31.99 31.99 0 0 0 26.64 14.28h61.71a31.99 31.99 0 0 0 26.64-14.28l17.09-25.69a31.989 31.989 0 0 0 5.36-17.69l.04-38.35H96.01l.05 38.35zM0 176c0 44.37 16.45 84.85 43.56 115.78 16.52 18.85 42.36 58.23 52.21 91.45.04.26.07.52.11.78h160.24c.04-.26.07-.51.11-.78 9.85-33.22 35.69-72.6 52.21-91.45C335.55 260.85 352 220.37 352 176 352 78.61 272.91-.3 175.45 0 73.44.31 0 82.97 0 176zm176-80c-44.11 0-80 35.89-80 80 0 8.84-7.16 16-16 16s-16-7.16-16-16c0-61.76 50.24-112 112-112 8.84 0 16 7.16 16 16s-7.16 16-16 16z"
                                  transform=""
                                />
                              </svg>
                            </LightbulbIcon>
                            <strong>
                               Related Knowledgebase article 
                            </strong>
                          </div>
                        </CardHeader>
                        <CardBody>
                          <div
                            className="pf-c-card__body"
                          >
                            No related Knowledgebase article.
                          </div>
                        </CardBody>
                      </article>
                    </Card>
                  </div>
                </StackItem>
                <StackItem>
                  <div
                    className="pf-l-stack__item"
                  >
                    <Card
                      className="ins-m-card__flat"
                    >
                      <article
                        className="pf-c-card ins-m-card__flat"
                      >
                        <CardHeader>
                          <div
                            className="pf-c-card__header pf-c-title pf-m-md"
                          >
                            <InfoCircleIcon
                              color="currentColor"
                              noVerticalAlign={false}
                              size="sm"
                              title={null}
                            >
                              <svg
                                aria-hidden={true}
                                aria-labelledby={null}
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style={
                                  Object {
                                    "verticalAlign": "-0.125em",
                                  }
                                }
                                viewBox="0 0 512 512"
                                width="1em"
                              >
                                <path
                                  d="M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z"
                                  transform=""
                                />
                              </svg>
                            </InfoCircleIcon>
                            <strong>
                               Additional info 
                            </strong>
                          </div>
                        </CardHeader>
                        <CardBody>
                          <div
                            className="pf-c-card__body"
                          >
                            <div
                              dangerouslySetInnerHTML={
                                Object {
                                  "__html": "<ul class=\\"pf-c-list\\" style=\\"font-size: inherit\\">
<li>For more information about the flaw, see <a href=\\"https://access.redhat.com/security/vulnerabilities/mds\\">the vulnerability article </a>.</li>
<li>For guidance in disabling hyper-threading, see the article <a href=\\"https://access.redhat.com/solutions/rhel-smt\\">Reviewing and Disabling Hyper-Threading in Red Hat Enterprise Linux </a>.</li>
<li>For information about the performance impact of disabling hyperthreading, see the <strong>Disabling Hyper-Threading</strong> section of the article <a href=\\"https://access.redhat.com/security/vulnerabilities/L1TF-perf\\">Performance Considerations for L1 Terminal Fault </a>.</li>
<li>Similar vulnerabilities are listed on the <a href=\\"https://access.redhat.com/articles/4067611\\">CPU Side Channel Attack Index Page </a>.</li>
<li>For information about the microcode availability, see <a href=\\"https://access.redhat.com/articles/4138151\\">Is CPU Microcode available to address the CVEs? </a>.</li>
<li>For information about detecting mitigations in hosted environments, see the article <a href=\\"https://access.redhat.com/solution/CPUSideChannelMicrocode\\">CPU Side Channel Microcode Detection in Hosted/Cloud Environments </a>.</li>
<li>To learn how to upgrade packages, see <a href=\\"https://access.redhat.com/solutions/9934\\">What is yum and how do I use it? </a>.</li>
<li>The Customer Portal page for the <a href=\\"https://access.redhat.com/security/\\">Red Hat Security Team </a> contains more information about policies, procedures, and alerts for Red Hat products.</li>
<li>The Security Team also maintains a frequently updated blog at <a href=\\"https://securityblog.redhat.com\\">securityblog.redhat.com </a>.</li>
</ul>
",
                                }
                              }
                            />
                          </div>
                        </CardBody>
                      </article>
                    </Card>
                  </div>
                </StackItem>
              </div>
            </Stack>
          </div>
        </CardBody>
      </article>
    </Card>
  </ReportDetails>
</InsightsSystemRule>
`;

exports[`InsightsSystemRule Should render without rule  1`] = `
<Fragment>
  <InsightsNoSystemRule />
</Fragment>
`;
