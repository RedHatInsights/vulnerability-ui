import React from 'react';
import PropTypes from 'prop-types';
import {
    Text,
    TextContent,
    TextVariants,
    SplitItem,
    Split,
    Card,
    CardBody,
    ExpandableSection
} from '@patternfly/react-core';
import { useDispatch } from 'react-redux';
import { InsightsLink } from '@redhat-cloud-services/frontend-components/InsightsLink';
import { useIntl } from 'react-intl';
import messages from '../../../Messages';
import './CSAwRuleBox.scss';
import NotVulnerableLabel from '../Snippets/NotVulnerableLabel';
import { changeExposedSystemsParameters } from '../../../Store/Actions/Actions';
import { ONLY_NON_VULNERABLE_SYSTEMS } from '../../../Helpers/constants';

const NotVulnerableBox = ({ synopsis, notVulnerableSystemCount }) => {
    const dispatch = useDispatch();
    const intl = useIntl();

    const handleExposedSystemFilter = () => {
        dispatch(changeExposedSystemsParameters({ rule: ONLY_NON_VULNERABLE_SYSTEMS }));
    };

    return (
        notVulnerableSystemCount > 0 &&
        <Card className="card-box" ouiaId="not-vulnerable-box">
            <ExpandableSection toggleText={
                <Split>
                    <SplitItem className="pf-u-mr-xl">
                        <TextContent>
                            <Text component={TextVariants.h4}>
                                <NotVulnerableLabel className="pf-u-mr-sm" />
                                {intl.formatMessage(messages.notVulnerableBoxTitle)}
                            </Text>
                        </TextContent>
                    </SplitItem>
                    <SplitItem id="filter-affected-systems-split">
                        <TextContent>
                            <Text
                                id="filter-affected-systems"
                                onClick={event => {
                                    handleExposedSystemFilter();
                                    event.stopPropagation();
                                }}
                                component={TextVariants.small}
                            >
                                <InsightsLink
                                    to={`/cves/${synopsis}`}
                                >
                                    {
                                        intl.formatMessage(
                                            messages.filterByAffectedSystems,
                                            {
                                                count: notVulnerableSystemCount
                                            }
                                        )
                                    }
                                </InsightsLink>
                            </Text>
                        </TextContent>
                    </SplitItem>
                </Split>
            }>
                <CardBody className="rule-card-body">
                    {intl.formatMessage(messages.notVulnerableDescription, { multiple: true })}
                </CardBody>
            </ExpandableSection>
        </Card>
    );
};

NotVulnerableBox.propTypes = {
    synopsis: PropTypes.string,
    notVulnerableSystemCount: PropTypes.number
};

export default NotVulnerableBox;
