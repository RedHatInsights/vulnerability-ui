import React, { Suspense, Fragment, lazy } from 'react';
import propTypes from 'prop-types';
import AsynComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';
import { useParams } from 'react-router-dom';
import useFeatureFlag from '../../../Utilities/useFeatureFlag';
import { useContext } from 'react';
import { AccountStatContext } from '../../../Utilities/VulnerabilityRoutes';
const ImmutableDevices = lazy(() =>
    import(
        /* webpackChunkName: "ImmutableDevices" */ './ImmutableDevicesTab/ImmutableDevices'
    )
);

const SystemsExposedTable = lazy(() =>
    import(
        /* webpackChunkName: "SystemsExposedTable" */ '../SystemsExposedTable/SystemsExposedTable'
    )
);

const HybridInventory = (props) => {
    const { cve } = useParams();
    const isEdgeParityEnabled = useFeatureFlag('vulnerability.edge_parity');
    const { hasConventionalSystems, hasEdgeDevices } = useContext(AccountStatContext);

    return (
        <AsynComponent
            key="hybridInventory"
            appName="inventory"
            module="./HybridInventoryTabs"
            ConventionalSystemsTab={<Suspense fallback={Fragment}>
                <SystemsExposedTable {...props} />
            </Suspense>}
            ImmutableDevicesTab={<Suspense fallback={Fragment}>
                <ImmutableDevices {...props} />
            </Suspense>}
            tabPathname={`/insights/vulnerability/cves/${cve}`}
            isImmutableTabOpen={props.isImmutableTabOpen}
            fallback={<div />}
            columns
            isEdgeParityEnabled={isEdgeParityEnabled}
            hasConventionalSystems={hasConventionalSystems}
            accountHasEdgeImages={hasEdgeDevices}
        />
    );
};

HybridInventory.propTypes = {
    isImmutableTabOpen: propTypes.bool
};

export default HybridInventory;
