import PaginationWrapper from './PaginationWrapper'
import toJson from 'enzyme-to-json';
import { mountWithIntl } from '../../../Helpers/MiscHelper';

describe('PaginationWrapper', () => {

    const meta = {
        page: 1,
        page_size: 20,
        pages: 6,
        total_items: 138
    }

    const applyMock = jest.fn(filters => { return filters });

    it('Should render with default params', () => {
        const defaultMeta = { pages: 6 }
        const wrapper = mountWithIntl(<PaginationWrapper variant="bottom" meta={defaultMeta} apply={applyMock} />);
        expect(toJson(wrapper)).toMatchSnapshot();
    })

    it('Should change page number', () => {
        const wrapper = mountWithIntl(<PaginationWrapper variant="bottom" meta={meta} apply={applyMock} />);

        const nextButton = wrapper.find('[data-action="next"]').first();
        nextButton.simulate('click');
        expect(applyMock).toHaveReturnedWith({
            'page': meta.page + 1
        })
    })

    it('Should change page size number', () => {
        const wrapper = mountWithIntl(<PaginationWrapper variant="bottom" meta={meta} apply={applyMock} />);
        wrapper.find('button').first().simulate('click');
        wrapper.find('[data-action="per-page-10"]').first().simulate('click');

        expect(applyMock).toHaveReturnedWith({
            'page_size': 10,
            'page': 1
        })
    })
})
