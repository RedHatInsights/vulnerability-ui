/* eslint-disable no-unused-vars */
/* eslint-disable no-console */
import { Spinner } from '@patternfly/react-core';
import useSort from './useSort';

import React, { useState, useEffect } from 'react';

const filterRows = (columns, rows) => (
    rows?.map(({ ...row }) => {
        row.cells = row.cells.filter(row => columns.some(header => header.props.column === row.props.column));
        return row;
    })
);

const useTable = ({ initialColumns, initialRows }) => {
    const [columns, setColumns] = useState(initialColumns);
    const [rows, setRows] = useState(initialRows);

    const onChangeColumns = (columns) => {
        const rowsFiltered = filterRows(columns, rows);

        setColumns(columns);
        setRows(rowsFiltered);
    };

    return [
        columns,
        rows,
        setRows,
        onChangeColumns
    ];

};

export default useTable;
