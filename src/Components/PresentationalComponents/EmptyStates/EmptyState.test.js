import { 
    EmptyStateNoCVEs,
    EmptyStateNoSystems,
    EmptyStateExcludedSystem
} from './EmptyStates'
import { IntlProvider } from '@redhat-cloud-services/frontend-components-translations';
import toJson from 'enzyme-to-json';
import messages from '../../../Messages'

describe('Empty states', () => {
    it('should render EmptyStateNoCVEs', () => {
        const wrapper = mount(<IntlProvider locale="en"><EmptyStateNoCVEs secondParagraph={messages.emptyStateThereShouldBeCVEs}/></IntlProvider>);
        expect(toJson(wrapper)).toMatchSnapshot();

        const link = wrapper.find('a')
        expect(link.prop('href')).toBe('https://access.redhat.com/security/team/contact/')
    })

    it('should render EmptyStateNoSystems', () => {
        const wrapper = mount(<IntlProvider locale="en"><EmptyStateNoSystems /></IntlProvider>);
        expect(toJson(wrapper)).toMatchSnapshot();
    })

    it('should render EmptyStateExcludedSystem', () => {
        const mockAction = jest.fn();
        const wrapper = mount(<IntlProvider locale="en"><EmptyStateExcludedSystem buttonAction={mockAction} /></IntlProvider>);
        expect(toJson(wrapper)).toMatchSnapshot();

        const link = wrapper.find('a').simulate('click')
        expect(mockAction).toHaveBeenCalled()
    })
})
