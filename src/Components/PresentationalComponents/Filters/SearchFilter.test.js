import SearchFilter from './SearchFilter'

describe('SearchFilter', () => {
    const placeholder = "search by name";
    jest.useFakeTimers();
      
    it('Should render with initial value', () => {
        const applyMock = jest.fn(value => { return value });
        const initialValue = 'Initial search Value'
        const searchFilter = mount(<SearchFilter apply={applyMock} placeholder={placeholder} value={initialValue} />);
        const { value } = searchFilter.find('ConditionalFilter TextInputBase').props()
       
        expect(value).toBe(initialValue)
    })

    it('Should change search value', () => {
        const applyMock = jest.fn(value => { return value });
        const initialValue = 'Initial search Value';
        const changedValue = 'change the value';

        const searchFilter = mount(<SearchFilter apply={applyMock} placeholder={placeholder} value={initialValue} />);

        const conditionalFilter = searchFilter.find('ConditionalFilter TextInputBase')
        conditionalFilter.simulate('change', { target: { value: changedValue } });;
        jest.setTimeout(400); // 4 second
        
        const { value } = searchFilter.find('ConditionalFilter TextInputBase').props()
       
        expect(value).toBe(changedValue)

    })
})
