import { Stack, StackItem, Text, TextContent, TextVariants, Flex, FlexItem } from '@patternfly/react-core';
import propTypes from 'prop-types';
import React from 'react';
import { injectIntl } from 'react-intl';
import messages from '../../../Messages';
import { CVEPageContext } from '../../SmartComponents/CVEDetailsPage/CVEDetailsPage';
import WithLoader, { LoaderType } from '../WithLoader/WithLoader';
import { NoDescriptionAvailable } from '../EmptyStates/EmptyStates';

const CVEDetailsPageDescription = ({ cveAttributes, intl }) => {
    const {
        public_date: publishDate,
        description,
        rh_link: link
    } = cveAttributes;
    const hasDescription = description !== 'No description is available for this CVE.';

    return (
        <CVEPageContext.Consumer>
            {context =>
                <Stack hasGutter>
                    {
                        hasDescription && (
                            <StackItem className="pf-u-mt-sm">
                                <Flex>
                                    <FlexItem>{intl.formatMessage(messages.publishDate)}:</FlexItem>
                                    <FlexItem grow={{ default: 'grow' }}>
                                        <WithLoader
                                            isLoading={context.isLoading}
                                            variant={LoaderType.inlineSkeleton}
                                            size="sm"
                                        >
                                            {publishDate}
                                        </WithLoader>
                                    </FlexItem>
                                </Flex>
                            </StackItem>
                        )
                    }
                    <StackItem>
                        <WithLoader
                            isLoading={context.isLoading}
                            variant={LoaderType.rectangle}
                            style={{ height: '132px', width: '100%' }}
                        >
                            {
                                hasDescription ? (
                                    <TextContent style={{ textAlign: 'justify' }}>
                                        <Text component={TextVariants.p}>{description}</Text>
                                    </TextContent>
                                ) : <NoDescriptionAvailable/>
                            }
                        </WithLoader>
                    </StackItem>
                    <StackItem className="pf-u-mt-sm pf-u-mb-md">
                        {link}
                    </StackItem>
                </Stack>
            }
        </CVEPageContext.Consumer>

    );
};

CVEDetailsPageDescription.propTypes = {
    cveAttributes: propTypes.any,
    intl: propTypes.any
};

export default injectIntl(CVEDetailsPageDescription);
