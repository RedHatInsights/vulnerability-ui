import React, { Fragment } from 'react';
import PropTypes from 'prop-types';
import {
    Section,
    Column,
    Chart,
    Table,
    Panel,
    PanelItem,
    InsightsLabel
} from '@redhat-cloud-services/frontend-components-pdf-generator';

import { Text } from '@react-pdf/renderer';
import { truncate } from 'lodash';

import styles from '../Common/styles';
import messages from '../../../../Messages';

const ThirdPage = ({ data, intl }) => {

    const rulesDesc = (rule, associatedCves) => (
        <Fragment>
            <Text style={styles.mb8}> {truncate(rule, { length: 300 })}</Text>
            <Text >
                {intl.formatMessage(messages.associatedCves)} {associatedCves.map(cves => cves).join(', ')}
            </Text>
        </Fragment>
    );

    const { topRules, rulesHeader, rulesBySeverityMap, rulesChart } = data;

    return (
        <Fragment key="first-section">
            <Text style={styles.header}>{intl.formatMessage(messages.rules)}</Text>
            <Section
                titleProps={{ style: styles.sectionTitle }}
                title={intl.formatMessage(messages.executiveReportRulesSection)}
            >
                <Column>
                    <Table
                        withHeader
                        rows={[
                            rulesHeader,
                            ...rulesBySeverityMap
                        ]}
                    />
                </Column>
                <Column>
                    <Chart
                        chartType="bar"
                        subTitle="rules"
                        title="Rules"
                        data={rulesChart}
                        colorSchema="orange"
                        legend={false}
                    />
                </Column>
            </Section>
            <Section
                titleProps={{ style: styles.sectionTitle }}
                title={intl.formatMessage(messages.executiveReportTop3Rules)} withColumn={false}
            >
                {
                    topRules.map((rule, key) => (
                        <Panel
                            key={key}
                            title={rule.name}
                            description={rulesDesc(rule.description, rule.associated_cves)}
                        >
                            <PanelItem title={intl.formatMessage(messages.executiveReportRulePanelTitle)}>
                                <InsightsLabel variant={rule.severity}/>
                            </PanelItem>
                            <PanelItem title={intl.formatMessage(messages.systemsExposed)}>
                                {rule.systems_affected.toString()}
                            </PanelItem>
                        </Panel>
                    ))

                }
            </Section>
        </Fragment>
    );
};

ThirdPage.propTypes = {
    data: PropTypes.exact({
        topRules: PropTypes.array,
        rulesHeader: PropTypes.array,
        rulesBySeverityMap: PropTypes.array,
        rulesChart: PropTypes.array
    }),
    intl: PropTypes.any
};

export default ThirdPage;
