/* eslint-disable camelcase */

import { Pagination, PaginationVariant } from '@patternfly/react-core';
import propTypes from 'prop-types';
import React, { Component } from 'react';
import { DEFAULT_PAGE_SIZE } from '../../../Helpers/constants';

class PaginationWrapper extends Component {
    static propTypes = {
        apply: propTypes.func,
        meta: propTypes.object,
        variant: propTypes.string
    };

    static defaultProps = {
        variant: 'top'
    };
    shouldComponentUpdate(nextProps) {
        if (nextProps.meta === this.props.meta) {
            return false;
        }

        return true;
    }
    handleChangePage = (_event, pageNumber) => this.props.apply({ page: pageNumber });

    handleSetPageSize = (_event, perPage) => this.props.apply({ page_size: perPage, page: 1 });

    render() {
        const { meta, variant } = this.props;
        const { page, total_items, page_size } = meta;
        return (
            <React.Fragment>
                <Pagination
                    page={page || 1}
                    itemCount={total_items || 0}
                    perPage={page_size || DEFAULT_PAGE_SIZE}
                    onSetPage={this.handleChangePage}
                    onPerPageSelect={this.handleSetPageSize}
                    variant={PaginationVariant[variant]}
                />
            </React.Fragment>
        );
    }
}

export default PaginationWrapper;
