import React,  { useState } from 'react';
import { Page, Grid, GridItem, Card, CardTitle, CardBody, CardFooter } from '@patternfly/react-core';
import { Main } from '@redhat-cloud-services/frontend-components';
import VulnerabilityHeader from '../VulnerabilityHeader/VulnerabilityHeader';
import { FileAltIcon } from '@patternfly/react-icons';
import DownloadExecutive from './DownloadExecutive';
import ReportConfigModal from '../Modals/ReportConfigModal';
import messages from '../../../Messages';
import { intl } from '../../../Utilities/IntlProvider';
import { ChartPieSolid } from '../../PresentationalComponents/CustomIcons/CustomIcons';

const ReportsPage = () => {
    const [isModalOpen, setModalOpen] = useState(false);

    return (
        <Page>
            <VulnerabilityHeader title={intl.formatMessage(messages.reportsPageTitle)} showBreadcrumb={false}/>
            <Main>
                <Grid hasGutter>
                    <GridItem span={3}>
                        <Card>
                            <CardTitle>
                                <ChartPieSolid />
                                <span className="pf-u-ml-sm" style={{ verticalAlign: '0.3rem' }}>
                                    {intl.formatMessage(messages.executiveReportCardTitle)}
                                </span>
                            </CardTitle>
                            <CardBody>
                                {intl.formatMessage(messages.executiveReportCardDescription)}
                            </CardBody>
                            <CardFooter>
                                <DownloadExecutive/>
                            </CardFooter>
                        </Card>
                    </GridItem>
                    <GridItem span={3}>
                        <Card>
                            <CardTitle>
                                <FileAltIcon size="lg" color="var(--pf-global--link--Color)"/>
                                <span className="pf-u-ml-sm" style={{ verticalAlign: '0.3rem' }}>
                                    {intl.formatMessage(messages.customReportCardTitle)}
                                </span>
                            </CardTitle>
                            <CardBody>
                                {intl.formatMessage(messages.customReportCardDescription)}
                            </CardBody>
                            <CardFooter>
                                <a onClick={() => setModalOpen(true)}>{intl.formatMessage(messages.customReportCardButton)}</a>
                            </CardFooter>
                        </Card>
                    </GridItem>
                </Grid>
            </Main>
            <ReportConfigModal isOpen={isModalOpen} onClose={() => setModalOpen(false)}/>
        </Page>
    );
};

export default ReportsPage;
