import { conditionalFilterType } from '@redhat-cloud-services/frontend-components';
import { intl } from '../../../../Utilities/IntlProvider';
import messages from '../../../../Messages';
import CustomReportFilter from '../../../SmartComponents/Reports/CustomReportFilter';
import React from 'react';
import debounce from 'lodash/debounce';

const CvssBaseScoreFilter = (apply, currentFilter = {}) => {
    const [searchValue, setSearchValue] = React.useState();
    const [handleSearch] = React.useState(() =>
        debounce(({ cvss_filter: cvss }) => {
            if (+cvss.from >= 0 && +cvss.to <= 10 && +cvss.from <= +cvss.to) {
                apply({ cvss_from: cvss.from, cvss_to: cvss.to, page: 1 });
            }
        }, 600)
    );

    React.useEffect(() => setSearchValue(
        { from: currentFilter.cvss_from || 0.0, to: currentFilter.cvss_to || 10.0 }
    ), [currentFilter]);

    const filterByCvssRange = values => {
        setSearchValue({ from: values.cvss_filter.from, to: values.cvss_filter.to });
        handleSearch(values);
    };

    return {
        label: intl.formatMessage(messages.cvssBaseScore),
        type: conditionalFilterType.custom,
        urlParam: 'cvss_filter',
        filterValues: {
            children: (<CustomReportFilter
                key={'cvss_filter'}
                filterName={'cvss_filter'}
                filterData={{ cvss_filter: searchValue }}
                setFilterData={filterByCvssRange}
                className={'pf-u-mb-0'}
                selectProps={{ placeholderText: intl.formatMessage(messages.searchFilterCvssRange) }}
            />)
        }
    };
};

export default CvssBaseScoreFilter;
