import CSAwRuleSummary from './CSAwRuleSummary'
import { render, screen } from '@testing-library/react';
import { IntlProvider } from '@redhat-cloud-services/frontend-components-translations';

describe('CSAW Rule summary', () => {
    const text = `An issue was found in the manner in which certain x86 microprocessors manage thread memory access synchronization. It has been assigned [CVE-2019-11135](https://access.redhat.com/security/cve/CVE-2019-11135). Complete mitigations for this issue require microcode and kernel updates, and disabling hyperthreading where applicable.↵↵An unprivileged user can use this flaw to gain read access to privileged memory that would otherwise be inacessible, including from other virtual machines on the same host system.↵`
    it('should render compenent', () => {
        const { asFragment } = render(
            <IntlProvider locale="en">
                <CSAwRuleSummary text={text} />
            </IntlProvider>
        );
        expect(asFragment()).toMatchSnapshot();
    })

    it('should render truncated text', () => {
        render(
            <IntlProvider locale="en">
                <CSAwRuleSummary truncate text={text} />
            </IntlProvider>
        );

        expect(screen.getAllByText('Read more')).toHaveLength(1);
    })

    it('should render whole text', () => {
        render(
            <IntlProvider locale="en">
                <CSAwRuleSummary truncate={false} text={text} />
            </IntlProvider>
        );

        expect(screen.queryAllByText('Read more')).toHaveLength(0);
    })
});
