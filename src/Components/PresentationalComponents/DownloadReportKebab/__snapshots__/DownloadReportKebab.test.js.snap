// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DownloadReportKebab component Should render without params 1`] = `
<DownloadReportKebab>
  <div>
    <BaseKebab
      dropdownItems={
        Array [
          <DropdownItem
            component="button"
            onClick={[Function]}
          >
            <FormattedMessage
              defaultMessage="Export as JSON"
              description="Kebab item"
              id="kebab.exportAsJson"
              values={Object {}}
            />
          </DropdownItem>,
          <DropdownItem
            component="button"
            onClick={[Function]}
          >
            <FormattedMessage
              defaultMessage="Export as CSV"
              description="Kebab item"
              id="kebab.exportAsCsv"
              values={Object {}}
            />
          </DropdownItem>,
        ]
      }
    >
      <div>
        <Dropdown
          dropdownItems={
            Array [
              <DropdownItem
                component="button"
                onClick={[Function]}
              >
                <FormattedMessage
                  defaultMessage="Export as JSON"
                  description="Kebab item"
                  id="kebab.exportAsJson"
                  values={Object {}}
                />
              </DropdownItem>,
              <DropdownItem
                component="button"
                onClick={[Function]}
              >
                <FormattedMessage
                  defaultMessage="Export as CSV"
                  description="Kebab item"
                  id="kebab.exportAsCsv"
                  values={Object {}}
                />
              </DropdownItem>,
            ]
          }
          isOpen={false}
          isPlain={true}
          onSelect={[Function]}
          toggle={
            <KebabToggle
              onToggle={[Function]}
            />
          }
        >
          <Component
            dropdownItems={
              Array [
                <DropdownItem
                  component="button"
                  onClick={[Function]}
                >
                  <FormattedMessage
                    defaultMessage="Export as JSON"
                    description="Kebab item"
                    id="kebab.exportAsJson"
                    values={Object {}}
                  />
                </DropdownItem>,
                <DropdownItem
                  component="button"
                  onClick={[Function]}
                >
                  <FormattedMessage
                    defaultMessage="Export as CSV"
                    description="Kebab item"
                    id="kebab.exportAsCsv"
                    values={Object {}}
                  />
                </DropdownItem>,
              ]
            }
            isOpen={false}
            isPlain={true}
            toggle={
              <KebabToggle
                onToggle={[Function]}
              />
            }
          >
            <ComponentWithOuia
              component={[Function]}
              componentProps={
                Object {
                  "dropdownItems": Array [
                    <DropdownItem
                      component="button"
                      onClick={[Function]}
                    >
                      <FormattedMessage
                        defaultMessage="Export as JSON"
                        description="Kebab item"
                        id="kebab.exportAsJson"
                        values={Object {}}
                      />
                    </DropdownItem>,
                    <DropdownItem
                      component="button"
                      onClick={[Function]}
                    >
                      <FormattedMessage
                        defaultMessage="Export as CSV"
                        description="Kebab item"
                        id="kebab.exportAsCsv"
                        values={Object {}}
                      />
                    </DropdownItem>,
                  ],
                  "isOpen": false,
                  "isPlain": true,
                  "toggle": <KebabToggle
                    onToggle={[Function]}
                  />,
                }
              }
              consumerContext={null}
            >
              <DropdownWithContext
                autoFocus={true}
                className=""
                direction="down"
                dropdownItems={
                  Array [
                    <DropdownItem
                      component="button"
                      onClick={[Function]}
                    >
                      <FormattedMessage
                        defaultMessage="Export as JSON"
                        description="Kebab item"
                        id="kebab.exportAsJson"
                        values={Object {}}
                      />
                    </DropdownItem>,
                    <DropdownItem
                      component="button"
                      onClick={[Function]}
                    >
                      <FormattedMessage
                        defaultMessage="Export as CSV"
                        description="Kebab item"
                        id="kebab.exportAsCsv"
                        values={Object {}}
                      />
                    </DropdownItem>,
                  ]
                }
                isGrouped={false}
                isOpen={false}
                isPlain={true}
                onSelect={[Function]}
                ouiaComponentType="Dropdown"
                ouiaContext={
                  Object {
                    "isOuia": false,
                    "ouiaId": null,
                  }
                }
                position="left"
                toggle={
                  <KebabToggle
                    onToggle={[Function]}
                  />
                }
              >
                <div
                  className="pf-c-dropdown"
                >
                  <KebabToggle
                    ariaHasPopup={true}
                    id="pf-toggle-id-0"
                    isOpen={false}
                    isPlain={true}
                    key=".0"
                    onEnter={[Function]}
                    onToggle={[Function]}
                    parentRef={
                      Object {
                        "current": <div
                          class="pf-c-dropdown"
                        >
                          <button
                            aria-expanded="false"
                            aria-haspopup="true"
                            aria-label="Actions"
                            class="pf-c-dropdown__toggle pf-m-plain"
                            id="pf-toggle-id-0"
                            type="button"
                          >
                            <svg
                              aria-hidden="true"
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style="vertical-align: -0.125em;"
                              viewBox="0 0 192 512"
                              width="1em"
                            >
                              <path
                                d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                transform=""
                              />
                            </svg>
                          </button>
                        </div>,
                      }
                    }
                  >
                    <Toggle
                      aria-label="Actions"
                      ariaHasPopup={true}
                      className=""
                      id="pf-toggle-id-0"
                      isActive={false}
                      isDisabled={false}
                      isFocused={false}
                      isHovered={false}
                      isOpen={false}
                      isPlain={true}
                      isPrimary={false}
                      isSplitButton={false}
                      onEnter={[Function]}
                      onToggle={[Function]}
                      parentRef={
                        Object {
                          "current": <div
                            class="pf-c-dropdown"
                          >
                            <button
                              aria-expanded="false"
                              aria-haspopup="true"
                              aria-label="Actions"
                              class="pf-c-dropdown__toggle pf-m-plain"
                              id="pf-toggle-id-0"
                              type="button"
                            >
                              <svg
                                aria-hidden="true"
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style="vertical-align: -0.125em;"
                                viewBox="0 0 192 512"
                                width="1em"
                              >
                                <path
                                  d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                  transform=""
                                />
                              </svg>
                            </button>
                          </div>,
                        }
                      }
                    >
                      <button
                        aria-expanded={false}
                        aria-haspopup={true}
                        aria-label="Actions"
                        className="pf-c-dropdown__toggle pf-m-plain"
                        disabled={false}
                        id="pf-toggle-id-0"
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        type="button"
                      >
                        <EllipsisVIcon
                          color="currentColor"
                          noVerticalAlign={false}
                          size="sm"
                          title={null}
                        >
                          <svg
                            aria-hidden={true}
                            aria-labelledby={null}
                            fill="currentColor"
                            height="1em"
                            role="img"
                            style={
                              Object {
                                "verticalAlign": "-0.125em",
                              }
                            }
                            viewBox="0 0 192 512"
                            width="1em"
                          >
                            <path
                              d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                              transform=""
                            />
                          </svg>
                        </EllipsisVIcon>
                      </button>
                    </Toggle>
                  </KebabToggle>
                </div>
              </DropdownWithContext>
            </ComponentWithOuia>
          </Component>
        </Dropdown>
      </div>
    </BaseKebab>
  </div>
</DownloadReportKebab>
`;
