import React from 'react';
import propTypes from 'prop-types';
import { connect } from 'react-redux';
import { withRouter } from 'react-router-dom';
import { ConnectedSystemCves } from '../SystemCves/SystemCves';
import { EmptyStateExcludedSystem } from '../../PresentationalComponents/EmptyStates/EmptyStates';

const SystemDetails = ({ entity, isOptOut, optOutSystemHandler, loaded }) => {
    return entity && loaded && isOptOut ? (
        <EmptyStateExcludedSystem buttonAction={() => optOutSystemHandler(false)} />
    ) : (
        <ConnectedSystemCves
            entity={{ id: entity?.id, display_name: entity?.display_name }}
            allowedCveActions={['EDIT_STATUS', 'REMEDIATE']}
            showHeaderLabel
            setPageTitle
        />
    );
};

SystemDetails.propTypes = {
    entity: propTypes.object,
    isOptOut: propTypes.bool,
    loaded: propTypes.bool,
    optOutSystemHandler: propTypes.func
};

function mapStateToProps({ entityDetails: { entity, opt_out: isOptOut, loaded } }) {
    return {
        entity,
        isOptOut,
        loaded
    };
}

export default withRouter(
    connect(
        mapStateToProps,
        null
    )(SystemDetails)
);
