import { Pagination, PaginationVariant } from '@patternfly/react-core';
import TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';

import propTypes from 'prop-types';
import React from 'react';
import { DEFAULT_PAGE_SIZE } from '../../../Helpers/constants';

const PaginationWrapper = ({ apply, meta, variant }) => {
    const { page, total_items: totalItems, page_size: pageSize } = meta;

    const handleChangePage = (_event, pageNumber) => apply({ page: pageNumber });
    const handleSetPageSize = (_event, perPage) => apply({ page_size: perPage, page: 1 });

    return (
        <TableToolbar isFooter>
            <Pagination
                page={page || 1}
                itemCount={totalItems || 0}
                perPage={pageSize || DEFAULT_PAGE_SIZE}
                onSetPage={handleChangePage}
                onPerPageSelect={handleSetPageSize}
                variant={PaginationVariant[variant]}
                ouiaId={'pagination-'.concat(PaginationVariant[variant])}
                isDisabled={!totalItems}
            />
        </TableToolbar>
    );
};

PaginationWrapper.defaultProps = {
    variant: 'bottom'
};

PaginationWrapper.propTypes = {
    apply: propTypes.func.isRequired,
    meta: propTypes.object.isRequired,
    variant: propTypes.string
};

export default PaginationWrapper;
