import { createIntl, createIntlCache } from 'react-intl';
import messages from '../../../Messages';

const cache = createIntlCache();
const locale = navigator.language;
const intl = createIntl({
    // eslint-disable-next-line no-console
    onError: console.log,
    locale
}, cache);

export const V3names = {
    AV: {
        name: intl.formatMessage(messages.vectorNamesV3AV),
        values: {
            N: intl.formatMessage(messages.vectorValuesNetwork),
            A: intl.formatMessage(messages.vectorValuesAdjacent),
            L: intl.formatMessage(messages.vectorValuesLocal),
            P: intl.formatMessage(messages.vectorValuesPhysical)
        }
    },
    AC: {
        name: intl.formatMessage(messages.vectorNamesV3AC),
        values: {
            L: intl.formatMessage(messages.vectorValuesLow),
            H: intl.formatMessage(messages.vectorValuesHigh)
        }
    },
    PR: {
        name: intl.formatMessage(messages.vectorNamesV3PR),
        values: {
            N: intl.formatMessage(messages.vectorValuesNone),
            L: intl.formatMessage(messages.vectorValuesLow),
            H: intl.formatMessage(messages.vectorValuesHigh)
        }
    },
    UI: {
        name: intl.formatMessage(messages.vectorNamesV3UI),
        values: {
            N: intl.formatMessage(messages.vectorValuesNone),
            R: intl.formatMessage(messages.vectorValuesRequired)
        }
    },
    S: {
        name: intl.formatMessage(messages.vectorNamesV3S),
        values: {
            U: intl.formatMessage(messages.vectorValuesUnchanged),
            C: intl.formatMessage(messages.vectorValuesChanged)
        }
    },
    C: {
        name: intl.formatMessage(messages.vectorNamesV3C),
        values: {
            N: intl.formatMessage(messages.vectorValuesNone),
            L: intl.formatMessage(messages.vectorValuesLow),
            H: intl.formatMessage(messages.vectorValuesHigh)
        }
    },
    I: {
        name: intl.formatMessage(messages.vectorNamesV3I),
        values: {
            N: intl.formatMessage(messages.vectorValuesNone),
            L: intl.formatMessage(messages.vectorValuesLow),
            H: intl.formatMessage(messages.vectorValuesHigh)
        }
    },
    A: {
        name: intl.formatMessage(messages.vectorNamesV3A),
        values: {
            N: intl.formatMessage(messages.vectorValuesNone),
            L: intl.formatMessage(messages.vectorValuesLow),
            H: intl.formatMessage(messages.vectorValuesHigh)
        }
    },
    CVSS: {
        name: intl.formatMessage(messages.vectorNamesCvssVersion),
        values: {
            '3.0': 3.0
        }
    }
};

export const V2names = {
    AV: {
        name: intl.formatMessage(messages.vectorNamesV2AV),
        values: {
            N: intl.formatMessage(messages.vectorValuesNetwork),
            A: intl.formatMessage(messages.vectorValuesAdjacentNetwork),
            L: intl.formatMessage(messages.vectorValuesLocal)
        }
    },
    AC: {
        name: intl.formatMessage(messages.vectorNamesV2AC),
        values: {
            N: intl.formatMessage(messages.vectorValuesNone),
            L: intl.formatMessage(messages.vectorValuesLow),
            H: intl.formatMessage(messages.vectorValuesHigh)
        }
    },
    Au: {
        name: intl.formatMessage(messages.vectorNamesV2AU),
        values: {
            M: intl.formatMessage(messages.vectorValuesMultiple),
            S: intl.formatMessage(messages.vectorValuesSingle),
            N: intl.formatMessage(messages.vectorValuesNone)
        }
    },
    C: {
        name: intl.formatMessage(messages.vectorNamesV2C),
        values: {
            C: intl.formatMessage(messages.vectorValuesComplete),
            P: intl.formatMessage(messages.vectorValuesPartial),
            N: intl.formatMessage(messages.vectorValuesNone)
        }
    },
    I: {
        name: intl.formatMessage(messages.vectorNamesV2I),
        values: {
            C: intl.formatMessage(messages.vectorValuesComplete),
            P: intl.formatMessage(messages.vectorValuesPartial),
            N: intl.formatMessage(messages.vectorValuesNone)
        }
    },
    A: {
        name: intl.formatMessage(messages.vectorNamesV2A),
        values: {
            C: intl.formatMessage(messages.vectorValuesComplete),
            P: intl.formatMessage(messages.vectorValuesPartial),
            N: intl.formatMessage(messages.vectorValuesNone)
        }
    }
};
