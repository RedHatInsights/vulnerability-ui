import React from 'react';
import PropTypes from 'prop-types';
import { FormattedMessage } from 'react-intl';
import { intl } from '../../../Utilities/IntlProvider';
import { Text, TextContent, TextVariants, Stack, StackItem } from '@patternfly/react-core';
import Label from '../Snippets/Label';
import CSAwLabel from '../Snippets/CSAwLabel';
import CSAwRuleSummary from '../CSAwRuleBox/CSAwRuleSummary';
import messages from '../../../Messages';
import { handleCVELink } from '../../../Helpers/VulnerabilityHelper';

const CVETableExpandedCell = ({ description, rules, cve }) => {
    return (
        <TextContent className="expanded-cell">
            <Label className="pf-u-mb-sm"><FormattedMessage {...messages.description} /></Label>
            <Text component={TextVariants.p}>{description}</Text>
            <Stack hasGutter>
                {rules && rules.map((rule, i) => (
                    rule && (
                        <div key={i} className="rule">
                            <CSAwLabel className="pf-u-mr-sm"/>
                            <Label isInline>
                                <span className="rule-name">{rule.description || rule.rule_id}</span>
                            </Label>
                            <CSAwRuleSummary
                                text={rule.summary}
                                truncate={false}
                                className="pf-u-mt-xs"
                            />
                        </div>
                    )
                ))}
                <StackItem className="rule-link">
                    {handleCVELink(cve, intl.formatMessage(messages.viewMoreAboutThisCve))}
                </StackItem>
            </Stack>
        </TextContent>
    );

};

CVETableExpandedCell.propTypes = {
    description: PropTypes.string,
    rules: PropTypes.array,
    cve: PropTypes.string
};

export default CVETableExpandedCell;
