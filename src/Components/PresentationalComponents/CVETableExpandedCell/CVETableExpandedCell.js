import React, { Fragment } from 'react';
import PropTypes from 'prop-types';
import { FormattedMessage } from 'react-intl';
import { Text, TextContent, TextVariants, Tooltip } from '@patternfly/react-core';
import Label from '../Snippets/Label';
import { Link } from 'react-router-dom';
import { CSAwIcon } from '../CSAwIcon/CSAwIcon';
import messages from '../../../Messages';

const CVETableExpandedCell = ({ description, rules, cve }) => {
    const ruleIconTooltip = <FormattedMessage {...messages.rulesIconTooltip} />;

    return (
        <TextContent>
            <Label>{<FormattedMessage {...messages.description} />}</Label>
            <Text component={TextVariants.p}>{description}</Text>

            {rules && rules.map((rule, i) => (
                rule && (
                    <Fragment key={i}>
                        <Text className={'icon-with-label'} component={TextVariants.p}>
                            <Label className={'icon-with-label'}>
                                <Tooltip content={ruleIconTooltip}>
                                    <CSAwIcon />
                                </Tooltip>
                                {rule.description || rule.rule_id}
                            </Label>
                        </Text>
                        <Text component={TextVariants.p}>
                            {rule.summary}
                        </Text>
                        <Text component={TextVariants.p}>
                            <Link to={`/cves/${cve}`}>{<FormattedMessage {...messages.readMore} />}</Link>
                        </Text>

                    </Fragment>
                )
            ))}
        </TextContent>
    );

};

CVETableExpandedCell.propTypes = {
    description: PropTypes.string,
    rules: PropTypes.array,
    cve: PropTypes.string
};

export default CVETableExpandedCell;
