// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CVEDetailsPageSummary component should render with data 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <CVEDetailsPageSummary
        data={
          Object {
            "data": Object {
              "data": Object {
                "cvss3_score": "7.000",
                "description": "Lorem ipsum",
                "impact": "Important",
                "mitre_link": Object {
                  "_owner": null,
                  "_store": Object {},
                  "key": null,
                  "props": Object {
                    "children": "MITRE Database",
                    "href": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-6454",
                  },
                  "ref": null,
                  "type": "a",
                },
                "package_list": Array [
                  Object {
                    "_owner": null,
                    "_store": Object {},
                    "key": "systemd-resolved-219-62.el7_6.5.i686",
                    "props": Object {
                      "children": "systemd-resolved-219-62.el7_6.5.i686",
                    },
                    "ref": null,
                    "type": "li",
                  },
                  Object {
                    "_owner": null,
                    "_store": Object {},
                    "key": "systemd-resolved-219-62.el7_6.5.x86_64",
                    "props": Object {
                      "children": "systemd-resolved-219-62.el7_6.5.x86_64",
                    },
                    "ref": null,
                    "type": "li",
                  },
                  Object {
                    "_owner": null,
                    "_store": Object {},
                    "key": "systemd-devel-219-62.el7_6.5.ppc",
                    "props": Object {
                      "children": "systemd-devel-219-62.el7_6.5.ppc",
                    },
                    "ref": null,
                    "type": "li",
                  },
                ],
                "public_date": "February 18th, 2019",
                "rh_link": Object {
                  "_owner": null,
                  "_store": Object {},
                  "key": null,
                  "props": Object {
                    "children": "Red Hat CVE Database",
                    "href": "https://access.redhat.com/security/cve/CVE-2019-6454",
                  },
                  "ref": null,
                  "type": "a",
                },
                "synopsis": "CVE-2019-6454",
              },
              "isLoading": false,
              "meta": Object {},
            },
          }
        }
      >
        <Grid
          hasGutter={true}
        >
          <div
            className="pf-l-grid pf-m-gutter"
          >
            <GridItem
              md={8}
              sm={12}
            >
              <div
                className="pf-l-grid__item pf-m-12-col-on-sm pf-m-8-col-on-md"
              >
                <WithLoader
                  loading={true}
                  variant="spinner"
                >
                  <Spinner
                    centered={true}
                  >
                    <div
                      className="ins-c-spinner ins-m-center"
                      role="status"
                    >
                      <span
                        className="pf-u-screen-reader"
                      >
                        Loading...
                      </span>
                    </div>
                  </Spinner>
                </WithLoader>
              </div>
            </GridItem>
            <GridItem
              className="pf-u-mt-sm pf-u-ml-sm"
              md={4}
              sm={12}
            >
              <div
                className="pf-l-grid__item pf-m-12-col-on-sm pf-m-4-col-on-md pf-u-mt-sm pf-u-ml-sm"
              >
                <injectIntl(CVEDetailsPageSidebar)
                  cveAttributes={
                    Object {
                      "data": Object {
                        "cvss3_score": "7.000",
                        "description": "Lorem ipsum",
                        "impact": "Important",
                        "mitre_link": Object {
                          "_owner": null,
                          "_store": Object {},
                          "key": null,
                          "props": Object {
                            "children": "MITRE Database",
                            "href": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-6454",
                          },
                          "ref": null,
                          "type": "a",
                        },
                        "package_list": Array [
                          Object {
                            "_owner": null,
                            "_store": Object {},
                            "key": "systemd-resolved-219-62.el7_6.5.i686",
                            "props": Object {
                              "children": "systemd-resolved-219-62.el7_6.5.i686",
                            },
                            "ref": null,
                            "type": "li",
                          },
                          Object {
                            "_owner": null,
                            "_store": Object {},
                            "key": "systemd-resolved-219-62.el7_6.5.x86_64",
                            "props": Object {
                              "children": "systemd-resolved-219-62.el7_6.5.x86_64",
                            },
                            "ref": null,
                            "type": "li",
                          },
                          Object {
                            "_owner": null,
                            "_store": Object {},
                            "key": "systemd-devel-219-62.el7_6.5.ppc",
                            "props": Object {
                              "children": "systemd-devel-219-62.el7_6.5.ppc",
                            },
                            "ref": null,
                            "type": "li",
                          },
                        ],
                        "public_date": "February 18th, 2019",
                        "rh_link": Object {
                          "_owner": null,
                          "_store": Object {},
                          "key": null,
                          "props": Object {
                            "children": "Red Hat CVE Database",
                            "href": "https://access.redhat.com/security/cve/CVE-2019-6454",
                          },
                          "ref": null,
                          "type": "a",
                        },
                        "synopsis": "CVE-2019-6454",
                      },
                      "isLoading": false,
                      "meta": Object {},
                    }
                  }
                >
                  <CVEDetailsPageSidebar
                    cveAttributes={
                      Object {
                        "data": Object {
                          "cvss3_score": "7.000",
                          "description": "Lorem ipsum",
                          "impact": "Important",
                          "mitre_link": Object {
                            "_owner": null,
                            "_store": Object {},
                            "key": null,
                            "props": Object {
                              "children": "MITRE Database",
                              "href": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-6454",
                            },
                            "ref": null,
                            "type": "a",
                          },
                          "package_list": Array [
                            Object {
                              "_owner": null,
                              "_store": Object {},
                              "key": "systemd-resolved-219-62.el7_6.5.i686",
                              "props": Object {
                                "children": "systemd-resolved-219-62.el7_6.5.i686",
                              },
                              "ref": null,
                              "type": "li",
                            },
                            Object {
                              "_owner": null,
                              "_store": Object {},
                              "key": "systemd-resolved-219-62.el7_6.5.x86_64",
                              "props": Object {
                                "children": "systemd-resolved-219-62.el7_6.5.x86_64",
                              },
                              "ref": null,
                              "type": "li",
                            },
                            Object {
                              "_owner": null,
                              "_store": Object {},
                              "key": "systemd-devel-219-62.el7_6.5.ppc",
                              "props": Object {
                                "children": "systemd-devel-219-62.el7_6.5.ppc",
                              },
                              "ref": null,
                              "type": "li",
                            },
                          ],
                          "public_date": "February 18th, 2019",
                          "rh_link": Object {
                            "_owner": null,
                            "_store": Object {},
                            "key": null,
                            "props": Object {
                              "children": "Red Hat CVE Database",
                              "href": "https://access.redhat.com/security/cve/CVE-2019-6454",
                            },
                            "ref": null,
                            "type": "a",
                          },
                          "synopsis": "CVE-2019-6454",
                        },
                        "isLoading": false,
                        "meta": Object {},
                      }
                    }
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "defaultRichTextElements": undefined,
                        "formatDate": [Function],
                        "formatDateTimeRange": [Function],
                        "formatDateToParts": [Function],
                        "formatDisplayName": [Function],
                        "formatList": [Function],
                        "formatListToParts": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatNumberToParts": [Function],
                        "formatPlural": [Function],
                        "formatRelativeTime": [Function],
                        "formatTime": [Function],
                        "formatTimeToParts": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getDisplayNames": [Function],
                          "getListFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralRules": [Function],
                          "getRelativeTimeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {
                          "default.cancel": "Cancel",
                          "default.delete": "Delete",
                          "default.remove": "Remove",
                          "default.save": "Save",
                        },
                        "onError": [Function],
                        "textComponent": Symbol(react.fragment),
                        "timeZone": undefined,
                        "wrapRichTextChunksInFragment": undefined,
                      }
                    }
                  >
                    <Stack
                      hasGutter={true}
                    >
                      <div
                        className="pf-l-stack pf-m-gutter"
                      >
                        <StackItem>
                          <div
                            className="pf-l-stack__item"
                          >
                            <Split
                              hasGutter={true}
                            >
                              <div
                                className="pf-l-split pf-m-gutter"
                              >
                                <SplitItem>
                                  <div
                                    className="pf-l-split__item"
                                  >
                                    <SnippetWithHeaderAndPopover
                                      content={
                                        <Stack
                                          className="pf-u-p-xs"
                                        >
                                          <StackItem>
                                            <Label
                                              className="pf-u-mb-xs"
                                            >
                                              Justification note
                                            </Label>
                                          </StackItem>
                                          <StackItem>
                                            --
                                          </StackItem>
                                        </Stack>
                                      }
                                      title="Business risk"
                                    >
                                      <Popover
                                        appendTo={null}
                                        aria-label="Business risk popover"
                                        bodyContent={
                                          <Stack
                                            className="pf-u-p-xs"
                                          >
                                            <StackItem>
                                              <Label
                                                className="pf-u-mb-xs"
                                              >
                                                Justification note
                                              </Label>
                                            </StackItem>
                                            <StackItem>
                                              --
                                            </StackItem>
                                          </Stack>
                                        }
                                        headerContent=""
                                        id="popover"
                                        position="right"
                                      >
                                        <Popper
                                          appendTo={null}
                                          distance={25}
                                          enableFlip={true}
                                          flipBehavior={
                                            Array [
                                              "top",
                                              "right",
                                              "bottom",
                                              "left",
                                              "top",
                                              "right",
                                              "bottom",
                                            ]
                                          }
                                          isVisible={false}
                                          onDocumentClick={[Function]}
                                          onDocumentKeyDown={[Function]}
                                          onTriggerClick={[Function]}
                                          onTriggerEnter={[Function]}
                                          placement="right"
                                          popper={
                                            <FocusTrap
                                              active={false}
                                              aria-describedby="popover-popover-body"
                                              aria-label="Business risk popover"
                                              aria-modal="true"
                                              className="pf-c-popover"
                                              focusTrapOptions={
                                                Object {
                                                  "clickOutsideDeactivates": true,
                                                  "fallbackFocus": [Function],
                                                  "returnFocusOnDeactivate": true,
                                                }
                                              }
                                              onMouseDown={[Function]}
                                              paused={false}
                                              preventScrollOnDeactivate={true}
                                              role="dialog"
                                              style={
                                                Object {
                                                  "maxWidth": null,
                                                  "minWidth": null,
                                                  "opacity": 0,
                                                  "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                                }
                                              }
                                            >
                                              <PopoverArrow />
                                              <PopoverContent>
                                                <PopoverCloseButton
                                                  aria-label="Close"
                                                  onClose={[Function]}
                                                />
                                                
                                                <PopoverBody
                                                  id="popover-popover-body"
                                                >
                                                  <Stack
                                                    className="pf-u-p-xs"
                                                  >
                                                    <StackItem>
                                                      <Label
                                                        className="pf-u-mb-xs"
                                                      >
                                                        Justification note
                                                      </Label>
                                                    </StackItem>
                                                    <StackItem>
                                                      --
                                                    </StackItem>
                                                  </Stack>
                                                </PopoverBody>
                                              </PopoverContent>
                                            </FocusTrap>
                                          }
                                          popperMatchesTriggerWidth={false}
                                          positionModifiers={
                                            Object {
                                              "bottom": "pf-m-bottom",
                                              "left": "pf-m-left",
                                              "right": "pf-m-right",
                                              "top": "pf-m-top",
                                            }
                                          }
                                          trigger={
                                            <Stack
                                              className="popover-content"
                                            >
                                              <StackItem>
                                                <Label
                                                  isLarge={true}
                                                >
                                                  Business risk
                                                </Label>
                                              </StackItem>
                                              <StackItem>
                                                <a />
                                              </StackItem>
                                            </Stack>
                                          }
                                          zIndex={9999}
                                        >
                                          <FindRefWrapper
                                            onFoundRef={[Function]}
                                          >
                                            <Stack
                                              className="popover-content"
                                            >
                                              <div
                                                className="pf-l-stack popover-content"
                                              >
                                                <StackItem>
                                                  <div
                                                    className="pf-l-stack__item"
                                                  >
                                                    <Label
                                                      isLarge={true}
                                                    >
                                                      <span
                                                        className="vuln-label "
                                                        style={
                                                          Object {
                                                            "display": "block",
                                                            "fontSize": "medium",
                                                          }
                                                        }
                                                      >
                                                        Business risk
                                                      </span>
                                                    </Label>
                                                  </div>
                                                </StackItem>
                                                <StackItem>
                                                  <div
                                                    className="pf-l-stack__item"
                                                  >
                                                    <a />
                                                  </div>
                                                </StackItem>
                                              </div>
                                            </Stack>
                                          </FindRefWrapper>
                                        </Popper>
                                      </Popover>
                                    </SnippetWithHeaderAndPopover>
                                  </div>
                                </SplitItem>
                                <SplitItem
                                  className="pf-u-ml-lg"
                                >
                                  <div
                                    className="pf-l-split__item pf-u-ml-lg"
                                  >
                                    <SnippetWithHeaderAndPopover
                                      content={
                                        <Stack
                                          className="pf-u-p-xs"
                                        >
                                          <StackItem>
                                            <Label
                                              className="pf-u-mb-xs"
                                            >
                                              CVE status
                                            </Label>
                                            --
                                            <Label
                                              className="pf-u-mb-xs pf-u-mt-sm"
                                            >
                                              Justification note
                                            </Label>
                                            --
                                          </StackItem>
                                        </Stack>
                                      }
                                      title="Status"
                                      value={
                                        <span>
                                           
                                        </span>
                                      }
                                    >
                                      <Popover
                                        appendTo={null}
                                        aria-label="Business risk popover"
                                        bodyContent={
                                          <Stack
                                            className="pf-u-p-xs"
                                          >
                                            <StackItem>
                                              <Label
                                                className="pf-u-mb-xs"
                                              >
                                                CVE status
                                              </Label>
                                              --
                                              <Label
                                                className="pf-u-mb-xs pf-u-mt-sm"
                                              >
                                                Justification note
                                              </Label>
                                              --
                                            </StackItem>
                                          </Stack>
                                        }
                                        headerContent=""
                                        id="popover"
                                        position="right"
                                      >
                                        <Popper
                                          appendTo={null}
                                          distance={25}
                                          enableFlip={true}
                                          flipBehavior={
                                            Array [
                                              "top",
                                              "right",
                                              "bottom",
                                              "left",
                                              "top",
                                              "right",
                                              "bottom",
                                            ]
                                          }
                                          isVisible={false}
                                          onDocumentClick={[Function]}
                                          onDocumentKeyDown={[Function]}
                                          onTriggerClick={[Function]}
                                          onTriggerEnter={[Function]}
                                          placement="right"
                                          popper={
                                            <FocusTrap
                                              active={false}
                                              aria-describedby="popover-popover-body"
                                              aria-label="Business risk popover"
                                              aria-modal="true"
                                              className="pf-c-popover"
                                              focusTrapOptions={
                                                Object {
                                                  "clickOutsideDeactivates": true,
                                                  "fallbackFocus": [Function],
                                                  "returnFocusOnDeactivate": true,
                                                }
                                              }
                                              onMouseDown={[Function]}
                                              paused={false}
                                              preventScrollOnDeactivate={true}
                                              role="dialog"
                                              style={
                                                Object {
                                                  "maxWidth": null,
                                                  "minWidth": null,
                                                  "opacity": 0,
                                                  "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                                }
                                              }
                                            >
                                              <PopoverArrow />
                                              <PopoverContent>
                                                <PopoverCloseButton
                                                  aria-label="Close"
                                                  onClose={[Function]}
                                                />
                                                
                                                <PopoverBody
                                                  id="popover-popover-body"
                                                >
                                                  <Stack
                                                    className="pf-u-p-xs"
                                                  >
                                                    <StackItem>
                                                      <Label
                                                        className="pf-u-mb-xs"
                                                      >
                                                        CVE status
                                                      </Label>
                                                      --
                                                      <Label
                                                        className="pf-u-mb-xs pf-u-mt-sm"
                                                      >
                                                        Justification note
                                                      </Label>
                                                      --
                                                    </StackItem>
                                                  </Stack>
                                                </PopoverBody>
                                              </PopoverContent>
                                            </FocusTrap>
                                          }
                                          popperMatchesTriggerWidth={false}
                                          positionModifiers={
                                            Object {
                                              "bottom": "pf-m-bottom",
                                              "left": "pf-m-left",
                                              "right": "pf-m-right",
                                              "top": "pf-m-top",
                                            }
                                          }
                                          trigger={
                                            <Stack
                                              className="popover-content"
                                            >
                                              <StackItem>
                                                <Label
                                                  isLarge={true}
                                                >
                                                  Status
                                                </Label>
                                              </StackItem>
                                              <StackItem>
                                                <a>
                                                  <span>
                                                     
                                                  </span>
                                                </a>
                                              </StackItem>
                                            </Stack>
                                          }
                                          zIndex={9999}
                                        >
                                          <FindRefWrapper
                                            onFoundRef={[Function]}
                                          >
                                            <Stack
                                              className="popover-content"
                                            >
                                              <div
                                                className="pf-l-stack popover-content"
                                              >
                                                <StackItem>
                                                  <div
                                                    className="pf-l-stack__item"
                                                  >
                                                    <Label
                                                      isLarge={true}
                                                    >
                                                      <span
                                                        className="vuln-label "
                                                        style={
                                                          Object {
                                                            "display": "block",
                                                            "fontSize": "medium",
                                                          }
                                                        }
                                                      >
                                                        Status
                                                      </span>
                                                    </Label>
                                                  </div>
                                                </StackItem>
                                                <StackItem>
                                                  <div
                                                    className="pf-l-stack__item"
                                                  >
                                                    <a>
                                                      <span>
                                                         
                                                      </span>
                                                    </a>
                                                  </div>
                                                </StackItem>
                                              </div>
                                            </Stack>
                                          </FindRefWrapper>
                                        </Popper>
                                      </Popover>
                                    </SnippetWithHeaderAndPopover>
                                  </div>
                                </SplitItem>
                              </div>
                            </Split>
                          </div>
                        </StackItem>
                        <StackItem>
                          <div
                            className="pf-l-stack__item"
                          >
                            <Label
                              className="pf-u-mb-xs"
                              isLarge={true}
                            >
                              <span
                                className="vuln-label pf-u-mb-xs"
                                style={
                                  Object {
                                    "display": "block",
                                    "fontSize": "medium",
                                  }
                                }
                              >
                                Severity
                              </span>
                            </Label>
                            <span
                              id="severity-shield"
                              style={
                                Object {
                                  "color": "black",
                                }
                              }
                            >
                              <Shield
                                hasLabel={true}
                                hasTooltip={true}
                                impact="Unknown"
                                size="sm"
                              >
                                <span>
                                  <Tooltip
                                    content={<div />}
                                    position="bottom"
                                  >
                                    <Popper
                                      appendTo={[Function]}
                                      distance={15}
                                      enableFlip={true}
                                      flipBehavior={
                                        Array [
                                          "top",
                                          "right",
                                          "bottom",
                                          "left",
                                          "top",
                                          "right",
                                          "bottom",
                                        ]
                                      }
                                      isVisible={false}
                                      onBlur={[Function]}
                                      onDocumentClick={false}
                                      onDocumentKeyDown={[Function]}
                                      onFocus={[Function]}
                                      onMouseEnter={[Function]}
                                      onMouseLeave={[Function]}
                                      onTriggerEnter={[Function]}
                                      placement="bottom"
                                      popper={
                                        <div
                                          className="pf-c-tooltip"
                                          id="pf-tooltip-4"
                                          role="tooltip"
                                          style={
                                            Object {
                                              "maxWidth": null,
                                              "opacity": 0,
                                              "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                            }
                                          }
                                        >
                                          <TooltipArrow />
                                          <TooltipContent
                                            isLeftAligned={false}
                                          >
                                            <div />
                                          </TooltipContent>
                                        </div>
                                      }
                                      popperMatchesTriggerWidth={false}
                                      positionModifiers={
                                        Object {
                                          "bottom": "pf-m-bottom",
                                          "left": "pf-m-left",
                                          "right": "pf-m-right",
                                          "top": "pf-m-top",
                                        }
                                      }
                                      trigger={
                                        <span>
                                          <QuestionIcon
                                            aria-hidden="false"
                                            aria-label="Unknown"
                                            color="#737679"
                                            noVerticalAlign={false}
                                            size="sm"
                                          />
                                           
                                          Unknown
                                        </span>
                                      }
                                      zIndex={9999}
                                    >
                                      <FindRefWrapper
                                        onFoundRef={[Function]}
                                      >
                                        <span>
                                          <QuestionIcon
                                            aria-hidden="false"
                                            aria-label="Unknown"
                                            color="#737679"
                                            noVerticalAlign={false}
                                            size="sm"
                                          >
                                            <svg
                                              aria-hidden="false"
                                              aria-label="Unknown"
                                              aria-labelledby={null}
                                              fill="#737679"
                                              height="1em"
                                              role="img"
                                              style={
                                                Object {
                                                  "verticalAlign": "-0.125em",
                                                }
                                              }
                                              viewBox="0 0 384 512"
                                              width="1em"
                                            >
                                              <path
                                                d="M202.021 0C122.202 0 70.503 32.703 29.914 91.026c-7.363 10.58-5.093 25.086 5.178 32.874l43.138 32.709c10.373 7.865 25.132 6.026 33.253-4.148 25.049-31.381 43.63-49.449 82.757-49.449 30.764 0 68.816 19.799 68.816 49.631 0 22.552-18.617 34.134-48.993 51.164-35.423 19.86-82.299 44.576-82.299 106.405V320c0 13.255 10.745 24 24 24h72.471c13.255 0 24-10.745 24-24v-5.773c0-42.86 125.268-44.645 125.268-160.627C377.504 66.256 286.902 0 202.021 0zM192 373.459c-38.196 0-69.271 31.075-69.271 69.271 0 38.195 31.075 69.27 69.271 69.27s69.271-31.075 69.271-69.271-31.075-69.27-69.271-69.27z"
                                              />
                                            </svg>
                                          </QuestionIcon>
                                           
                                          Unknown
                                        </span>
                                      </FindRefWrapper>
                                    </Popper>
                                  </Tooltip>
                                </span>
                              </Shield>
                            </span>
                          </div>
                        </StackItem>
                        <StackItem>
                          <div
                            className="pf-l-stack__item"
                          >
                            <injectIntl(CvssVector)
                              score={
                                <Tooltip
                                  content="CVEs published before 2005 (approximately) did not have a CVSS Base Score."
                                  position="left"
                                >
                                  <span>
                                    N/A
                                  </span>
                                </Tooltip>
                              }
                            >
                              <CvssVector
                                intl={
                                  Object {
                                    "defaultFormats": Object {},
                                    "defaultLocale": "en",
                                    "defaultRichTextElements": undefined,
                                    "formatDate": [Function],
                                    "formatDateTimeRange": [Function],
                                    "formatDateToParts": [Function],
                                    "formatDisplayName": [Function],
                                    "formatList": [Function],
                                    "formatListToParts": [Function],
                                    "formatMessage": [Function],
                                    "formatNumber": [Function],
                                    "formatNumberToParts": [Function],
                                    "formatPlural": [Function],
                                    "formatRelativeTime": [Function],
                                    "formatTime": [Function],
                                    "formatTimeToParts": [Function],
                                    "formats": Object {},
                                    "formatters": Object {
                                      "getDateTimeFormat": [Function],
                                      "getDisplayNames": [Function],
                                      "getListFormat": [Function],
                                      "getMessageFormat": [Function],
                                      "getNumberFormat": [Function],
                                      "getPluralRules": [Function],
                                      "getRelativeTimeFormat": [Function],
                                    },
                                    "locale": "en",
                                    "messages": Object {
                                      "default.cancel": "Cancel",
                                      "default.delete": "Delete",
                                      "default.remove": "Remove",
                                      "default.save": "Save",
                                    },
                                    "onError": [Function],
                                    "textComponent": Symbol(react.fragment),
                                    "timeZone": undefined,
                                    "wrapRichTextChunksInFragment": undefined,
                                  }
                                }
                                score={
                                  <Tooltip
                                    content="CVEs published before 2005 (approximately) did not have a CVSS Base Score."
                                    position="left"
                                  >
                                    <span>
                                      N/A
                                    </span>
                                  </Tooltip>
                                }
                              >
                                <TextContent>
                                  <div
                                    className="pf-c-content"
                                  >
                                    <WithLoader
                                      loading={true}
                                    >
                                      <Skeleton
                                        isDark={false}
                                        size="lg"
                                      >
                                        <div
                                          className="ins-c-skeleton ins-c-skeleton__lg"
                                        >
                                           
                                        </div>
                                      </Skeleton>
                                    </WithLoader>
                                    <WithLoader
                                      loading={true}
                                    >
                                      <Skeleton
                                        isDark={false}
                                        size="lg"
                                      >
                                        <div
                                          className="ins-c-skeleton ins-c-skeleton__lg"
                                        >
                                           
                                        </div>
                                      </Skeleton>
                                    </WithLoader>
                                  </div>
                                </TextContent>
                              </CvssVector>
                            </injectIntl(CvssVector)>
                          </div>
                        </StackItem>
                      </div>
                    </Stack>
                  </CVEDetailsPageSidebar>
                </injectIntl(CVEDetailsPageSidebar)>
              </div>
            </GridItem>
            <injectIntl(CSAwRuleBox)>
              <CSAwRuleBox
                intl={
                  Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "defaultRichTextElements": undefined,
                    "formatDate": [Function],
                    "formatDateTimeRange": [Function],
                    "formatDateToParts": [Function],
                    "formatDisplayName": [Function],
                    "formatList": [Function],
                    "formatListToParts": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatNumberToParts": [Function],
                    "formatPlural": [Function],
                    "formatRelativeTime": [Function],
                    "formatTime": [Function],
                    "formatTimeToParts": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getDisplayNames": [Function],
                      "getListFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralRules": [Function],
                      "getRelativeTimeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {
                      "default.cancel": "Cancel",
                      "default.delete": "Delete",
                      "default.remove": "Remove",
                      "default.save": "Save",
                    },
                    "onError": [Function],
                    "textComponent": Symbol(react.fragment),
                    "timeZone": undefined,
                    "wrapRichTextChunksInFragment": undefined,
                  }
                }
                rules={Array []}
              />
            </injectIntl(CSAwRuleBox)>
          </div>
        </Grid>
      </CVEDetailsPageSummary>
    </Router>
  </BrowserRouter>
</Provider>
`;

exports[`CVEDetailsPageSummary component should render with enabled WithLoader 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <CVEDetailsPageSummary
        data={
          Object {
            "data": Object {
              "data": Object {},
              "isLoading": true,
              "meta": Object {},
            },
          }
        }
      >
        <Grid
          hasGutter={true}
        >
          <div
            className="pf-l-grid pf-m-gutter"
          >
            <GridItem
              md={8}
              sm={12}
            >
              <div
                className="pf-l-grid__item pf-m-12-col-on-sm pf-m-8-col-on-md"
              >
                <WithLoader
                  loading={true}
                  variant="spinner"
                >
                  <Spinner
                    centered={true}
                  >
                    <div
                      className="ins-c-spinner ins-m-center"
                      role="status"
                    >
                      <span
                        className="pf-u-screen-reader"
                      >
                        Loading...
                      </span>
                    </div>
                  </Spinner>
                </WithLoader>
              </div>
            </GridItem>
            <GridItem
              className="pf-u-mt-sm pf-u-ml-sm"
              md={4}
              sm={12}
            >
              <div
                className="pf-l-grid__item pf-m-12-col-on-sm pf-m-4-col-on-md pf-u-mt-sm pf-u-ml-sm"
              >
                <injectIntl(CVEDetailsPageSidebar)
                  cveAttributes={
                    Object {
                      "data": Object {},
                      "isLoading": true,
                      "meta": Object {},
                    }
                  }
                >
                  <CVEDetailsPageSidebar
                    cveAttributes={
                      Object {
                        "data": Object {},
                        "isLoading": true,
                        "meta": Object {},
                      }
                    }
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "defaultRichTextElements": undefined,
                        "formatDate": [Function],
                        "formatDateTimeRange": [Function],
                        "formatDateToParts": [Function],
                        "formatDisplayName": [Function],
                        "formatList": [Function],
                        "formatListToParts": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatNumberToParts": [Function],
                        "formatPlural": [Function],
                        "formatRelativeTime": [Function],
                        "formatTime": [Function],
                        "formatTimeToParts": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getDisplayNames": [Function],
                          "getListFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralRules": [Function],
                          "getRelativeTimeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {
                          "default.cancel": "Cancel",
                          "default.delete": "Delete",
                          "default.remove": "Remove",
                          "default.save": "Save",
                        },
                        "onError": [Function],
                        "textComponent": Symbol(react.fragment),
                        "timeZone": undefined,
                        "wrapRichTextChunksInFragment": undefined,
                      }
                    }
                  >
                    <Stack
                      hasGutter={true}
                    >
                      <div
                        className="pf-l-stack pf-m-gutter"
                      >
                        <StackItem>
                          <div
                            className="pf-l-stack__item"
                          >
                            <Split
                              hasGutter={true}
                            >
                              <div
                                className="pf-l-split pf-m-gutter"
                              >
                                <SplitItem>
                                  <div
                                    className="pf-l-split__item"
                                  >
                                    <SnippetWithHeaderAndPopover
                                      content={
                                        <Stack
                                          className="pf-u-p-xs"
                                        >
                                          <StackItem>
                                            <Label
                                              className="pf-u-mb-xs"
                                            >
                                              Justification note
                                            </Label>
                                          </StackItem>
                                          <StackItem>
                                            --
                                          </StackItem>
                                        </Stack>
                                      }
                                      title="Business risk"
                                    >
                                      <Popover
                                        appendTo={null}
                                        aria-label="Business risk popover"
                                        bodyContent={
                                          <Stack
                                            className="pf-u-p-xs"
                                          >
                                            <StackItem>
                                              <Label
                                                className="pf-u-mb-xs"
                                              >
                                                Justification note
                                              </Label>
                                            </StackItem>
                                            <StackItem>
                                              --
                                            </StackItem>
                                          </Stack>
                                        }
                                        headerContent=""
                                        id="popover"
                                        position="right"
                                      >
                                        <Popper
                                          appendTo={null}
                                          distance={25}
                                          enableFlip={true}
                                          flipBehavior={
                                            Array [
                                              "top",
                                              "right",
                                              "bottom",
                                              "left",
                                              "top",
                                              "right",
                                              "bottom",
                                            ]
                                          }
                                          isVisible={false}
                                          onDocumentClick={[Function]}
                                          onDocumentKeyDown={[Function]}
                                          onTriggerClick={[Function]}
                                          onTriggerEnter={[Function]}
                                          placement="right"
                                          popper={
                                            <FocusTrap
                                              active={false}
                                              aria-describedby="popover-popover-body"
                                              aria-label="Business risk popover"
                                              aria-modal="true"
                                              className="pf-c-popover"
                                              focusTrapOptions={
                                                Object {
                                                  "clickOutsideDeactivates": true,
                                                  "fallbackFocus": [Function],
                                                  "returnFocusOnDeactivate": true,
                                                }
                                              }
                                              onMouseDown={[Function]}
                                              paused={false}
                                              preventScrollOnDeactivate={true}
                                              role="dialog"
                                              style={
                                                Object {
                                                  "maxWidth": null,
                                                  "minWidth": null,
                                                  "opacity": 0,
                                                  "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                                }
                                              }
                                            >
                                              <PopoverArrow />
                                              <PopoverContent>
                                                <PopoverCloseButton
                                                  aria-label="Close"
                                                  onClose={[Function]}
                                                />
                                                
                                                <PopoverBody
                                                  id="popover-popover-body"
                                                >
                                                  <Stack
                                                    className="pf-u-p-xs"
                                                  >
                                                    <StackItem>
                                                      <Label
                                                        className="pf-u-mb-xs"
                                                      >
                                                        Justification note
                                                      </Label>
                                                    </StackItem>
                                                    <StackItem>
                                                      --
                                                    </StackItem>
                                                  </Stack>
                                                </PopoverBody>
                                              </PopoverContent>
                                            </FocusTrap>
                                          }
                                          popperMatchesTriggerWidth={false}
                                          positionModifiers={
                                            Object {
                                              "bottom": "pf-m-bottom",
                                              "left": "pf-m-left",
                                              "right": "pf-m-right",
                                              "top": "pf-m-top",
                                            }
                                          }
                                          trigger={
                                            <Stack
                                              className="popover-content"
                                            >
                                              <StackItem>
                                                <Label
                                                  isLarge={true}
                                                >
                                                  Business risk
                                                </Label>
                                              </StackItem>
                                              <StackItem>
                                                <a />
                                              </StackItem>
                                            </Stack>
                                          }
                                          zIndex={9999}
                                        >
                                          <FindRefWrapper
                                            onFoundRef={[Function]}
                                          >
                                            <Stack
                                              className="popover-content"
                                            >
                                              <div
                                                className="pf-l-stack popover-content"
                                              >
                                                <StackItem>
                                                  <div
                                                    className="pf-l-stack__item"
                                                  >
                                                    <Label
                                                      isLarge={true}
                                                    >
                                                      <span
                                                        className="vuln-label "
                                                        style={
                                                          Object {
                                                            "display": "block",
                                                            "fontSize": "medium",
                                                          }
                                                        }
                                                      >
                                                        Business risk
                                                      </span>
                                                    </Label>
                                                  </div>
                                                </StackItem>
                                                <StackItem>
                                                  <div
                                                    className="pf-l-stack__item"
                                                  >
                                                    <a />
                                                  </div>
                                                </StackItem>
                                              </div>
                                            </Stack>
                                          </FindRefWrapper>
                                        </Popper>
                                      </Popover>
                                    </SnippetWithHeaderAndPopover>
                                  </div>
                                </SplitItem>
                                <SplitItem
                                  className="pf-u-ml-lg"
                                >
                                  <div
                                    className="pf-l-split__item pf-u-ml-lg"
                                  >
                                    <SnippetWithHeaderAndPopover
                                      content={
                                        <Stack
                                          className="pf-u-p-xs"
                                        >
                                          <StackItem>
                                            <Label
                                              className="pf-u-mb-xs"
                                            >
                                              CVE status
                                            </Label>
                                            --
                                            <Label
                                              className="pf-u-mb-xs pf-u-mt-sm"
                                            >
                                              Justification note
                                            </Label>
                                            --
                                          </StackItem>
                                        </Stack>
                                      }
                                      title="Status"
                                      value={
                                        <span>
                                           
                                        </span>
                                      }
                                    >
                                      <Popover
                                        appendTo={null}
                                        aria-label="Business risk popover"
                                        bodyContent={
                                          <Stack
                                            className="pf-u-p-xs"
                                          >
                                            <StackItem>
                                              <Label
                                                className="pf-u-mb-xs"
                                              >
                                                CVE status
                                              </Label>
                                              --
                                              <Label
                                                className="pf-u-mb-xs pf-u-mt-sm"
                                              >
                                                Justification note
                                              </Label>
                                              --
                                            </StackItem>
                                          </Stack>
                                        }
                                        headerContent=""
                                        id="popover"
                                        position="right"
                                      >
                                        <Popper
                                          appendTo={null}
                                          distance={25}
                                          enableFlip={true}
                                          flipBehavior={
                                            Array [
                                              "top",
                                              "right",
                                              "bottom",
                                              "left",
                                              "top",
                                              "right",
                                              "bottom",
                                            ]
                                          }
                                          isVisible={false}
                                          onDocumentClick={[Function]}
                                          onDocumentKeyDown={[Function]}
                                          onTriggerClick={[Function]}
                                          onTriggerEnter={[Function]}
                                          placement="right"
                                          popper={
                                            <FocusTrap
                                              active={false}
                                              aria-describedby="popover-popover-body"
                                              aria-label="Business risk popover"
                                              aria-modal="true"
                                              className="pf-c-popover"
                                              focusTrapOptions={
                                                Object {
                                                  "clickOutsideDeactivates": true,
                                                  "fallbackFocus": [Function],
                                                  "returnFocusOnDeactivate": true,
                                                }
                                              }
                                              onMouseDown={[Function]}
                                              paused={false}
                                              preventScrollOnDeactivate={true}
                                              role="dialog"
                                              style={
                                                Object {
                                                  "maxWidth": null,
                                                  "minWidth": null,
                                                  "opacity": 0,
                                                  "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                                }
                                              }
                                            >
                                              <PopoverArrow />
                                              <PopoverContent>
                                                <PopoverCloseButton
                                                  aria-label="Close"
                                                  onClose={[Function]}
                                                />
                                                
                                                <PopoverBody
                                                  id="popover-popover-body"
                                                >
                                                  <Stack
                                                    className="pf-u-p-xs"
                                                  >
                                                    <StackItem>
                                                      <Label
                                                        className="pf-u-mb-xs"
                                                      >
                                                        CVE status
                                                      </Label>
                                                      --
                                                      <Label
                                                        className="pf-u-mb-xs pf-u-mt-sm"
                                                      >
                                                        Justification note
                                                      </Label>
                                                      --
                                                    </StackItem>
                                                  </Stack>
                                                </PopoverBody>
                                              </PopoverContent>
                                            </FocusTrap>
                                          }
                                          popperMatchesTriggerWidth={false}
                                          positionModifiers={
                                            Object {
                                              "bottom": "pf-m-bottom",
                                              "left": "pf-m-left",
                                              "right": "pf-m-right",
                                              "top": "pf-m-top",
                                            }
                                          }
                                          trigger={
                                            <Stack
                                              className="popover-content"
                                            >
                                              <StackItem>
                                                <Label
                                                  isLarge={true}
                                                >
                                                  Status
                                                </Label>
                                              </StackItem>
                                              <StackItem>
                                                <a>
                                                  <span>
                                                     
                                                  </span>
                                                </a>
                                              </StackItem>
                                            </Stack>
                                          }
                                          zIndex={9999}
                                        >
                                          <FindRefWrapper
                                            onFoundRef={[Function]}
                                          >
                                            <Stack
                                              className="popover-content"
                                            >
                                              <div
                                                className="pf-l-stack popover-content"
                                              >
                                                <StackItem>
                                                  <div
                                                    className="pf-l-stack__item"
                                                  >
                                                    <Label
                                                      isLarge={true}
                                                    >
                                                      <span
                                                        className="vuln-label "
                                                        style={
                                                          Object {
                                                            "display": "block",
                                                            "fontSize": "medium",
                                                          }
                                                        }
                                                      >
                                                        Status
                                                      </span>
                                                    </Label>
                                                  </div>
                                                </StackItem>
                                                <StackItem>
                                                  <div
                                                    className="pf-l-stack__item"
                                                  >
                                                    <a>
                                                      <span>
                                                         
                                                      </span>
                                                    </a>
                                                  </div>
                                                </StackItem>
                                              </div>
                                            </Stack>
                                          </FindRefWrapper>
                                        </Popper>
                                      </Popover>
                                    </SnippetWithHeaderAndPopover>
                                  </div>
                                </SplitItem>
                              </div>
                            </Split>
                          </div>
                        </StackItem>
                        <StackItem>
                          <div
                            className="pf-l-stack__item"
                          >
                            <Label
                              className="pf-u-mb-xs"
                              isLarge={true}
                            >
                              <span
                                className="vuln-label pf-u-mb-xs"
                                style={
                                  Object {
                                    "display": "block",
                                    "fontSize": "medium",
                                  }
                                }
                              >
                                Severity
                              </span>
                            </Label>
                            <span
                              id="severity-shield"
                              style={
                                Object {
                                  "color": "black",
                                }
                              }
                            >
                              <Shield
                                hasLabel={true}
                                hasTooltip={true}
                                impact="Unknown"
                                size="sm"
                              >
                                <span>
                                  <Tooltip
                                    content={<div />}
                                    position="bottom"
                                  >
                                    <Popper
                                      appendTo={[Function]}
                                      distance={15}
                                      enableFlip={true}
                                      flipBehavior={
                                        Array [
                                          "top",
                                          "right",
                                          "bottom",
                                          "left",
                                          "top",
                                          "right",
                                          "bottom",
                                        ]
                                      }
                                      isVisible={false}
                                      onBlur={[Function]}
                                      onDocumentClick={false}
                                      onDocumentKeyDown={[Function]}
                                      onFocus={[Function]}
                                      onMouseEnter={[Function]}
                                      onMouseLeave={[Function]}
                                      onTriggerEnter={[Function]}
                                      placement="bottom"
                                      popper={
                                        <div
                                          className="pf-c-tooltip"
                                          id="pf-tooltip-8"
                                          role="tooltip"
                                          style={
                                            Object {
                                              "maxWidth": null,
                                              "opacity": 0,
                                              "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                            }
                                          }
                                        >
                                          <TooltipArrow />
                                          <TooltipContent
                                            isLeftAligned={false}
                                          >
                                            <div />
                                          </TooltipContent>
                                        </div>
                                      }
                                      popperMatchesTriggerWidth={false}
                                      positionModifiers={
                                        Object {
                                          "bottom": "pf-m-bottom",
                                          "left": "pf-m-left",
                                          "right": "pf-m-right",
                                          "top": "pf-m-top",
                                        }
                                      }
                                      trigger={
                                        <span>
                                          <QuestionIcon
                                            aria-hidden="false"
                                            aria-label="Unknown"
                                            color="#737679"
                                            noVerticalAlign={false}
                                            size="sm"
                                          />
                                           
                                          Unknown
                                        </span>
                                      }
                                      zIndex={9999}
                                    >
                                      <FindRefWrapper
                                        onFoundRef={[Function]}
                                      >
                                        <span>
                                          <QuestionIcon
                                            aria-hidden="false"
                                            aria-label="Unknown"
                                            color="#737679"
                                            noVerticalAlign={false}
                                            size="sm"
                                          >
                                            <svg
                                              aria-hidden="false"
                                              aria-label="Unknown"
                                              aria-labelledby={null}
                                              fill="#737679"
                                              height="1em"
                                              role="img"
                                              style={
                                                Object {
                                                  "verticalAlign": "-0.125em",
                                                }
                                              }
                                              viewBox="0 0 384 512"
                                              width="1em"
                                            >
                                              <path
                                                d="M202.021 0C122.202 0 70.503 32.703 29.914 91.026c-7.363 10.58-5.093 25.086 5.178 32.874l43.138 32.709c10.373 7.865 25.132 6.026 33.253-4.148 25.049-31.381 43.63-49.449 82.757-49.449 30.764 0 68.816 19.799 68.816 49.631 0 22.552-18.617 34.134-48.993 51.164-35.423 19.86-82.299 44.576-82.299 106.405V320c0 13.255 10.745 24 24 24h72.471c13.255 0 24-10.745 24-24v-5.773c0-42.86 125.268-44.645 125.268-160.627C377.504 66.256 286.902 0 202.021 0zM192 373.459c-38.196 0-69.271 31.075-69.271 69.271 0 38.195 31.075 69.27 69.271 69.27s69.271-31.075 69.271-69.271-31.075-69.27-69.271-69.27z"
                                              />
                                            </svg>
                                          </QuestionIcon>
                                           
                                          Unknown
                                        </span>
                                      </FindRefWrapper>
                                    </Popper>
                                  </Tooltip>
                                </span>
                              </Shield>
                            </span>
                          </div>
                        </StackItem>
                        <StackItem>
                          <div
                            className="pf-l-stack__item"
                          >
                            <injectIntl(CvssVector)
                              score={
                                <Tooltip
                                  content="CVEs published before 2005 (approximately) did not have a CVSS Base Score."
                                  position="left"
                                >
                                  <span>
                                    N/A
                                  </span>
                                </Tooltip>
                              }
                            >
                              <CvssVector
                                intl={
                                  Object {
                                    "defaultFormats": Object {},
                                    "defaultLocale": "en",
                                    "defaultRichTextElements": undefined,
                                    "formatDate": [Function],
                                    "formatDateTimeRange": [Function],
                                    "formatDateToParts": [Function],
                                    "formatDisplayName": [Function],
                                    "formatList": [Function],
                                    "formatListToParts": [Function],
                                    "formatMessage": [Function],
                                    "formatNumber": [Function],
                                    "formatNumberToParts": [Function],
                                    "formatPlural": [Function],
                                    "formatRelativeTime": [Function],
                                    "formatTime": [Function],
                                    "formatTimeToParts": [Function],
                                    "formats": Object {},
                                    "formatters": Object {
                                      "getDateTimeFormat": [Function],
                                      "getDisplayNames": [Function],
                                      "getListFormat": [Function],
                                      "getMessageFormat": [Function],
                                      "getNumberFormat": [Function],
                                      "getPluralRules": [Function],
                                      "getRelativeTimeFormat": [Function],
                                    },
                                    "locale": "en",
                                    "messages": Object {
                                      "default.cancel": "Cancel",
                                      "default.delete": "Delete",
                                      "default.remove": "Remove",
                                      "default.save": "Save",
                                    },
                                    "onError": [Function],
                                    "textComponent": Symbol(react.fragment),
                                    "timeZone": undefined,
                                    "wrapRichTextChunksInFragment": undefined,
                                  }
                                }
                                score={
                                  <Tooltip
                                    content="CVEs published before 2005 (approximately) did not have a CVSS Base Score."
                                    position="left"
                                  >
                                    <span>
                                      N/A
                                    </span>
                                  </Tooltip>
                                }
                              >
                                <TextContent>
                                  <div
                                    className="pf-c-content"
                                  >
                                    <WithLoader
                                      loading={true}
                                    >
                                      <Skeleton
                                        isDark={false}
                                        size="lg"
                                      >
                                        <div
                                          className="ins-c-skeleton ins-c-skeleton__lg"
                                        >
                                           
                                        </div>
                                      </Skeleton>
                                    </WithLoader>
                                    <WithLoader
                                      loading={true}
                                    >
                                      <Skeleton
                                        isDark={false}
                                        size="lg"
                                      >
                                        <div
                                          className="ins-c-skeleton ins-c-skeleton__lg"
                                        >
                                           
                                        </div>
                                      </Skeleton>
                                    </WithLoader>
                                  </div>
                                </TextContent>
                              </CvssVector>
                            </injectIntl(CvssVector)>
                          </div>
                        </StackItem>
                      </div>
                    </Stack>
                  </CVEDetailsPageSidebar>
                </injectIntl(CVEDetailsPageSidebar)>
              </div>
            </GridItem>
            <injectIntl(CSAwRuleBox)>
              <CSAwRuleBox
                intl={
                  Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "defaultRichTextElements": undefined,
                    "formatDate": [Function],
                    "formatDateTimeRange": [Function],
                    "formatDateToParts": [Function],
                    "formatDisplayName": [Function],
                    "formatList": [Function],
                    "formatListToParts": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatNumberToParts": [Function],
                    "formatPlural": [Function],
                    "formatRelativeTime": [Function],
                    "formatTime": [Function],
                    "formatTimeToParts": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getDisplayNames": [Function],
                      "getListFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralRules": [Function],
                      "getRelativeTimeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {
                      "default.cancel": "Cancel",
                      "default.delete": "Delete",
                      "default.remove": "Remove",
                      "default.save": "Save",
                    },
                    "onError": [Function],
                    "textComponent": Symbol(react.fragment),
                    "timeZone": undefined,
                    "wrapRichTextChunksInFragment": undefined,
                  }
                }
                rules={Array []}
              />
            </injectIntl(CSAwRuleBox)>
          </div>
        </Grid>
      </CVEDetailsPageSummary>
    </Router>
  </BrowserRouter>
</Provider>
`;

exports[`CVEDetailsPageSummary component should render with long description 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <CVEDetailsPageSummary
        data={
          Object {
            "data": Object {
              "data": Object {
                "cvss3_score": "7.000",
                "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi consectetur molestie tristique. Proin ornare urna ut consequat pellentesque. Sed commodo porta sollicitudin. Interdum et malesuada fames ac ante ipsum primis in faucibus. Pellentesque habitant morbi tristique senectus et netus et nullam.",
                "impact": "Important",
                "package_list": Array [],
                "public_date": "February 18th, 2019",
                "synopsis": "CVE-2019-6454",
              },
              "isLoading": false,
              "meta": Object {},
            },
          }
        }
      >
        <Grid
          hasGutter={true}
        >
          <div
            className="pf-l-grid pf-m-gutter"
          >
            <GridItem
              md={8}
              sm={12}
            >
              <div
                className="pf-l-grid__item pf-m-12-col-on-sm pf-m-8-col-on-md"
              >
                <WithLoader
                  loading={true}
                  variant="spinner"
                >
                  <Spinner
                    centered={true}
                  >
                    <div
                      className="ins-c-spinner ins-m-center"
                      role="status"
                    >
                      <span
                        className="pf-u-screen-reader"
                      >
                        Loading...
                      </span>
                    </div>
                  </Spinner>
                </WithLoader>
              </div>
            </GridItem>
            <GridItem
              className="pf-u-mt-sm pf-u-ml-sm"
              md={4}
              sm={12}
            >
              <div
                className="pf-l-grid__item pf-m-12-col-on-sm pf-m-4-col-on-md pf-u-mt-sm pf-u-ml-sm"
              >
                <injectIntl(CVEDetailsPageSidebar)
                  cveAttributes={
                    Object {
                      "data": Object {
                        "cvss3_score": "7.000",
                        "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi consectetur molestie tristique. Proin ornare urna ut consequat pellentesque. Sed commodo porta sollicitudin. Interdum et malesuada fames ac ante ipsum primis in faucibus. Pellentesque habitant morbi tristique senectus et netus et nullam.",
                        "impact": "Important",
                        "package_list": Array [],
                        "public_date": "February 18th, 2019",
                        "synopsis": "CVE-2019-6454",
                      },
                      "isLoading": false,
                      "meta": Object {},
                    }
                  }
                >
                  <CVEDetailsPageSidebar
                    cveAttributes={
                      Object {
                        "data": Object {
                          "cvss3_score": "7.000",
                          "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi consectetur molestie tristique. Proin ornare urna ut consequat pellentesque. Sed commodo porta sollicitudin. Interdum et malesuada fames ac ante ipsum primis in faucibus. Pellentesque habitant morbi tristique senectus et netus et nullam.",
                          "impact": "Important",
                          "package_list": Array [],
                          "public_date": "February 18th, 2019",
                          "synopsis": "CVE-2019-6454",
                        },
                        "isLoading": false,
                        "meta": Object {},
                      }
                    }
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "defaultRichTextElements": undefined,
                        "formatDate": [Function],
                        "formatDateTimeRange": [Function],
                        "formatDateToParts": [Function],
                        "formatDisplayName": [Function],
                        "formatList": [Function],
                        "formatListToParts": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatNumberToParts": [Function],
                        "formatPlural": [Function],
                        "formatRelativeTime": [Function],
                        "formatTime": [Function],
                        "formatTimeToParts": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getDisplayNames": [Function],
                          "getListFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralRules": [Function],
                          "getRelativeTimeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {
                          "default.cancel": "Cancel",
                          "default.delete": "Delete",
                          "default.remove": "Remove",
                          "default.save": "Save",
                        },
                        "onError": [Function],
                        "textComponent": Symbol(react.fragment),
                        "timeZone": undefined,
                        "wrapRichTextChunksInFragment": undefined,
                      }
                    }
                  >
                    <Stack
                      hasGutter={true}
                    >
                      <div
                        className="pf-l-stack pf-m-gutter"
                      >
                        <StackItem>
                          <div
                            className="pf-l-stack__item"
                          >
                            <Split
                              hasGutter={true}
                            >
                              <div
                                className="pf-l-split pf-m-gutter"
                              >
                                <SplitItem>
                                  <div
                                    className="pf-l-split__item"
                                  >
                                    <SnippetWithHeaderAndPopover
                                      content={
                                        <Stack
                                          className="pf-u-p-xs"
                                        >
                                          <StackItem>
                                            <Label
                                              className="pf-u-mb-xs"
                                            >
                                              Justification note
                                            </Label>
                                          </StackItem>
                                          <StackItem>
                                            --
                                          </StackItem>
                                        </Stack>
                                      }
                                      title="Business risk"
                                    >
                                      <Popover
                                        appendTo={null}
                                        aria-label="Business risk popover"
                                        bodyContent={
                                          <Stack
                                            className="pf-u-p-xs"
                                          >
                                            <StackItem>
                                              <Label
                                                className="pf-u-mb-xs"
                                              >
                                                Justification note
                                              </Label>
                                            </StackItem>
                                            <StackItem>
                                              --
                                            </StackItem>
                                          </Stack>
                                        }
                                        headerContent=""
                                        id="popover"
                                        position="right"
                                      >
                                        <Popper
                                          appendTo={null}
                                          distance={25}
                                          enableFlip={true}
                                          flipBehavior={
                                            Array [
                                              "top",
                                              "right",
                                              "bottom",
                                              "left",
                                              "top",
                                              "right",
                                              "bottom",
                                            ]
                                          }
                                          isVisible={false}
                                          onDocumentClick={[Function]}
                                          onDocumentKeyDown={[Function]}
                                          onTriggerClick={[Function]}
                                          onTriggerEnter={[Function]}
                                          placement="right"
                                          popper={
                                            <FocusTrap
                                              active={false}
                                              aria-describedby="popover-popover-body"
                                              aria-label="Business risk popover"
                                              aria-modal="true"
                                              className="pf-c-popover"
                                              focusTrapOptions={
                                                Object {
                                                  "clickOutsideDeactivates": true,
                                                  "fallbackFocus": [Function],
                                                  "returnFocusOnDeactivate": true,
                                                }
                                              }
                                              onMouseDown={[Function]}
                                              paused={false}
                                              preventScrollOnDeactivate={true}
                                              role="dialog"
                                              style={
                                                Object {
                                                  "maxWidth": null,
                                                  "minWidth": null,
                                                  "opacity": 0,
                                                  "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                                }
                                              }
                                            >
                                              <PopoverArrow />
                                              <PopoverContent>
                                                <PopoverCloseButton
                                                  aria-label="Close"
                                                  onClose={[Function]}
                                                />
                                                
                                                <PopoverBody
                                                  id="popover-popover-body"
                                                >
                                                  <Stack
                                                    className="pf-u-p-xs"
                                                  >
                                                    <StackItem>
                                                      <Label
                                                        className="pf-u-mb-xs"
                                                      >
                                                        Justification note
                                                      </Label>
                                                    </StackItem>
                                                    <StackItem>
                                                      --
                                                    </StackItem>
                                                  </Stack>
                                                </PopoverBody>
                                              </PopoverContent>
                                            </FocusTrap>
                                          }
                                          popperMatchesTriggerWidth={false}
                                          positionModifiers={
                                            Object {
                                              "bottom": "pf-m-bottom",
                                              "left": "pf-m-left",
                                              "right": "pf-m-right",
                                              "top": "pf-m-top",
                                            }
                                          }
                                          trigger={
                                            <Stack
                                              className="popover-content"
                                            >
                                              <StackItem>
                                                <Label
                                                  isLarge={true}
                                                >
                                                  Business risk
                                                </Label>
                                              </StackItem>
                                              <StackItem>
                                                <a />
                                              </StackItem>
                                            </Stack>
                                          }
                                          zIndex={9999}
                                        >
                                          <FindRefWrapper
                                            onFoundRef={[Function]}
                                          >
                                            <Stack
                                              className="popover-content"
                                            >
                                              <div
                                                className="pf-l-stack popover-content"
                                              >
                                                <StackItem>
                                                  <div
                                                    className="pf-l-stack__item"
                                                  >
                                                    <Label
                                                      isLarge={true}
                                                    >
                                                      <span
                                                        className="vuln-label "
                                                        style={
                                                          Object {
                                                            "display": "block",
                                                            "fontSize": "medium",
                                                          }
                                                        }
                                                      >
                                                        Business risk
                                                      </span>
                                                    </Label>
                                                  </div>
                                                </StackItem>
                                                <StackItem>
                                                  <div
                                                    className="pf-l-stack__item"
                                                  >
                                                    <a />
                                                  </div>
                                                </StackItem>
                                              </div>
                                            </Stack>
                                          </FindRefWrapper>
                                        </Popper>
                                      </Popover>
                                    </SnippetWithHeaderAndPopover>
                                  </div>
                                </SplitItem>
                                <SplitItem
                                  className="pf-u-ml-lg"
                                >
                                  <div
                                    className="pf-l-split__item pf-u-ml-lg"
                                  >
                                    <SnippetWithHeaderAndPopover
                                      content={
                                        <Stack
                                          className="pf-u-p-xs"
                                        >
                                          <StackItem>
                                            <Label
                                              className="pf-u-mb-xs"
                                            >
                                              CVE status
                                            </Label>
                                            --
                                            <Label
                                              className="pf-u-mb-xs pf-u-mt-sm"
                                            >
                                              Justification note
                                            </Label>
                                            --
                                          </StackItem>
                                        </Stack>
                                      }
                                      title="Status"
                                      value={
                                        <span>
                                           
                                        </span>
                                      }
                                    >
                                      <Popover
                                        appendTo={null}
                                        aria-label="Business risk popover"
                                        bodyContent={
                                          <Stack
                                            className="pf-u-p-xs"
                                          >
                                            <StackItem>
                                              <Label
                                                className="pf-u-mb-xs"
                                              >
                                                CVE status
                                              </Label>
                                              --
                                              <Label
                                                className="pf-u-mb-xs pf-u-mt-sm"
                                              >
                                                Justification note
                                              </Label>
                                              --
                                            </StackItem>
                                          </Stack>
                                        }
                                        headerContent=""
                                        id="popover"
                                        position="right"
                                      >
                                        <Popper
                                          appendTo={null}
                                          distance={25}
                                          enableFlip={true}
                                          flipBehavior={
                                            Array [
                                              "top",
                                              "right",
                                              "bottom",
                                              "left",
                                              "top",
                                              "right",
                                              "bottom",
                                            ]
                                          }
                                          isVisible={false}
                                          onDocumentClick={[Function]}
                                          onDocumentKeyDown={[Function]}
                                          onTriggerClick={[Function]}
                                          onTriggerEnter={[Function]}
                                          placement="right"
                                          popper={
                                            <FocusTrap
                                              active={false}
                                              aria-describedby="popover-popover-body"
                                              aria-label="Business risk popover"
                                              aria-modal="true"
                                              className="pf-c-popover"
                                              focusTrapOptions={
                                                Object {
                                                  "clickOutsideDeactivates": true,
                                                  "fallbackFocus": [Function],
                                                  "returnFocusOnDeactivate": true,
                                                }
                                              }
                                              onMouseDown={[Function]}
                                              paused={false}
                                              preventScrollOnDeactivate={true}
                                              role="dialog"
                                              style={
                                                Object {
                                                  "maxWidth": null,
                                                  "minWidth": null,
                                                  "opacity": 0,
                                                  "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                                }
                                              }
                                            >
                                              <PopoverArrow />
                                              <PopoverContent>
                                                <PopoverCloseButton
                                                  aria-label="Close"
                                                  onClose={[Function]}
                                                />
                                                
                                                <PopoverBody
                                                  id="popover-popover-body"
                                                >
                                                  <Stack
                                                    className="pf-u-p-xs"
                                                  >
                                                    <StackItem>
                                                      <Label
                                                        className="pf-u-mb-xs"
                                                      >
                                                        CVE status
                                                      </Label>
                                                      --
                                                      <Label
                                                        className="pf-u-mb-xs pf-u-mt-sm"
                                                      >
                                                        Justification note
                                                      </Label>
                                                      --
                                                    </StackItem>
                                                  </Stack>
                                                </PopoverBody>
                                              </PopoverContent>
                                            </FocusTrap>
                                          }
                                          popperMatchesTriggerWidth={false}
                                          positionModifiers={
                                            Object {
                                              "bottom": "pf-m-bottom",
                                              "left": "pf-m-left",
                                              "right": "pf-m-right",
                                              "top": "pf-m-top",
                                            }
                                          }
                                          trigger={
                                            <Stack
                                              className="popover-content"
                                            >
                                              <StackItem>
                                                <Label
                                                  isLarge={true}
                                                >
                                                  Status
                                                </Label>
                                              </StackItem>
                                              <StackItem>
                                                <a>
                                                  <span>
                                                     
                                                  </span>
                                                </a>
                                              </StackItem>
                                            </Stack>
                                          }
                                          zIndex={9999}
                                        >
                                          <FindRefWrapper
                                            onFoundRef={[Function]}
                                          >
                                            <Stack
                                              className="popover-content"
                                            >
                                              <div
                                                className="pf-l-stack popover-content"
                                              >
                                                <StackItem>
                                                  <div
                                                    className="pf-l-stack__item"
                                                  >
                                                    <Label
                                                      isLarge={true}
                                                    >
                                                      <span
                                                        className="vuln-label "
                                                        style={
                                                          Object {
                                                            "display": "block",
                                                            "fontSize": "medium",
                                                          }
                                                        }
                                                      >
                                                        Status
                                                      </span>
                                                    </Label>
                                                  </div>
                                                </StackItem>
                                                <StackItem>
                                                  <div
                                                    className="pf-l-stack__item"
                                                  >
                                                    <a>
                                                      <span>
                                                         
                                                      </span>
                                                    </a>
                                                  </div>
                                                </StackItem>
                                              </div>
                                            </Stack>
                                          </FindRefWrapper>
                                        </Popper>
                                      </Popover>
                                    </SnippetWithHeaderAndPopover>
                                  </div>
                                </SplitItem>
                              </div>
                            </Split>
                          </div>
                        </StackItem>
                        <StackItem>
                          <div
                            className="pf-l-stack__item"
                          >
                            <Label
                              className="pf-u-mb-xs"
                              isLarge={true}
                            >
                              <span
                                className="vuln-label pf-u-mb-xs"
                                style={
                                  Object {
                                    "display": "block",
                                    "fontSize": "medium",
                                  }
                                }
                              >
                                Severity
                              </span>
                            </Label>
                            <span
                              id="severity-shield"
                              style={
                                Object {
                                  "color": "black",
                                }
                              }
                            >
                              <Shield
                                hasLabel={true}
                                hasTooltip={true}
                                impact="Unknown"
                                size="sm"
                              >
                                <span>
                                  <Tooltip
                                    content={<div />}
                                    position="bottom"
                                  >
                                    <Popper
                                      appendTo={[Function]}
                                      distance={15}
                                      enableFlip={true}
                                      flipBehavior={
                                        Array [
                                          "top",
                                          "right",
                                          "bottom",
                                          "left",
                                          "top",
                                          "right",
                                          "bottom",
                                        ]
                                      }
                                      isVisible={false}
                                      onBlur={[Function]}
                                      onDocumentClick={false}
                                      onDocumentKeyDown={[Function]}
                                      onFocus={[Function]}
                                      onMouseEnter={[Function]}
                                      onMouseLeave={[Function]}
                                      onTriggerEnter={[Function]}
                                      placement="bottom"
                                      popper={
                                        <div
                                          className="pf-c-tooltip"
                                          id="pf-tooltip-6"
                                          role="tooltip"
                                          style={
                                            Object {
                                              "maxWidth": null,
                                              "opacity": 0,
                                              "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                            }
                                          }
                                        >
                                          <TooltipArrow />
                                          <TooltipContent
                                            isLeftAligned={false}
                                          >
                                            <div />
                                          </TooltipContent>
                                        </div>
                                      }
                                      popperMatchesTriggerWidth={false}
                                      positionModifiers={
                                        Object {
                                          "bottom": "pf-m-bottom",
                                          "left": "pf-m-left",
                                          "right": "pf-m-right",
                                          "top": "pf-m-top",
                                        }
                                      }
                                      trigger={
                                        <span>
                                          <QuestionIcon
                                            aria-hidden="false"
                                            aria-label="Unknown"
                                            color="#737679"
                                            noVerticalAlign={false}
                                            size="sm"
                                          />
                                           
                                          Unknown
                                        </span>
                                      }
                                      zIndex={9999}
                                    >
                                      <FindRefWrapper
                                        onFoundRef={[Function]}
                                      >
                                        <span>
                                          <QuestionIcon
                                            aria-hidden="false"
                                            aria-label="Unknown"
                                            color="#737679"
                                            noVerticalAlign={false}
                                            size="sm"
                                          >
                                            <svg
                                              aria-hidden="false"
                                              aria-label="Unknown"
                                              aria-labelledby={null}
                                              fill="#737679"
                                              height="1em"
                                              role="img"
                                              style={
                                                Object {
                                                  "verticalAlign": "-0.125em",
                                                }
                                              }
                                              viewBox="0 0 384 512"
                                              width="1em"
                                            >
                                              <path
                                                d="M202.021 0C122.202 0 70.503 32.703 29.914 91.026c-7.363 10.58-5.093 25.086 5.178 32.874l43.138 32.709c10.373 7.865 25.132 6.026 33.253-4.148 25.049-31.381 43.63-49.449 82.757-49.449 30.764 0 68.816 19.799 68.816 49.631 0 22.552-18.617 34.134-48.993 51.164-35.423 19.86-82.299 44.576-82.299 106.405V320c0 13.255 10.745 24 24 24h72.471c13.255 0 24-10.745 24-24v-5.773c0-42.86 125.268-44.645 125.268-160.627C377.504 66.256 286.902 0 202.021 0zM192 373.459c-38.196 0-69.271 31.075-69.271 69.271 0 38.195 31.075 69.27 69.271 69.27s69.271-31.075 69.271-69.271-31.075-69.27-69.271-69.27z"
                                              />
                                            </svg>
                                          </QuestionIcon>
                                           
                                          Unknown
                                        </span>
                                      </FindRefWrapper>
                                    </Popper>
                                  </Tooltip>
                                </span>
                              </Shield>
                            </span>
                          </div>
                        </StackItem>
                        <StackItem>
                          <div
                            className="pf-l-stack__item"
                          >
                            <injectIntl(CvssVector)
                              score={
                                <Tooltip
                                  content="CVEs published before 2005 (approximately) did not have a CVSS Base Score."
                                  position="left"
                                >
                                  <span>
                                    N/A
                                  </span>
                                </Tooltip>
                              }
                            >
                              <CvssVector
                                intl={
                                  Object {
                                    "defaultFormats": Object {},
                                    "defaultLocale": "en",
                                    "defaultRichTextElements": undefined,
                                    "formatDate": [Function],
                                    "formatDateTimeRange": [Function],
                                    "formatDateToParts": [Function],
                                    "formatDisplayName": [Function],
                                    "formatList": [Function],
                                    "formatListToParts": [Function],
                                    "formatMessage": [Function],
                                    "formatNumber": [Function],
                                    "formatNumberToParts": [Function],
                                    "formatPlural": [Function],
                                    "formatRelativeTime": [Function],
                                    "formatTime": [Function],
                                    "formatTimeToParts": [Function],
                                    "formats": Object {},
                                    "formatters": Object {
                                      "getDateTimeFormat": [Function],
                                      "getDisplayNames": [Function],
                                      "getListFormat": [Function],
                                      "getMessageFormat": [Function],
                                      "getNumberFormat": [Function],
                                      "getPluralRules": [Function],
                                      "getRelativeTimeFormat": [Function],
                                    },
                                    "locale": "en",
                                    "messages": Object {
                                      "default.cancel": "Cancel",
                                      "default.delete": "Delete",
                                      "default.remove": "Remove",
                                      "default.save": "Save",
                                    },
                                    "onError": [Function],
                                    "textComponent": Symbol(react.fragment),
                                    "timeZone": undefined,
                                    "wrapRichTextChunksInFragment": undefined,
                                  }
                                }
                                score={
                                  <Tooltip
                                    content="CVEs published before 2005 (approximately) did not have a CVSS Base Score."
                                    position="left"
                                  >
                                    <span>
                                      N/A
                                    </span>
                                  </Tooltip>
                                }
                              >
                                <TextContent>
                                  <div
                                    className="pf-c-content"
                                  >
                                    <WithLoader
                                      loading={true}
                                    >
                                      <Skeleton
                                        isDark={false}
                                        size="lg"
                                      >
                                        <div
                                          className="ins-c-skeleton ins-c-skeleton__lg"
                                        >
                                           
                                        </div>
                                      </Skeleton>
                                    </WithLoader>
                                    <WithLoader
                                      loading={true}
                                    >
                                      <Skeleton
                                        isDark={false}
                                        size="lg"
                                      >
                                        <div
                                          className="ins-c-skeleton ins-c-skeleton__lg"
                                        >
                                           
                                        </div>
                                      </Skeleton>
                                    </WithLoader>
                                  </div>
                                </TextContent>
                              </CvssVector>
                            </injectIntl(CvssVector)>
                          </div>
                        </StackItem>
                      </div>
                    </Stack>
                  </CVEDetailsPageSidebar>
                </injectIntl(CVEDetailsPageSidebar)>
              </div>
            </GridItem>
            <injectIntl(CSAwRuleBox)>
              <CSAwRuleBox
                intl={
                  Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "defaultRichTextElements": undefined,
                    "formatDate": [Function],
                    "formatDateTimeRange": [Function],
                    "formatDateToParts": [Function],
                    "formatDisplayName": [Function],
                    "formatList": [Function],
                    "formatListToParts": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatNumberToParts": [Function],
                    "formatPlural": [Function],
                    "formatRelativeTime": [Function],
                    "formatTime": [Function],
                    "formatTimeToParts": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getDisplayNames": [Function],
                      "getListFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralRules": [Function],
                      "getRelativeTimeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {
                      "default.cancel": "Cancel",
                      "default.delete": "Delete",
                      "default.remove": "Remove",
                      "default.save": "Save",
                    },
                    "onError": [Function],
                    "textComponent": Symbol(react.fragment),
                    "timeZone": undefined,
                    "wrapRichTextChunksInFragment": undefined,
                  }
                }
                rules={Array []}
              />
            </injectIntl(CSAwRuleBox)>
          </div>
        </Grid>
      </CVEDetailsPageSummary>
    </Router>
  </BrowserRouter>
</Provider>
`;

exports[`CVEDetailsPageSummary component should render without data 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <CVEDetailsPageSummary
        data={
          Object {
            "data": Object {},
            "isLoading": false,
            "meta": Object {},
          }
        }
      >
        <Grid
          hasGutter={true}
        >
          <div
            className="pf-l-grid pf-m-gutter"
          >
            <GridItem
              md={8}
              sm={12}
            >
              <div
                className="pf-l-grid__item pf-m-12-col-on-sm pf-m-8-col-on-md"
              >
                <WithLoader
                  loading={true}
                  variant="spinner"
                >
                  <Spinner
                    centered={true}
                  >
                    <div
                      className="ins-c-spinner ins-m-center"
                      role="status"
                    >
                      <span
                        className="pf-u-screen-reader"
                      >
                        Loading...
                      </span>
                    </div>
                  </Spinner>
                </WithLoader>
              </div>
            </GridItem>
            <GridItem
              className="pf-u-mt-sm pf-u-ml-sm"
              md={4}
              sm={12}
            >
              <div
                className="pf-l-grid__item pf-m-12-col-on-sm pf-m-4-col-on-md pf-u-mt-sm pf-u-ml-sm"
              >
                <injectIntl(CVEDetailsPageSidebar)
                  cveAttributes={Object {}}
                >
                  <CVEDetailsPageSidebar
                    cveAttributes={Object {}}
                    intl={
                      Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "defaultRichTextElements": undefined,
                        "formatDate": [Function],
                        "formatDateTimeRange": [Function],
                        "formatDateToParts": [Function],
                        "formatDisplayName": [Function],
                        "formatList": [Function],
                        "formatListToParts": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatNumberToParts": [Function],
                        "formatPlural": [Function],
                        "formatRelativeTime": [Function],
                        "formatTime": [Function],
                        "formatTimeToParts": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getDisplayNames": [Function],
                          "getListFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralRules": [Function],
                          "getRelativeTimeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {
                          "default.cancel": "Cancel",
                          "default.delete": "Delete",
                          "default.remove": "Remove",
                          "default.save": "Save",
                        },
                        "onError": [Function],
                        "textComponent": Symbol(react.fragment),
                        "timeZone": undefined,
                        "wrapRichTextChunksInFragment": undefined,
                      }
                    }
                  >
                    <Stack
                      hasGutter={true}
                    >
                      <div
                        className="pf-l-stack pf-m-gutter"
                      >
                        <StackItem>
                          <div
                            className="pf-l-stack__item"
                          >
                            <Split
                              hasGutter={true}
                            >
                              <div
                                className="pf-l-split pf-m-gutter"
                              >
                                <SplitItem>
                                  <div
                                    className="pf-l-split__item"
                                  >
                                    <SnippetWithHeaderAndPopover
                                      content={
                                        <Stack
                                          className="pf-u-p-xs"
                                        >
                                          <StackItem>
                                            <Label
                                              className="pf-u-mb-xs"
                                            >
                                              Justification note
                                            </Label>
                                          </StackItem>
                                          <StackItem>
                                            --
                                          </StackItem>
                                        </Stack>
                                      }
                                      title="Business risk"
                                    >
                                      <Popover
                                        appendTo={null}
                                        aria-label="Business risk popover"
                                        bodyContent={
                                          <Stack
                                            className="pf-u-p-xs"
                                          >
                                            <StackItem>
                                              <Label
                                                className="pf-u-mb-xs"
                                              >
                                                Justification note
                                              </Label>
                                            </StackItem>
                                            <StackItem>
                                              --
                                            </StackItem>
                                          </Stack>
                                        }
                                        headerContent=""
                                        id="popover"
                                        position="right"
                                      >
                                        <Popper
                                          appendTo={null}
                                          distance={25}
                                          enableFlip={true}
                                          flipBehavior={
                                            Array [
                                              "top",
                                              "right",
                                              "bottom",
                                              "left",
                                              "top",
                                              "right",
                                              "bottom",
                                            ]
                                          }
                                          isVisible={false}
                                          onDocumentClick={[Function]}
                                          onDocumentKeyDown={[Function]}
                                          onTriggerClick={[Function]}
                                          onTriggerEnter={[Function]}
                                          placement="right"
                                          popper={
                                            <FocusTrap
                                              active={false}
                                              aria-describedby="popover-popover-body"
                                              aria-label="Business risk popover"
                                              aria-modal="true"
                                              className="pf-c-popover"
                                              focusTrapOptions={
                                                Object {
                                                  "clickOutsideDeactivates": true,
                                                  "fallbackFocus": [Function],
                                                  "returnFocusOnDeactivate": true,
                                                }
                                              }
                                              onMouseDown={[Function]}
                                              paused={false}
                                              preventScrollOnDeactivate={true}
                                              role="dialog"
                                              style={
                                                Object {
                                                  "maxWidth": null,
                                                  "minWidth": null,
                                                  "opacity": 0,
                                                  "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                                }
                                              }
                                            >
                                              <PopoverArrow />
                                              <PopoverContent>
                                                <PopoverCloseButton
                                                  aria-label="Close"
                                                  onClose={[Function]}
                                                />
                                                
                                                <PopoverBody
                                                  id="popover-popover-body"
                                                >
                                                  <Stack
                                                    className="pf-u-p-xs"
                                                  >
                                                    <StackItem>
                                                      <Label
                                                        className="pf-u-mb-xs"
                                                      >
                                                        Justification note
                                                      </Label>
                                                    </StackItem>
                                                    <StackItem>
                                                      --
                                                    </StackItem>
                                                  </Stack>
                                                </PopoverBody>
                                              </PopoverContent>
                                            </FocusTrap>
                                          }
                                          popperMatchesTriggerWidth={false}
                                          positionModifiers={
                                            Object {
                                              "bottom": "pf-m-bottom",
                                              "left": "pf-m-left",
                                              "right": "pf-m-right",
                                              "top": "pf-m-top",
                                            }
                                          }
                                          trigger={
                                            <Stack
                                              className="popover-content"
                                            >
                                              <StackItem>
                                                <Label
                                                  isLarge={true}
                                                >
                                                  Business risk
                                                </Label>
                                              </StackItem>
                                              <StackItem>
                                                <a />
                                              </StackItem>
                                            </Stack>
                                          }
                                          zIndex={9999}
                                        >
                                          <FindRefWrapper
                                            onFoundRef={[Function]}
                                          >
                                            <Stack
                                              className="popover-content"
                                            >
                                              <div
                                                className="pf-l-stack popover-content"
                                              >
                                                <StackItem>
                                                  <div
                                                    className="pf-l-stack__item"
                                                  >
                                                    <Label
                                                      isLarge={true}
                                                    >
                                                      <span
                                                        className="vuln-label "
                                                        style={
                                                          Object {
                                                            "display": "block",
                                                            "fontSize": "medium",
                                                          }
                                                        }
                                                      >
                                                        Business risk
                                                      </span>
                                                    </Label>
                                                  </div>
                                                </StackItem>
                                                <StackItem>
                                                  <div
                                                    className="pf-l-stack__item"
                                                  >
                                                    <a />
                                                  </div>
                                                </StackItem>
                                              </div>
                                            </Stack>
                                          </FindRefWrapper>
                                        </Popper>
                                      </Popover>
                                    </SnippetWithHeaderAndPopover>
                                  </div>
                                </SplitItem>
                                <SplitItem
                                  className="pf-u-ml-lg"
                                >
                                  <div
                                    className="pf-l-split__item pf-u-ml-lg"
                                  >
                                    <SnippetWithHeaderAndPopover
                                      content={
                                        <Stack
                                          className="pf-u-p-xs"
                                        >
                                          <StackItem>
                                            <Label
                                              className="pf-u-mb-xs"
                                            >
                                              CVE status
                                            </Label>
                                            --
                                            <Label
                                              className="pf-u-mb-xs pf-u-mt-sm"
                                            >
                                              Justification note
                                            </Label>
                                            --
                                          </StackItem>
                                        </Stack>
                                      }
                                      title="Status"
                                      value={
                                        <span>
                                           
                                        </span>
                                      }
                                    >
                                      <Popover
                                        appendTo={null}
                                        aria-label="Business risk popover"
                                        bodyContent={
                                          <Stack
                                            className="pf-u-p-xs"
                                          >
                                            <StackItem>
                                              <Label
                                                className="pf-u-mb-xs"
                                              >
                                                CVE status
                                              </Label>
                                              --
                                              <Label
                                                className="pf-u-mb-xs pf-u-mt-sm"
                                              >
                                                Justification note
                                              </Label>
                                              --
                                            </StackItem>
                                          </Stack>
                                        }
                                        headerContent=""
                                        id="popover"
                                        position="right"
                                      >
                                        <Popper
                                          appendTo={null}
                                          distance={25}
                                          enableFlip={true}
                                          flipBehavior={
                                            Array [
                                              "top",
                                              "right",
                                              "bottom",
                                              "left",
                                              "top",
                                              "right",
                                              "bottom",
                                            ]
                                          }
                                          isVisible={false}
                                          onDocumentClick={[Function]}
                                          onDocumentKeyDown={[Function]}
                                          onTriggerClick={[Function]}
                                          onTriggerEnter={[Function]}
                                          placement="right"
                                          popper={
                                            <FocusTrap
                                              active={false}
                                              aria-describedby="popover-popover-body"
                                              aria-label="Business risk popover"
                                              aria-modal="true"
                                              className="pf-c-popover"
                                              focusTrapOptions={
                                                Object {
                                                  "clickOutsideDeactivates": true,
                                                  "fallbackFocus": [Function],
                                                  "returnFocusOnDeactivate": true,
                                                }
                                              }
                                              onMouseDown={[Function]}
                                              paused={false}
                                              preventScrollOnDeactivate={true}
                                              role="dialog"
                                              style={
                                                Object {
                                                  "maxWidth": null,
                                                  "minWidth": null,
                                                  "opacity": 0,
                                                  "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                                }
                                              }
                                            >
                                              <PopoverArrow />
                                              <PopoverContent>
                                                <PopoverCloseButton
                                                  aria-label="Close"
                                                  onClose={[Function]}
                                                />
                                                
                                                <PopoverBody
                                                  id="popover-popover-body"
                                                >
                                                  <Stack
                                                    className="pf-u-p-xs"
                                                  >
                                                    <StackItem>
                                                      <Label
                                                        className="pf-u-mb-xs"
                                                      >
                                                        CVE status
                                                      </Label>
                                                      --
                                                      <Label
                                                        className="pf-u-mb-xs pf-u-mt-sm"
                                                      >
                                                        Justification note
                                                      </Label>
                                                      --
                                                    </StackItem>
                                                  </Stack>
                                                </PopoverBody>
                                              </PopoverContent>
                                            </FocusTrap>
                                          }
                                          popperMatchesTriggerWidth={false}
                                          positionModifiers={
                                            Object {
                                              "bottom": "pf-m-bottom",
                                              "left": "pf-m-left",
                                              "right": "pf-m-right",
                                              "top": "pf-m-top",
                                            }
                                          }
                                          trigger={
                                            <Stack
                                              className="popover-content"
                                            >
                                              <StackItem>
                                                <Label
                                                  isLarge={true}
                                                >
                                                  Status
                                                </Label>
                                              </StackItem>
                                              <StackItem>
                                                <a>
                                                  <span>
                                                     
                                                  </span>
                                                </a>
                                              </StackItem>
                                            </Stack>
                                          }
                                          zIndex={9999}
                                        >
                                          <FindRefWrapper
                                            onFoundRef={[Function]}
                                          >
                                            <Stack
                                              className="popover-content"
                                            >
                                              <div
                                                className="pf-l-stack popover-content"
                                              >
                                                <StackItem>
                                                  <div
                                                    className="pf-l-stack__item"
                                                  >
                                                    <Label
                                                      isLarge={true}
                                                    >
                                                      <span
                                                        className="vuln-label "
                                                        style={
                                                          Object {
                                                            "display": "block",
                                                            "fontSize": "medium",
                                                          }
                                                        }
                                                      >
                                                        Status
                                                      </span>
                                                    </Label>
                                                  </div>
                                                </StackItem>
                                                <StackItem>
                                                  <div
                                                    className="pf-l-stack__item"
                                                  >
                                                    <a>
                                                      <span>
                                                         
                                                      </span>
                                                    </a>
                                                  </div>
                                                </StackItem>
                                              </div>
                                            </Stack>
                                          </FindRefWrapper>
                                        </Popper>
                                      </Popover>
                                    </SnippetWithHeaderAndPopover>
                                  </div>
                                </SplitItem>
                              </div>
                            </Split>
                          </div>
                        </StackItem>
                        <StackItem>
                          <div
                            className="pf-l-stack__item"
                          >
                            <Label
                              className="pf-u-mb-xs"
                              isLarge={true}
                            >
                              <span
                                className="vuln-label pf-u-mb-xs"
                                style={
                                  Object {
                                    "display": "block",
                                    "fontSize": "medium",
                                  }
                                }
                              >
                                Severity
                              </span>
                            </Label>
                            <span
                              id="severity-shield"
                              style={
                                Object {
                                  "color": "black",
                                }
                              }
                            >
                              <Shield
                                hasLabel={true}
                                hasTooltip={true}
                                impact="Unknown"
                                size="sm"
                              >
                                <span>
                                  <Tooltip
                                    content={<div />}
                                    position="bottom"
                                  >
                                    <Popper
                                      appendTo={[Function]}
                                      distance={15}
                                      enableFlip={true}
                                      flipBehavior={
                                        Array [
                                          "top",
                                          "right",
                                          "bottom",
                                          "left",
                                          "top",
                                          "right",
                                          "bottom",
                                        ]
                                      }
                                      isVisible={false}
                                      onBlur={[Function]}
                                      onDocumentClick={false}
                                      onDocumentKeyDown={[Function]}
                                      onFocus={[Function]}
                                      onMouseEnter={[Function]}
                                      onMouseLeave={[Function]}
                                      onTriggerEnter={[Function]}
                                      placement="bottom"
                                      popper={
                                        <div
                                          className="pf-c-tooltip"
                                          id="pf-tooltip-2"
                                          role="tooltip"
                                          style={
                                            Object {
                                              "maxWidth": null,
                                              "opacity": 0,
                                              "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                            }
                                          }
                                        >
                                          <TooltipArrow />
                                          <TooltipContent
                                            isLeftAligned={false}
                                          >
                                            <div />
                                          </TooltipContent>
                                        </div>
                                      }
                                      popperMatchesTriggerWidth={false}
                                      positionModifiers={
                                        Object {
                                          "bottom": "pf-m-bottom",
                                          "left": "pf-m-left",
                                          "right": "pf-m-right",
                                          "top": "pf-m-top",
                                        }
                                      }
                                      trigger={
                                        <span>
                                          <QuestionIcon
                                            aria-hidden="false"
                                            aria-label="Unknown"
                                            color="#737679"
                                            noVerticalAlign={false}
                                            size="sm"
                                          />
                                           
                                          Unknown
                                        </span>
                                      }
                                      zIndex={9999}
                                    >
                                      <FindRefWrapper
                                        onFoundRef={[Function]}
                                      >
                                        <span>
                                          <QuestionIcon
                                            aria-hidden="false"
                                            aria-label="Unknown"
                                            color="#737679"
                                            noVerticalAlign={false}
                                            size="sm"
                                          >
                                            <svg
                                              aria-hidden="false"
                                              aria-label="Unknown"
                                              aria-labelledby={null}
                                              fill="#737679"
                                              height="1em"
                                              role="img"
                                              style={
                                                Object {
                                                  "verticalAlign": "-0.125em",
                                                }
                                              }
                                              viewBox="0 0 384 512"
                                              width="1em"
                                            >
                                              <path
                                                d="M202.021 0C122.202 0 70.503 32.703 29.914 91.026c-7.363 10.58-5.093 25.086 5.178 32.874l43.138 32.709c10.373 7.865 25.132 6.026 33.253-4.148 25.049-31.381 43.63-49.449 82.757-49.449 30.764 0 68.816 19.799 68.816 49.631 0 22.552-18.617 34.134-48.993 51.164-35.423 19.86-82.299 44.576-82.299 106.405V320c0 13.255 10.745 24 24 24h72.471c13.255 0 24-10.745 24-24v-5.773c0-42.86 125.268-44.645 125.268-160.627C377.504 66.256 286.902 0 202.021 0zM192 373.459c-38.196 0-69.271 31.075-69.271 69.271 0 38.195 31.075 69.27 69.271 69.27s69.271-31.075 69.271-69.271-31.075-69.27-69.271-69.27z"
                                              />
                                            </svg>
                                          </QuestionIcon>
                                           
                                          Unknown
                                        </span>
                                      </FindRefWrapper>
                                    </Popper>
                                  </Tooltip>
                                </span>
                              </Shield>
                            </span>
                          </div>
                        </StackItem>
                        <StackItem>
                          <div
                            className="pf-l-stack__item"
                          >
                            <injectIntl(CvssVector)
                              score={
                                <Tooltip
                                  content="CVEs published before 2005 (approximately) did not have a CVSS Base Score."
                                  position="left"
                                >
                                  <span>
                                    N/A
                                  </span>
                                </Tooltip>
                              }
                            >
                              <CvssVector
                                intl={
                                  Object {
                                    "defaultFormats": Object {},
                                    "defaultLocale": "en",
                                    "defaultRichTextElements": undefined,
                                    "formatDate": [Function],
                                    "formatDateTimeRange": [Function],
                                    "formatDateToParts": [Function],
                                    "formatDisplayName": [Function],
                                    "formatList": [Function],
                                    "formatListToParts": [Function],
                                    "formatMessage": [Function],
                                    "formatNumber": [Function],
                                    "formatNumberToParts": [Function],
                                    "formatPlural": [Function],
                                    "formatRelativeTime": [Function],
                                    "formatTime": [Function],
                                    "formatTimeToParts": [Function],
                                    "formats": Object {},
                                    "formatters": Object {
                                      "getDateTimeFormat": [Function],
                                      "getDisplayNames": [Function],
                                      "getListFormat": [Function],
                                      "getMessageFormat": [Function],
                                      "getNumberFormat": [Function],
                                      "getPluralRules": [Function],
                                      "getRelativeTimeFormat": [Function],
                                    },
                                    "locale": "en",
                                    "messages": Object {
                                      "default.cancel": "Cancel",
                                      "default.delete": "Delete",
                                      "default.remove": "Remove",
                                      "default.save": "Save",
                                    },
                                    "onError": [Function],
                                    "textComponent": Symbol(react.fragment),
                                    "timeZone": undefined,
                                    "wrapRichTextChunksInFragment": undefined,
                                  }
                                }
                                score={
                                  <Tooltip
                                    content="CVEs published before 2005 (approximately) did not have a CVSS Base Score."
                                    position="left"
                                  >
                                    <span>
                                      N/A
                                    </span>
                                  </Tooltip>
                                }
                              >
                                <TextContent>
                                  <div
                                    className="pf-c-content"
                                  >
                                    <WithLoader
                                      loading={true}
                                    >
                                      <Skeleton
                                        isDark={false}
                                        size="lg"
                                      >
                                        <div
                                          className="ins-c-skeleton ins-c-skeleton__lg"
                                        >
                                           
                                        </div>
                                      </Skeleton>
                                    </WithLoader>
                                    <WithLoader
                                      loading={true}
                                    >
                                      <Skeleton
                                        isDark={false}
                                        size="lg"
                                      >
                                        <div
                                          className="ins-c-skeleton ins-c-skeleton__lg"
                                        >
                                           
                                        </div>
                                      </Skeleton>
                                    </WithLoader>
                                  </div>
                                </TextContent>
                              </CvssVector>
                            </injectIntl(CvssVector)>
                          </div>
                        </StackItem>
                      </div>
                    </Stack>
                  </CVEDetailsPageSidebar>
                </injectIntl(CVEDetailsPageSidebar)>
              </div>
            </GridItem>
            <injectIntl(CSAwRuleBox)>
              <CSAwRuleBox
                intl={
                  Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "defaultRichTextElements": undefined,
                    "formatDate": [Function],
                    "formatDateTimeRange": [Function],
                    "formatDateToParts": [Function],
                    "formatDisplayName": [Function],
                    "formatList": [Function],
                    "formatListToParts": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatNumberToParts": [Function],
                    "formatPlural": [Function],
                    "formatRelativeTime": [Function],
                    "formatTime": [Function],
                    "formatTimeToParts": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getDisplayNames": [Function],
                      "getListFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralRules": [Function],
                      "getRelativeTimeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {
                      "default.cancel": "Cancel",
                      "default.delete": "Delete",
                      "default.remove": "Remove",
                      "default.save": "Save",
                    },
                    "onError": [Function],
                    "textComponent": Symbol(react.fragment),
                    "timeZone": undefined,
                    "wrapRichTextChunksInFragment": undefined,
                  }
                }
                rules={Array []}
              />
            </injectIntl(CSAwRuleBox)>
          </div>
        </Grid>
      </CVEDetailsPageSummary>
    </Router>
  </BrowserRouter>
</Provider>
`;
