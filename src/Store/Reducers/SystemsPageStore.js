import * as ActionTypes from '../ActionTypes';
import { error, applyGlobalFilter } from './reducersHelper';
import { SYSTEMS_DEFAULT_FILTERS, SYSTEMS_HEADER } from './../../Helpers/constants';

export const initialState = {
    isLoading: true,
    payload: {},
    metadata: {
        page: 1,
        limit: 20,
        offet: 0,
        total_items: 0
    },
    params: {
        page: 1,
        page_size: 20,
        sort: '-updated',
        ...SYSTEMS_DEFAULT_FILTERS
    },
    timestamp: new Date(),
    error,
    columns: SYSTEMS_HEADER
};

export const SystemsPageStore = (state = initialState, action) => {
    let newState = { ...state };
    switch (action.type) {
        case ActionTypes.CHANGE_SYSTEMS_PARAMS:
            newState.params = {
                ...newState.params,
                ...action.payload,
                page_size: action.payload.page_size || newState.params.page_size
            };
            return newState;
        case ActionTypes.CHANGE_COLUMNS_SYSTEM_LIST:
            return {
                ...newState,
                columns: action.payload
            };
        case ActionTypes.CLEAR_SYSTEMS_STORE:
            return {
                ...initialState,
                columns: newState.columns
            };
        case ActionTypes.SET_GLOBAL_FILTER:
            newState.params = {
                ...applyGlobalFilter(newState.params, action.payload)
            };
            return newState;
        case ActionTypes.LOAD_ENTITIES + '_REJECTED':
            newState.error.hasError = true;
            newState.error.errorCode = Number(action.payload.status);
            return newState;
        default:
            return state;
    }
};
