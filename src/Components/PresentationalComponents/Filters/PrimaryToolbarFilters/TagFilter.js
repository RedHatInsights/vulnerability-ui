import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';
import React, { useState } from 'react';
import TagFilter from '../CustomFilters/TagFilter';
import { useCompareEffect } from '../../../../Helpers/Hooks';

const useTagFilter = (apply, globalFilterTags) => {
    const [selectedTags, setSelectedTags] = useState([]);

    useCompareEffect(() => {
        apply({ tags: selectedTags.map(tags => tags.string).join(','), page: 1 });
    }, selectedTags);

    return {
        label: 'Tags',
        type: conditionalFilterType.custom,
        key: 'tags',
        urlParam: 'tags',
        filterValues: {
            children: (<TagFilter
                key="tags"
                selectedTags={selectedTags}
                setSelectedTags={setSelectedTags}
                globalTags={[]}
                selectProps={{ width: 'auto', style: { maxWidth: 400 }, className: 'system-toolbar-tag-filter' }}
                externalParams={globalFilterTags.length > 0 ? { tags: globalFilterTags.join(',') } : {}}
            />)
        }
    };
};

export default useTagFilter;
