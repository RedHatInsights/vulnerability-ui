// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CSAW Rule Box Should render with rules 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <injectIntl(CSAwRuleBox)
        rules={
          Array [
            Object {
              "associated_cves": Array [
                "CVE-2019-11135",
              ],
              "change_risk": 3,
              "description": "CVE-2019-11135: \\"TAA\\" kernel side-channel",
              "generic": "An implementation issue similar to MDS was found in many x86 microprocessors.

An unprivileged attacker can use this flaw to bypass memory restrictions in order to read cached data from the processor and sibling logical processors. This allows malicious users to access information from the local system, and allows malicious virtual machines or users thereof to access information from other guests or the host system.
",
              "kbase_node_id": 4572391,
              "playbook_count": 1,
              "reboot_required": false,
              "rule_id": "CVE_2019_11135_cpu_taa|CVE_2019_11135_CPU_TAA_KERNEL",
              "rule_impact": 2,
              "summary": "An issue was found in the manner in which certain x86 microprocessors manage thread memory access synchronization. It has been assigned [CVE-2019-11135](https://access.redhat.com/security/cve/CVE-2019-11135). Complete mitigations for this issue require microcode and kernel updates, and disabling hyperthreading where applicable.

An unprivileged user can use this flaw to gain read access to privileged memory that would otherwise be inacessible, including from other virtual machines on the same host system.
",
            },
          ]
        }
        synopsis="CVE-2019-11135"
      >
        <CSAwRuleBox
          intl={
            Object {
              "defaultFormats": Object {},
              "defaultLocale": "en",
              "defaultRichTextElements": undefined,
              "formatDate": [Function],
              "formatDateTimeRange": [Function],
              "formatDateToParts": [Function],
              "formatDisplayName": [Function],
              "formatList": [Function],
              "formatListToParts": [Function],
              "formatMessage": [Function],
              "formatNumber": [Function],
              "formatNumberToParts": [Function],
              "formatPlural": [Function],
              "formatRelativeTime": [Function],
              "formatTime": [Function],
              "formatTimeToParts": [Function],
              "formats": Object {},
              "formatters": Object {
                "getDateTimeFormat": [Function],
                "getDisplayNames": [Function],
                "getListFormat": [Function],
                "getMessageFormat": [Function],
                "getNumberFormat": [Function],
                "getPluralRules": [Function],
                "getRelativeTimeFormat": [Function],
              },
              "locale": "en",
              "messages": Object {
                "default.cancel": "Cancel",
                "default.delete": "Delete",
                "default.remove": "Remove",
                "default.save": "Save",
              },
              "onError": [Function],
              "textComponent": Symbol(react.fragment),
              "timeZone": undefined,
              "wrapRichTextChunksInFragment": undefined,
            }
          }
          rules={
            Array [
              Object {
                "associated_cves": Array [
                  "CVE-2019-11135",
                ],
                "change_risk": 3,
                "description": "CVE-2019-11135: \\"TAA\\" kernel side-channel",
                "generic": "An implementation issue similar to MDS was found in many x86 microprocessors.

An unprivileged attacker can use this flaw to bypass memory restrictions in order to read cached data from the processor and sibling logical processors. This allows malicious users to access information from the local system, and allows malicious virtual machines or users thereof to access information from other guests or the host system.
",
                "kbase_node_id": 4572391,
                "playbook_count": 1,
                "reboot_required": false,
                "rule_id": "CVE_2019_11135_cpu_taa|CVE_2019_11135_CPU_TAA_KERNEL",
                "rule_impact": 2,
                "summary": "An issue was found in the manner in which certain x86 microprocessors manage thread memory access synchronization. It has been assigned [CVE-2019-11135](https://access.redhat.com/security/cve/CVE-2019-11135). Complete mitigations for this issue require microcode and kernel updates, and disabling hyperthreading where applicable.

An unprivileged user can use this flaw to gain read access to privileged memory that would otherwise be inacessible, including from other virtual machines on the same host system.
",
              },
            ]
          }
          synopsis="CVE-2019-11135"
        >
          <Card
            className="card-box"
            key="CVE_2019_11135_cpu_taa|CVE_2019_11135_CPU_TAA_KERNEL"
            ouiaId="security-rule-card-0"
          >
            <article
              className="pf-c-card card-box"
              data-ouia-component-id="security-rule-card-0"
              data-ouia-component-type="PF4/Card"
              data-ouia-safe={true}
              id=""
            >
              <ExpandableSection
                className=""
                contentId=""
                isActive={false}
                isDetached={false}
                onToggle={[Function]}
                toggleText={
                  <Split>
                    <SplitItem
                      className="pf-u-mr-xl"
                    >
                      <TextContent>
                        <Text
                          component="h4"
                        >
                          <CSAwLabel
                            className="pf-u-mr-sm"
                          />
                          CVE-2019-11135: "TAA" kernel side-channel
                        </Text>
                      </TextContent>
                    </SplitItem>
                    <SplitItem
                      id="filter-affected-systems-split"
                    >
                      <TextContent>
                        <Text
                          component="small"
                          id="filter-affected-systems"
                          onClick={[Function]}
                        >
                          <Link
                            to="/cves/CVE-2019-11135/?rule_key=CVE_2019_11135_cpu_taa|CVE_2019_11135_CPU_TAA_KERNEL"
                          >
                            Filter by affected systems
                          </Link>
                        </Text>
                      </TextContent>
                    </SplitItem>
                  </Split>
                }
                toggleTextCollapsed=""
                toggleTextExpanded=""
              >
                <div
                  className="pf-c-expandable-section"
                >
                  <button
                    className="pf-c-expandable-section__toggle"
                    onClick={[Function]}
                    type="button"
                  >
                    <span
                      className="pf-c-expandable-section__toggle-icon"
                    >
                      <AngleRightIcon
                        aria-hidden={true}
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                      >
                        <svg
                          aria-hidden={true}
                          aria-labelledby={null}
                          fill="currentColor"
                          height="1em"
                          role="img"
                          style={
                            Object {
                              "verticalAlign": "-0.125em",
                            }
                          }
                          viewBox="0 0 256 512"
                          width="1em"
                        >
                          <path
                            d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                          />
                        </svg>
                      </AngleRightIcon>
                    </span>
                    <span
                      className="pf-c-expandable-section__toggle-text"
                    >
                      <Split>
                        <div
                          className="pf-l-split"
                        >
                          <SplitItem
                            className="pf-u-mr-xl"
                          >
                            <div
                              className="pf-l-split__item pf-u-mr-xl"
                            >
                              <TextContent>
                                <div
                                  className="pf-c-content"
                                >
                                  <Text
                                    component="h4"
                                  >
                                    <h4
                                      className=""
                                      data-ouia-component-id="OUIA-Generated-Text-5"
                                      data-ouia-component-type="PF4/Text"
                                      data-ouia-safe={true}
                                      data-pf-content={true}
                                    >
                                      <CSAwLabel
                                        className="pf-u-mr-sm"
                                      >
                                        <Tooltip
                                          content={
                                            <Memo(MemoizedFormattedMessage)
                                              defaultMessage="Denotes a security rule. Security rules are written by Red Hat to help you configure your systems"
                                              description="Tooltip"
                                              id="rules.iconTooolip"
                                            />
                                          }
                                        >
                                          <Popper
                                            appendTo={[Function]}
                                            distance={15}
                                            enableFlip={true}
                                            flipBehavior={
                                              Array [
                                                "top",
                                                "right",
                                                "bottom",
                                                "left",
                                                "top",
                                                "right",
                                                "bottom",
                                              ]
                                            }
                                            isVisible={false}
                                            onBlur={[Function]}
                                            onDocumentClick={false}
                                            onDocumentKeyDown={[Function]}
                                            onFocus={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            onTriggerEnter={[Function]}
                                            placement="top"
                                            popper={
                                              <div
                                                className="pf-c-tooltip"
                                                id="pf-tooltip-13"
                                                role="tooltip"
                                                style={
                                                  Object {
                                                    "maxWidth": null,
                                                    "opacity": 0,
                                                    "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                                  }
                                                }
                                              >
                                                <TooltipArrow />
                                                <TooltipContent
                                                  isLeftAligned={false}
                                                >
                                                  <Memo(MemoizedFormattedMessage)
                                                    defaultMessage="Denotes a security rule. Security rules are written by Red Hat to help you configure your systems"
                                                    description="Tooltip"
                                                    id="rules.iconTooolip"
                                                  />
                                                </TooltipContent>
                                              </div>
                                            }
                                            popperMatchesTriggerWidth={false}
                                            positionModifiers={
                                              Object {
                                                "bottom": "pf-m-bottom",
                                                "left": "pf-m-left",
                                                "right": "pf-m-right",
                                                "top": "pf-m-top",
                                              }
                                            }
                                            trigger={
                                              <Label
                                                className={
                                                  Array [
                                                    "cve-labels",
                                                    "pf-u-mr-sm",
                                                  ]
                                                }
                                                color="blue"
                                                style={Object {}}
                                              >
                                                <Memo(MemoizedFormattedMessage)
                                                  defaultMessage="Security rule "
                                                  description="Security rule label"
                                                  id="securityRuleLabel"
                                                />
                                              </Label>
                                            }
                                            zIndex={9999}
                                          >
                                            <FindRefWrapper
                                              onFoundRef={[Function]}
                                            >
                                              <Label
                                                className={
                                                  Array [
                                                    "cve-labels",
                                                    "pf-u-mr-sm",
                                                  ]
                                                }
                                                color="blue"
                                                style={Object {}}
                                              >
                                                <span
                                                  className="pf-c-label pf-m-blue cve-labels pf-u-mr-sm"
                                                  style={Object {}}
                                                >
                                                  <span
                                                    className="pf-c-label__content"
                                                  >
                                                    <FormattedMessage
                                                      defaultMessage="Security rule "
                                                      description="Security rule label"
                                                      id="securityRuleLabel"
                                                    >
                                                      Security rule 
                                                    </FormattedMessage>
                                                  </span>
                                                </span>
                                              </Label>
                                            </FindRefWrapper>
                                          </Popper>
                                        </Tooltip>
                                      </CSAwLabel>
                                      CVE-2019-11135: "TAA" kernel side-channel
                                    </h4>
                                  </Text>
                                </div>
                              </TextContent>
                            </div>
                          </SplitItem>
                          <SplitItem
                            id="filter-affected-systems-split"
                          >
                            <div
                              className="pf-l-split__item"
                              id="filter-affected-systems-split"
                            >
                              <TextContent>
                                <div
                                  className="pf-c-content"
                                >
                                  <Text
                                    component="small"
                                    id="filter-affected-systems"
                                    onClick={[Function]}
                                  >
                                    <small
                                      className=""
                                      data-ouia-component-id="OUIA-Generated-Text-6"
                                      data-ouia-component-type="PF4/Text"
                                      data-ouia-safe={true}
                                      data-pf-content={true}
                                      id="filter-affected-systems"
                                      onClick={[Function]}
                                    >
                                      <Link
                                        key="CVE_2019_11135_cpu_taa|CVE_2019_11135_CPU_TAA_KERNEL"
                                        to="/cves/CVE-2019-11135/?rule_key=CVE_2019_11135_cpu_taa|CVE_2019_11135_CPU_TAA_KERNEL"
                                      >
                                        <LinkAnchor
                                          href="/cves/CVE-2019-11135/?rule_key=CVE_2019_11135_cpu_taa|CVE_2019_11135_CPU_TAA_KERNEL"
                                          navigate={[Function]}
                                        >
                                          <a
                                            href="/cves/CVE-2019-11135/?rule_key=CVE_2019_11135_cpu_taa|CVE_2019_11135_CPU_TAA_KERNEL"
                                            onClick={[Function]}
                                          >
                                            Filter by affected systems
                                          </a>
                                        </LinkAnchor>
                                      </Link>
                                    </small>
                                  </Text>
                                </div>
                              </TextContent>
                            </div>
                          </SplitItem>
                        </div>
                      </Split>
                    </span>
                  </button>
                  <div
                    className="pf-c-expandable-section__content"
                    hidden={true}
                    id=""
                  >
                    <CardBody
                      className="rule-card-body"
                    >
                      <div
                        className="pf-c-card__body rule-card-body"
                      >
                        <Grid
                          hasGutter={true}
                        >
                          <div
                            className="pf-l-grid pf-m-gutter"
                          >
                            <GridItem
                              md={9}
                              sm={12}
                            >
                              <div
                                className="pf-l-grid__item pf-m-12-col-on-sm pf-m-9-col-on-md"
                              >
                                <Stack
                                  hasGutter={true}
                                >
                                  <div
                                    className="pf-l-stack pf-m-gutter"
                                  >
                                    <StackItem>
                                      <div
                                        className="pf-l-stack__item"
                                      >
                                        <injectIntl(CSAwRuleSummary)
                                          text="An issue was found in the manner in which certain x86 microprocessors manage thread memory access synchronization. It has been assigned [CVE-2019-11135](https://access.redhat.com/security/cve/CVE-2019-11135). Complete mitigations for this issue require microcode and kernel updates, and disabling hyperthreading where applicable.

An unprivileged user can use this flaw to gain read access to privileged memory that would otherwise be inacessible, including from other virtual machines on the same host system.
"
                                        >
                                          <CSAwRuleSummary
                                            intl={
                                              Object {
                                                "defaultFormats": Object {},
                                                "defaultLocale": "en",
                                                "defaultRichTextElements": undefined,
                                                "formatDate": [Function],
                                                "formatDateTimeRange": [Function],
                                                "formatDateToParts": [Function],
                                                "formatDisplayName": [Function],
                                                "formatList": [Function],
                                                "formatListToParts": [Function],
                                                "formatMessage": [Function],
                                                "formatNumber": [Function],
                                                "formatNumberToParts": [Function],
                                                "formatPlural": [Function],
                                                "formatRelativeTime": [Function],
                                                "formatTime": [Function],
                                                "formatTimeToParts": [Function],
                                                "formats": Object {},
                                                "formatters": Object {
                                                  "getDateTimeFormat": [Function],
                                                  "getDisplayNames": [Function],
                                                  "getListFormat": [Function],
                                                  "getMessageFormat": [Function],
                                                  "getNumberFormat": [Function],
                                                  "getPluralRules": [Function],
                                                  "getRelativeTimeFormat": [Function],
                                                },
                                                "locale": "en",
                                                "messages": Object {
                                                  "default.cancel": "Cancel",
                                                  "default.delete": "Delete",
                                                  "default.remove": "Remove",
                                                  "default.save": "Save",
                                                },
                                                "onError": [Function],
                                                "textComponent": Symbol(react.fragment),
                                                "timeZone": undefined,
                                                "wrapRichTextChunksInFragment": undefined,
                                              }
                                            }
                                            link={null}
                                            text="An issue was found in the manner in which certain x86 microprocessors manage thread memory access synchronization. It has been assigned [CVE-2019-11135](https://access.redhat.com/security/cve/CVE-2019-11135). Complete mitigations for this issue require microcode and kernel updates, and disabling hyperthreading where applicable.

An unprivileged user can use this flaw to gain read access to privileged memory that would otherwise be inacessible, including from other virtual machines on the same host system.
"
                                            truncate={true}
                                          >
                                            <StackItem
                                              link={null}
                                            >
                                              <div
                                                className="pf-l-stack__item"
                                                link={null}
                                              >
                                                <TextContent
                                                  className="rule-description"
                                                >
                                                  <div
                                                    className="pf-c-content rule-description"
                                                  >
                                                    <Truncate
                                                      collapseText="Read less"
                                                      expandText="Read more"
                                                      length={230}
                                                      spaceBetween={true}
                                                      text="<p>An issue was found in the manner in which certain x86 microprocessors manage thread memory access synchronization. It has been assigned <a target='_blank' href=\\"https://access.redhat.com/security/cve/CVE-2019-11135\\">CVE-2019-11135</a>. Complete mitigations for this issue require microcode and kernel updates, and disabling hyperthreading where applicable.</p>
<p>An unprivileged user can use this flaw to gain read access to privileged memory that would otherwise be inacessible, including from other virtual machines on the same host system.</p>
"
                                                    >
                                                      <Stack
                                                        className="ins-c-truncate is-block"
                                                      >
                                                        <div
                                                          className="pf-l-stack ins-c-truncate is-block"
                                                        >
                                                          <StackItem>
                                                            <div
                                                              className="pf-l-stack__item"
                                                            >
                                                              <span
                                                                dangerouslySetInnerHTML={
                                                                  Object {
                                                                    "__html": "<p>An issue was found in the manner in which certain x86 microprocessors manage thread memory access synchronization. It has been assigned <a target=\\"_blank\\" href=\\"https://access.redhat.com/security/cve/CVE-2019-11135\\">CVE-2019-11...</a></p>",
                                                                  }
                                                                }
                                                                widget-type="InsightsTruncateBlock"
                                                              />
                                                            </div>
                                                          </StackItem>
                                                          <StackItem
                                                            className="pf-u-mt-sm"
                                                          >
                                                            <div
                                                              className="pf-l-stack__item pf-u-mt-sm"
                                                            >
                                                              <Button
                                                                className="ins-c-expand-button"
                                                                onClick={[Function]}
                                                                variant="link"
                                                              >
                                                                <ButtonBase
                                                                  className="ins-c-expand-button"
                                                                  innerRef={null}
                                                                  onClick={[Function]}
                                                                  variant="link"
                                                                >
                                                                  <button
                                                                    aria-disabled={false}
                                                                    aria-label={null}
                                                                    className="pf-c-button pf-m-link ins-c-expand-button"
                                                                    data-ouia-component-id="OUIA-Generated-Button-link-2"
                                                                    data-ouia-component-type="PF4/Button"
                                                                    data-ouia-safe={true}
                                                                    disabled={false}
                                                                    onClick={[Function]}
                                                                    role={null}
                                                                    type="button"
                                                                  >
                                                                    Read more
                                                                  </button>
                                                                </ButtonBase>
                                                              </Button>
                                                            </div>
                                                          </StackItem>
                                                        </div>
                                                      </Stack>
                                                    </Truncate>
                                                  </div>
                                                </TextContent>
                                              </div>
                                            </StackItem>
                                          </CSAwRuleSummary>
                                        </injectIntl(CSAwRuleSummary)>
                                      </div>
                                    </StackItem>
                                    <StackItem>
                                      <div
                                        className="pf-l-stack__item"
                                      >
                                        <TextContent>
                                          <div
                                            className="pf-c-content"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Label
                                                      className="label pf-u-mb-xs"
                                                    >
                                                      <span
                                                        className="vuln-label label pf-u-mb-xs"
                                                        style={
                                                          Object {
                                                            "display": "block",
                                                          }
                                                        }
                                                      >
                                                        Severity
                                                      </span>
                                                    </Label>
                                                    <Tooltip
                                                      content="This rating is given to flaws that may be more difficult to exploit but could still lead to some
            compromise of the confidentiality, integrity, or availability of resources, under certain circumstances.
            These are the types of vulnerabilities that could have had a Critical severity or Important severity
            but are less easily exploited based on a technical evaluation of the flaw, or affect unlikely
            configurations."
                                                    >
                                                      <Popper
                                                        appendTo={[Function]}
                                                        distance={15}
                                                        enableFlip={true}
                                                        flipBehavior={
                                                          Array [
                                                            "top",
                                                            "right",
                                                            "bottom",
                                                            "left",
                                                            "top",
                                                            "right",
                                                            "bottom",
                                                          ]
                                                        }
                                                        isVisible={false}
                                                        onBlur={[Function]}
                                                        onDocumentClick={false}
                                                        onDocumentKeyDown={[Function]}
                                                        onFocus={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onTriggerEnter={[Function]}
                                                        placement="top"
                                                        popper={
                                                          <div
                                                            className="pf-c-tooltip"
                                                            id="pf-tooltip-14"
                                                            role="tooltip"
                                                            style={
                                                              Object {
                                                                "maxWidth": null,
                                                                "opacity": 0,
                                                                "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                                              }
                                                            }
                                                          >
                                                            <TooltipArrow />
                                                            <TooltipContent
                                                              isLeftAligned={false}
                                                            >
                                                              This rating is given to flaws that may be more difficult to exploit but could still lead to some
            compromise of the confidentiality, integrity, or availability of resources, under certain circumstances.
            These are the types of vulnerabilities that could have had a Critical severity or Important severity
            but are less easily exploited based on a technical evaluation of the flaw, or affect unlikely
            configurations.
                                                            </TooltipContent>
                                                          </div>
                                                        }
                                                        popperMatchesTriggerWidth={false}
                                                        positionModifiers={
                                                          Object {
                                                            "bottom": "pf-m-bottom",
                                                            "left": "pf-m-left",
                                                            "right": "pf-m-right",
                                                            "top": "pf-m-top",
                                                          }
                                                        }
                                                        trigger={
                                                          <InsightsLabel
                                                            className="severity-label"
                                                            value={2}
                                                          />
                                                        }
                                                        zIndex={9999}
                                                      >
                                                        <FindRefWrapper
                                                          onFoundRef={[Function]}
                                                        >
                                                          <InsightsLabel
                                                            className="severity-label"
                                                            value={2}
                                                          >
                                                            <Label
                                                              className="severity-label ins-c-label-2"
                                                              icon={
                                                                <EqualsIcon
                                                                  color="currentColor"
                                                                  noVerticalAlign={false}
                                                                  size="sm"
                                                                />
                                                              }
                                                            >
                                                              <span
                                                                className="pf-c-label severity-label ins-c-label-2"
                                                              >
                                                                <span
                                                                  className="pf-c-label__content"
                                                                >
                                                                  <span
                                                                    className="pf-c-label__icon"
                                                                  >
                                                                    <EqualsIcon
                                                                      color="currentColor"
                                                                      noVerticalAlign={false}
                                                                      size="sm"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        aria-labelledby={null}
                                                                        fill="currentColor"
                                                                        height="1em"
                                                                        role="img"
                                                                        style={
                                                                          Object {
                                                                            "verticalAlign": "-0.125em",
                                                                          }
                                                                        }
                                                                        viewBox="0 0 448 512"
                                                                        width="1em"
                                                                      >
                                                                        <path
                                                                          d="M416 304H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32zm0-192H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z"
                                                                        />
                                                                      </svg>
                                                                    </EqualsIcon>
                                                                  </span>
                                                                  Moderate
                                                                </span>
                                                              </span>
                                                            </Label>
                                                          </InsightsLabel>
                                                        </FindRefWrapper>
                                                      </Popper>
                                                    </Tooltip>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Label
                                                      className="label pf-u-mb-xs"
                                                    >
                                                      <span
                                                        className="vuln-label label pf-u-mb-xs"
                                                        style={
                                                          Object {
                                                            "display": "block",
                                                          }
                                                        }
                                                      >
                                                        Risk of change
                                                      </span>
                                                    </Label>
                                                    <Tooltip
                                                      content="These will likely require an outage window."
                                                    >
                                                      <Popper
                                                        appendTo={[Function]}
                                                        distance={15}
                                                        enableFlip={true}
                                                        flipBehavior={
                                                          Array [
                                                            "top",
                                                            "right",
                                                            "bottom",
                                                            "left",
                                                            "top",
                                                            "right",
                                                            "bottom",
                                                          ]
                                                        }
                                                        isVisible={false}
                                                        onBlur={[Function]}
                                                        onDocumentClick={false}
                                                        onDocumentKeyDown={[Function]}
                                                        onFocus={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onTriggerEnter={[Function]}
                                                        placement="top"
                                                        popper={
                                                          <div
                                                            className="pf-c-tooltip"
                                                            id="pf-tooltip-15"
                                                            role="tooltip"
                                                            style={
                                                              Object {
                                                                "maxWidth": null,
                                                                "opacity": 0,
                                                                "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                                              }
                                                            }
                                                          >
                                                            <TooltipArrow />
                                                            <TooltipContent
                                                              isLeftAligned={false}
                                                            >
                                                              These will likely require an outage window.
                                                            </TooltipContent>
                                                          </div>
                                                        }
                                                        popperMatchesTriggerWidth={false}
                                                        positionModifiers={
                                                          Object {
                                                            "bottom": "pf-m-bottom",
                                                            "left": "pf-m-left",
                                                            "right": "pf-m-right",
                                                            "top": "pf-m-top",
                                                          }
                                                        }
                                                        trigger={
                                                          <Label
                                                            className="impact-label-moderate"
                                                          >
                                                            Moderate
                                                          </Label>
                                                        }
                                                        zIndex={9999}
                                                      >
                                                        <FindRefWrapper
                                                          onFoundRef={[Function]}
                                                        >
                                                          <Label
                                                            className="impact-label-moderate"
                                                          >
                                                            <span
                                                              className="pf-c-label impact-label-moderate"
                                                            >
                                                              <span
                                                                className="pf-c-label__content"
                                                              >
                                                                Moderate
                                                              </span>
                                                            </span>
                                                          </Label>
                                                        </FindRefWrapper>
                                                      </Popper>
                                                    </Tooltip>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Label
                                                      className="label pf-u-mb-xs"
                                                    >
                                                      <span
                                                        className="vuln-label label pf-u-mb-xs"
                                                        style={
                                                          Object {
                                                            "display": "block",
                                                          }
                                                        }
                                                      >
                                                        Remediation
                                                      </span>
                                                    </Label>
                                                    <Split>
                                                      <div
                                                        className="pf-l-split"
                                                      >
                                                        <SplitItem>
                                                          <div
                                                            className="pf-l-split__item"
                                                          >
                                                            <CheckCircleIcon
                                                              className="checkCircleIcon pf-u-mr-xs"
                                                              color="currentColor"
                                                              noVerticalAlign={false}
                                                              size="sm"
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                aria-labelledby={null}
                                                                className="checkCircleIcon pf-u-mr-xs"
                                                                fill="currentColor"
                                                                height="1em"
                                                                role="img"
                                                                style={
                                                                  Object {
                                                                    "verticalAlign": "-0.125em",
                                                                  }
                                                                }
                                                                viewBox="0 0 512 512"
                                                                width="1em"
                                                              >
                                                                <path
                                                                  d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                                                                />
                                                              </svg>
                                                            </CheckCircleIcon>
                                                            Yes
                                                            <Tooltip
                                                              content="You can create Ansible Playbooks and remediate your systems with Remediation application"
                                                            >
                                                              <Popper
                                                                appendTo={[Function]}
                                                                distance={15}
                                                                enableFlip={true}
                                                                flipBehavior={
                                                                  Array [
                                                                    "top",
                                                                    "right",
                                                                    "bottom",
                                                                    "left",
                                                                    "top",
                                                                    "right",
                                                                    "bottom",
                                                                  ]
                                                                }
                                                                isVisible={false}
                                                                onBlur={[Function]}
                                                                onDocumentClick={false}
                                                                onDocumentKeyDown={[Function]}
                                                                onFocus={[Function]}
                                                                onMouseEnter={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onTriggerEnter={[Function]}
                                                                placement="top"
                                                                popper={
                                                                  <div
                                                                    className="pf-c-tooltip"
                                                                    id="pf-tooltip-16"
                                                                    role="tooltip"
                                                                    style={
                                                                      Object {
                                                                        "maxWidth": null,
                                                                        "opacity": 0,
                                                                        "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                                                      }
                                                                    }
                                                                  >
                                                                    <TooltipArrow />
                                                                    <TooltipContent
                                                                      isLeftAligned={false}
                                                                    >
                                                                      You can create Ansible Playbooks and remediate your systems with Remediation application
                                                                    </TooltipContent>
                                                                  </div>
                                                                }
                                                                popperMatchesTriggerWidth={false}
                                                                positionModifiers={
                                                                  Object {
                                                                    "bottom": "pf-m-bottom",
                                                                    "left": "pf-m-left",
                                                                    "right": "pf-m-right",
                                                                    "top": "pf-m-top",
                                                                  }
                                                                }
                                                                trigger={
                                                                  <OutlinedQuestionCircleIcon
                                                                    className="l-sm-spacer outlinedQuestionCircleIcon"
                                                                    color="currentColor"
                                                                    noVerticalAlign={false}
                                                                    size="sm"
                                                                  />
                                                                }
                                                                zIndex={9999}
                                                              >
                                                                <FindRefWrapper
                                                                  onFoundRef={[Function]}
                                                                >
                                                                  <OutlinedQuestionCircleIcon
                                                                    className="l-sm-spacer outlinedQuestionCircleIcon"
                                                                    color="currentColor"
                                                                    noVerticalAlign={false}
                                                                    size="sm"
                                                                  >
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      aria-labelledby={null}
                                                                      className="l-sm-spacer outlinedQuestionCircleIcon"
                                                                      fill="currentColor"
                                                                      height="1em"
                                                                      role="img"
                                                                      style={
                                                                        Object {
                                                                          "verticalAlign": "-0.125em",
                                                                        }
                                                                      }
                                                                      viewBox="0 0 512 512"
                                                                      width="1em"
                                                                    >
                                                                      <path
                                                                        d="M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 448c-110.532 0-200-89.431-200-200 0-110.495 89.472-200 200-200 110.491 0 200 89.471 200 200 0 110.53-89.431 200-200 200zm107.244-255.2c0 67.052-72.421 68.084-72.421 92.863V300c0 6.627-5.373 12-12 12h-45.647c-6.627 0-12-5.373-12-12v-8.659c0-35.745 27.1-50.034 47.579-61.516 17.561-9.845 28.324-16.541 28.324-29.579 0-17.246-21.999-28.693-39.784-28.693-23.189 0-33.894 10.977-48.942 29.969-4.057 5.12-11.46 6.071-16.666 2.124l-27.824-21.098c-5.107-3.872-6.251-11.066-2.644-16.363C184.846 131.491 214.94 112 261.794 112c49.071 0 101.45 38.304 101.45 88.8zM298 368c0 23.159-18.841 42-42 42s-42-18.841-42-42 18.841-42 42-42 42 18.841 42 42z"
                                                                      />
                                                                    </svg>
                                                                  </OutlinedQuestionCircleIcon>
                                                                </FindRefWrapper>
                                                              </Popper>
                                                            </Tooltip>
                                                          </div>
                                                        </SplitItem>
                                                        <SplitItem
                                                          className="pf-u-ml-md"
                                                        >
                                                          <div
                                                            className="pf-l-split__item pf-u-ml-md"
                                                          />
                                                        </SplitItem>
                                                      </div>
                                                    </Split>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </TextContent>
                                      </div>
                                    </StackItem>
                                    <StackItem>
                                      <div
                                        className="pf-l-stack__item"
                                      >
                                        <TextContent>
                                          <div
                                            className="pf-c-content"
                                          >
                                            <Text
                                              className="pf-u-mt-xs"
                                              component="p"
                                            >
                                              <p
                                                className="pf-u-mt-xs"
                                                data-ouia-component-id="OUIA-Generated-Text-7"
                                                data-ouia-component-type="PF4/Text"
                                                data-ouia-safe={true}
                                                data-pf-content={true}
                                              >
                                                <a
                                                  className="kb-link"
                                                  href="https://access.redhat.com/node/4572391"
                                                  rel="noopener noreferrer"
                                                  target="_blank"
                                                >
                                                  Knowledgebase article
                                                  <ExternalLinkAltIcon
                                                    className="l-sm-spacer"
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      className="l-sm-spacer"
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 512 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z"
                                                      />
                                                    </svg>
                                                  </ExternalLinkAltIcon>
                                                </a>
                                              </p>
                                            </Text>
                                          </div>
                                        </TextContent>
                                      </div>
                                    </StackItem>
                                  </div>
                                </Stack>
                              </div>
                            </GridItem>
                            <GridItem
                              md={3}
                              sm={12}
                            >
                              <div
                                className="pf-l-grid__item pf-m-12-col-on-sm pf-m-3-col-on-md"
                              >
                                <TextContent>
                                  <div
                                    className="pf-c-content"
                                  >
                                    <Label>
                                      <span
                                        className="vuln-label "
                                        style={
                                          Object {
                                            "display": "block",
                                          }
                                        }
                                      >
                                        Associated CVEs:
                                      </span>
                                    </Label>
                                    <Text
                                      className="pf-u-mt-xs associated-cves"
                                      component="p"
                                    >
                                      <p
                                        className="pf-u-mt-xs associated-cves"
                                        data-ouia-component-id="OUIA-Generated-Text-8"
                                        data-ouia-component-type="PF4/Text"
                                        data-ouia-safe={true}
                                        data-pf-content={true}
                                      >
                                        CVE-2019-11135
                                         (
                                        current
                                        )
                                      </p>
                                    </Text>
                                  </div>
                                </TextContent>
                              </div>
                            </GridItem>
                          </div>
                        </Grid>
                      </div>
                    </CardBody>
                  </div>
                </div>
              </ExpandableSection>
            </article>
          </Card>
        </CSAwRuleBox>
      </injectIntl(CSAwRuleBox)>
    </Router>
  </BrowserRouter>
</Provider>
`;

exports[`CSAW Rule Box Should render without rules  1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <injectIntl(CSAwRuleBox)
        rules={
          Array [
            Object {
              "associated_cves": Array [
                "CVE-2019-11135",
              ],
              "change_risk": 3,
              "description": "CVE-2019-11135: \\"TAA\\" kernel side-channel",
              "generic": "An implementation issue similar to MDS was found in many x86 microprocessors.

An unprivileged attacker can use this flaw to bypass memory restrictions in order to read cached data from the processor and sibling logical processors. This allows malicious users to access information from the local system, and allows malicious virtual machines or users thereof to access information from other guests or the host system.
",
              "kbase_node_id": 4572391,
              "playbook_count": 1,
              "reboot_required": false,
              "rule_id": "CVE_2019_11135_cpu_taa|CVE_2019_11135_CPU_TAA_KERNEL",
              "rule_impact": 2,
              "summary": "An issue was found in the manner in which certain x86 microprocessors manage thread memory access synchronization. It has been assigned [CVE-2019-11135](https://access.redhat.com/security/cve/CVE-2019-11135). Complete mitigations for this issue require microcode and kernel updates, and disabling hyperthreading where applicable.

An unprivileged user can use this flaw to gain read access to privileged memory that would otherwise be inacessible, including from other virtual machines on the same host system.
",
            },
          ]
        }
        synopsis="CVE-2019-11135"
      >
        <CSAwRuleBox
          intl={
            Object {
              "defaultFormats": Object {},
              "defaultLocale": "en",
              "defaultRichTextElements": undefined,
              "formatDate": [Function],
              "formatDateTimeRange": [Function],
              "formatDateToParts": [Function],
              "formatDisplayName": [Function],
              "formatList": [Function],
              "formatListToParts": [Function],
              "formatMessage": [Function],
              "formatNumber": [Function],
              "formatNumberToParts": [Function],
              "formatPlural": [Function],
              "formatRelativeTime": [Function],
              "formatTime": [Function],
              "formatTimeToParts": [Function],
              "formats": Object {},
              "formatters": Object {
                "getDateTimeFormat": [Function],
                "getDisplayNames": [Function],
                "getListFormat": [Function],
                "getMessageFormat": [Function],
                "getNumberFormat": [Function],
                "getPluralRules": [Function],
                "getRelativeTimeFormat": [Function],
              },
              "locale": "en",
              "messages": Object {
                "default.cancel": "Cancel",
                "default.delete": "Delete",
                "default.remove": "Remove",
                "default.save": "Save",
              },
              "onError": [Function],
              "textComponent": Symbol(react.fragment),
              "timeZone": undefined,
              "wrapRichTextChunksInFragment": undefined,
            }
          }
          rules={
            Array [
              Object {
                "associated_cves": Array [
                  "CVE-2019-11135",
                ],
                "change_risk": 3,
                "description": "CVE-2019-11135: \\"TAA\\" kernel side-channel",
                "generic": "An implementation issue similar to MDS was found in many x86 microprocessors.

An unprivileged attacker can use this flaw to bypass memory restrictions in order to read cached data from the processor and sibling logical processors. This allows malicious users to access information from the local system, and allows malicious virtual machines or users thereof to access information from other guests or the host system.
",
                "kbase_node_id": 4572391,
                "playbook_count": 1,
                "reboot_required": false,
                "rule_id": "CVE_2019_11135_cpu_taa|CVE_2019_11135_CPU_TAA_KERNEL",
                "rule_impact": 2,
                "summary": "An issue was found in the manner in which certain x86 microprocessors manage thread memory access synchronization. It has been assigned [CVE-2019-11135](https://access.redhat.com/security/cve/CVE-2019-11135). Complete mitigations for this issue require microcode and kernel updates, and disabling hyperthreading where applicable.

An unprivileged user can use this flaw to gain read access to privileged memory that would otherwise be inacessible, including from other virtual machines on the same host system.
",
              },
            ]
          }
          synopsis="CVE-2019-11135"
        >
          <Card
            className="card-box"
            key="CVE_2019_11135_cpu_taa|CVE_2019_11135_CPU_TAA_KERNEL"
            ouiaId="security-rule-card-0"
          >
            <article
              className="pf-c-card card-box"
              data-ouia-component-id="security-rule-card-0"
              data-ouia-component-type="PF4/Card"
              data-ouia-safe={true}
              id=""
            >
              <ExpandableSection
                className=""
                contentId=""
                isActive={false}
                isDetached={false}
                onToggle={[Function]}
                toggleText={
                  <Split>
                    <SplitItem
                      className="pf-u-mr-xl"
                    >
                      <TextContent>
                        <Text
                          component="h4"
                        >
                          <CSAwLabel
                            className="pf-u-mr-sm"
                          />
                          CVE-2019-11135: "TAA" kernel side-channel
                        </Text>
                      </TextContent>
                    </SplitItem>
                    <SplitItem
                      id="filter-affected-systems-split"
                    >
                      <TextContent>
                        <Text
                          component="small"
                          id="filter-affected-systems"
                          onClick={[Function]}
                        >
                          <Link
                            to="/cves/CVE-2019-11135/?rule_key=CVE_2019_11135_cpu_taa|CVE_2019_11135_CPU_TAA_KERNEL"
                          >
                            Filter by affected systems
                          </Link>
                        </Text>
                      </TextContent>
                    </SplitItem>
                  </Split>
                }
                toggleTextCollapsed=""
                toggleTextExpanded=""
              >
                <div
                  className="pf-c-expandable-section"
                >
                  <button
                    className="pf-c-expandable-section__toggle"
                    onClick={[Function]}
                    type="button"
                  >
                    <span
                      className="pf-c-expandable-section__toggle-icon"
                    >
                      <AngleRightIcon
                        aria-hidden={true}
                        color="currentColor"
                        noVerticalAlign={false}
                        size="sm"
                      >
                        <svg
                          aria-hidden={true}
                          aria-labelledby={null}
                          fill="currentColor"
                          height="1em"
                          role="img"
                          style={
                            Object {
                              "verticalAlign": "-0.125em",
                            }
                          }
                          viewBox="0 0 256 512"
                          width="1em"
                        >
                          <path
                            d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                          />
                        </svg>
                      </AngleRightIcon>
                    </span>
                    <span
                      className="pf-c-expandable-section__toggle-text"
                    >
                      <Split>
                        <div
                          className="pf-l-split"
                        >
                          <SplitItem
                            className="pf-u-mr-xl"
                          >
                            <div
                              className="pf-l-split__item pf-u-mr-xl"
                            >
                              <TextContent>
                                <div
                                  className="pf-c-content"
                                >
                                  <Text
                                    component="h4"
                                  >
                                    <h4
                                      className=""
                                      data-ouia-component-id="OUIA-Generated-Text-1"
                                      data-ouia-component-type="PF4/Text"
                                      data-ouia-safe={true}
                                      data-pf-content={true}
                                    >
                                      <CSAwLabel
                                        className="pf-u-mr-sm"
                                      >
                                        <Tooltip
                                          content={
                                            <Memo(MemoizedFormattedMessage)
                                              defaultMessage="Denotes a security rule. Security rules are written by Red Hat to help you configure your systems"
                                              description="Tooltip"
                                              id="rules.iconTooolip"
                                            />
                                          }
                                        >
                                          <Popper
                                            appendTo={[Function]}
                                            distance={15}
                                            enableFlip={true}
                                            flipBehavior={
                                              Array [
                                                "top",
                                                "right",
                                                "bottom",
                                                "left",
                                                "top",
                                                "right",
                                                "bottom",
                                              ]
                                            }
                                            isVisible={false}
                                            onBlur={[Function]}
                                            onDocumentClick={false}
                                            onDocumentKeyDown={[Function]}
                                            onFocus={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            onTriggerEnter={[Function]}
                                            placement="top"
                                            popper={
                                              <div
                                                className="pf-c-tooltip"
                                                id="pf-tooltip-5"
                                                role="tooltip"
                                                style={
                                                  Object {
                                                    "maxWidth": null,
                                                    "opacity": 0,
                                                    "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                                  }
                                                }
                                              >
                                                <TooltipArrow />
                                                <TooltipContent
                                                  isLeftAligned={false}
                                                >
                                                  <Memo(MemoizedFormattedMessage)
                                                    defaultMessage="Denotes a security rule. Security rules are written by Red Hat to help you configure your systems"
                                                    description="Tooltip"
                                                    id="rules.iconTooolip"
                                                  />
                                                </TooltipContent>
                                              </div>
                                            }
                                            popperMatchesTriggerWidth={false}
                                            positionModifiers={
                                              Object {
                                                "bottom": "pf-m-bottom",
                                                "left": "pf-m-left",
                                                "right": "pf-m-right",
                                                "top": "pf-m-top",
                                              }
                                            }
                                            trigger={
                                              <Label
                                                className={
                                                  Array [
                                                    "cve-labels",
                                                    "pf-u-mr-sm",
                                                  ]
                                                }
                                                color="blue"
                                                style={Object {}}
                                              >
                                                <Memo(MemoizedFormattedMessage)
                                                  defaultMessage="Security rule "
                                                  description="Security rule label"
                                                  id="securityRuleLabel"
                                                />
                                              </Label>
                                            }
                                            zIndex={9999}
                                          >
                                            <FindRefWrapper
                                              onFoundRef={[Function]}
                                            >
                                              <Label
                                                className={
                                                  Array [
                                                    "cve-labels",
                                                    "pf-u-mr-sm",
                                                  ]
                                                }
                                                color="blue"
                                                style={Object {}}
                                              >
                                                <span
                                                  className="pf-c-label pf-m-blue cve-labels pf-u-mr-sm"
                                                  style={Object {}}
                                                >
                                                  <span
                                                    className="pf-c-label__content"
                                                  >
                                                    <FormattedMessage
                                                      defaultMessage="Security rule "
                                                      description="Security rule label"
                                                      id="securityRuleLabel"
                                                    >
                                                      Security rule 
                                                    </FormattedMessage>
                                                  </span>
                                                </span>
                                              </Label>
                                            </FindRefWrapper>
                                          </Popper>
                                        </Tooltip>
                                      </CSAwLabel>
                                      CVE-2019-11135: "TAA" kernel side-channel
                                    </h4>
                                  </Text>
                                </div>
                              </TextContent>
                            </div>
                          </SplitItem>
                          <SplitItem
                            id="filter-affected-systems-split"
                          >
                            <div
                              className="pf-l-split__item"
                              id="filter-affected-systems-split"
                            >
                              <TextContent>
                                <div
                                  className="pf-c-content"
                                >
                                  <Text
                                    component="small"
                                    id="filter-affected-systems"
                                    onClick={[Function]}
                                  >
                                    <small
                                      className=""
                                      data-ouia-component-id="OUIA-Generated-Text-2"
                                      data-ouia-component-type="PF4/Text"
                                      data-ouia-safe={true}
                                      data-pf-content={true}
                                      id="filter-affected-systems"
                                      onClick={[Function]}
                                    >
                                      <Link
                                        key="CVE_2019_11135_cpu_taa|CVE_2019_11135_CPU_TAA_KERNEL"
                                        to="/cves/CVE-2019-11135/?rule_key=CVE_2019_11135_cpu_taa|CVE_2019_11135_CPU_TAA_KERNEL"
                                      >
                                        <LinkAnchor
                                          href="/cves/CVE-2019-11135/?rule_key=CVE_2019_11135_cpu_taa|CVE_2019_11135_CPU_TAA_KERNEL"
                                          navigate={[Function]}
                                        >
                                          <a
                                            href="/cves/CVE-2019-11135/?rule_key=CVE_2019_11135_cpu_taa|CVE_2019_11135_CPU_TAA_KERNEL"
                                            onClick={[Function]}
                                          >
                                            Filter by affected systems
                                          </a>
                                        </LinkAnchor>
                                      </Link>
                                    </small>
                                  </Text>
                                </div>
                              </TextContent>
                            </div>
                          </SplitItem>
                        </div>
                      </Split>
                    </span>
                  </button>
                  <div
                    className="pf-c-expandable-section__content"
                    hidden={true}
                    id=""
                  >
                    <CardBody
                      className="rule-card-body"
                    >
                      <div
                        className="pf-c-card__body rule-card-body"
                      >
                        <Grid
                          hasGutter={true}
                        >
                          <div
                            className="pf-l-grid pf-m-gutter"
                          >
                            <GridItem
                              md={9}
                              sm={12}
                            >
                              <div
                                className="pf-l-grid__item pf-m-12-col-on-sm pf-m-9-col-on-md"
                              >
                                <Stack
                                  hasGutter={true}
                                >
                                  <div
                                    className="pf-l-stack pf-m-gutter"
                                  >
                                    <StackItem>
                                      <div
                                        className="pf-l-stack__item"
                                      >
                                        <injectIntl(CSAwRuleSummary)
                                          text="An issue was found in the manner in which certain x86 microprocessors manage thread memory access synchronization. It has been assigned [CVE-2019-11135](https://access.redhat.com/security/cve/CVE-2019-11135). Complete mitigations for this issue require microcode and kernel updates, and disabling hyperthreading where applicable.

An unprivileged user can use this flaw to gain read access to privileged memory that would otherwise be inacessible, including from other virtual machines on the same host system.
"
                                        >
                                          <CSAwRuleSummary
                                            intl={
                                              Object {
                                                "defaultFormats": Object {},
                                                "defaultLocale": "en",
                                                "defaultRichTextElements": undefined,
                                                "formatDate": [Function],
                                                "formatDateTimeRange": [Function],
                                                "formatDateToParts": [Function],
                                                "formatDisplayName": [Function],
                                                "formatList": [Function],
                                                "formatListToParts": [Function],
                                                "formatMessage": [Function],
                                                "formatNumber": [Function],
                                                "formatNumberToParts": [Function],
                                                "formatPlural": [Function],
                                                "formatRelativeTime": [Function],
                                                "formatTime": [Function],
                                                "formatTimeToParts": [Function],
                                                "formats": Object {},
                                                "formatters": Object {
                                                  "getDateTimeFormat": [Function],
                                                  "getDisplayNames": [Function],
                                                  "getListFormat": [Function],
                                                  "getMessageFormat": [Function],
                                                  "getNumberFormat": [Function],
                                                  "getPluralRules": [Function],
                                                  "getRelativeTimeFormat": [Function],
                                                },
                                                "locale": "en",
                                                "messages": Object {
                                                  "default.cancel": "Cancel",
                                                  "default.delete": "Delete",
                                                  "default.remove": "Remove",
                                                  "default.save": "Save",
                                                },
                                                "onError": [Function],
                                                "textComponent": Symbol(react.fragment),
                                                "timeZone": undefined,
                                                "wrapRichTextChunksInFragment": undefined,
                                              }
                                            }
                                            link={null}
                                            text="An issue was found in the manner in which certain x86 microprocessors manage thread memory access synchronization. It has been assigned [CVE-2019-11135](https://access.redhat.com/security/cve/CVE-2019-11135). Complete mitigations for this issue require microcode and kernel updates, and disabling hyperthreading where applicable.

An unprivileged user can use this flaw to gain read access to privileged memory that would otherwise be inacessible, including from other virtual machines on the same host system.
"
                                            truncate={true}
                                          >
                                            <StackItem
                                              link={null}
                                            >
                                              <div
                                                className="pf-l-stack__item"
                                                link={null}
                                              >
                                                <TextContent
                                                  className="rule-description"
                                                >
                                                  <div
                                                    className="pf-c-content rule-description"
                                                  >
                                                    <Truncate
                                                      collapseText="Read less"
                                                      expandText="Read more"
                                                      length={230}
                                                      spaceBetween={true}
                                                      text="<p>An issue was found in the manner in which certain x86 microprocessors manage thread memory access synchronization. It has been assigned <a target='_blank' href=\\"https://access.redhat.com/security/cve/CVE-2019-11135\\">CVE-2019-11135</a>. Complete mitigations for this issue require microcode and kernel updates, and disabling hyperthreading where applicable.</p>
<p>An unprivileged user can use this flaw to gain read access to privileged memory that would otherwise be inacessible, including from other virtual machines on the same host system.</p>
"
                                                    >
                                                      <Stack
                                                        className="ins-c-truncate is-block"
                                                      >
                                                        <div
                                                          className="pf-l-stack ins-c-truncate is-block"
                                                        >
                                                          <StackItem>
                                                            <div
                                                              className="pf-l-stack__item"
                                                            >
                                                              <span
                                                                dangerouslySetInnerHTML={
                                                                  Object {
                                                                    "__html": "<p>An issue was found in the manner in which certain x86 microprocessors manage thread memory access synchronization. It has been assigned <a target=\\"_blank\\" href=\\"https://access.redhat.com/security/cve/CVE-2019-11135\\">CVE-2019-11...</a></p>",
                                                                  }
                                                                }
                                                                widget-type="InsightsTruncateBlock"
                                                              />
                                                            </div>
                                                          </StackItem>
                                                          <StackItem
                                                            className="pf-u-mt-sm"
                                                          >
                                                            <div
                                                              className="pf-l-stack__item pf-u-mt-sm"
                                                            >
                                                              <Button
                                                                className="ins-c-expand-button"
                                                                onClick={[Function]}
                                                                variant="link"
                                                              >
                                                                <ButtonBase
                                                                  className="ins-c-expand-button"
                                                                  innerRef={null}
                                                                  onClick={[Function]}
                                                                  variant="link"
                                                                >
                                                                  <button
                                                                    aria-disabled={false}
                                                                    aria-label={null}
                                                                    className="pf-c-button pf-m-link ins-c-expand-button"
                                                                    data-ouia-component-id="OUIA-Generated-Button-link-1"
                                                                    data-ouia-component-type="PF4/Button"
                                                                    data-ouia-safe={true}
                                                                    disabled={false}
                                                                    onClick={[Function]}
                                                                    role={null}
                                                                    type="button"
                                                                  >
                                                                    Read more
                                                                  </button>
                                                                </ButtonBase>
                                                              </Button>
                                                            </div>
                                                          </StackItem>
                                                        </div>
                                                      </Stack>
                                                    </Truncate>
                                                  </div>
                                                </TextContent>
                                              </div>
                                            </StackItem>
                                          </CSAwRuleSummary>
                                        </injectIntl(CSAwRuleSummary)>
                                      </div>
                                    </StackItem>
                                    <StackItem>
                                      <div
                                        className="pf-l-stack__item"
                                      >
                                        <TextContent>
                                          <div
                                            className="pf-c-content"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Label
                                                      className="label pf-u-mb-xs"
                                                    >
                                                      <span
                                                        className="vuln-label label pf-u-mb-xs"
                                                        style={
                                                          Object {
                                                            "display": "block",
                                                          }
                                                        }
                                                      >
                                                        Severity
                                                      </span>
                                                    </Label>
                                                    <Tooltip
                                                      content="This rating is given to flaws that may be more difficult to exploit but could still lead to some
            compromise of the confidentiality, integrity, or availability of resources, under certain circumstances.
            These are the types of vulnerabilities that could have had a Critical severity or Important severity
            but are less easily exploited based on a technical evaluation of the flaw, or affect unlikely
            configurations."
                                                    >
                                                      <Popper
                                                        appendTo={[Function]}
                                                        distance={15}
                                                        enableFlip={true}
                                                        flipBehavior={
                                                          Array [
                                                            "top",
                                                            "right",
                                                            "bottom",
                                                            "left",
                                                            "top",
                                                            "right",
                                                            "bottom",
                                                          ]
                                                        }
                                                        isVisible={false}
                                                        onBlur={[Function]}
                                                        onDocumentClick={false}
                                                        onDocumentKeyDown={[Function]}
                                                        onFocus={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onTriggerEnter={[Function]}
                                                        placement="top"
                                                        popper={
                                                          <div
                                                            className="pf-c-tooltip"
                                                            id="pf-tooltip-6"
                                                            role="tooltip"
                                                            style={
                                                              Object {
                                                                "maxWidth": null,
                                                                "opacity": 0,
                                                                "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                                              }
                                                            }
                                                          >
                                                            <TooltipArrow />
                                                            <TooltipContent
                                                              isLeftAligned={false}
                                                            >
                                                              This rating is given to flaws that may be more difficult to exploit but could still lead to some
            compromise of the confidentiality, integrity, or availability of resources, under certain circumstances.
            These are the types of vulnerabilities that could have had a Critical severity or Important severity
            but are less easily exploited based on a technical evaluation of the flaw, or affect unlikely
            configurations.
                                                            </TooltipContent>
                                                          </div>
                                                        }
                                                        popperMatchesTriggerWidth={false}
                                                        positionModifiers={
                                                          Object {
                                                            "bottom": "pf-m-bottom",
                                                            "left": "pf-m-left",
                                                            "right": "pf-m-right",
                                                            "top": "pf-m-top",
                                                          }
                                                        }
                                                        trigger={
                                                          <InsightsLabel
                                                            className="severity-label"
                                                            value={2}
                                                          />
                                                        }
                                                        zIndex={9999}
                                                      >
                                                        <FindRefWrapper
                                                          onFoundRef={[Function]}
                                                        >
                                                          <InsightsLabel
                                                            className="severity-label"
                                                            value={2}
                                                          >
                                                            <Label
                                                              className="severity-label ins-c-label-2"
                                                              icon={
                                                                <EqualsIcon
                                                                  color="currentColor"
                                                                  noVerticalAlign={false}
                                                                  size="sm"
                                                                />
                                                              }
                                                            >
                                                              <span
                                                                className="pf-c-label severity-label ins-c-label-2"
                                                              >
                                                                <span
                                                                  className="pf-c-label__content"
                                                                >
                                                                  <span
                                                                    className="pf-c-label__icon"
                                                                  >
                                                                    <EqualsIcon
                                                                      color="currentColor"
                                                                      noVerticalAlign={false}
                                                                      size="sm"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        aria-labelledby={null}
                                                                        fill="currentColor"
                                                                        height="1em"
                                                                        role="img"
                                                                        style={
                                                                          Object {
                                                                            "verticalAlign": "-0.125em",
                                                                          }
                                                                        }
                                                                        viewBox="0 0 448 512"
                                                                        width="1em"
                                                                      >
                                                                        <path
                                                                          d="M416 304H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32zm0-192H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z"
                                                                        />
                                                                      </svg>
                                                                    </EqualsIcon>
                                                                  </span>
                                                                  Moderate
                                                                </span>
                                                              </span>
                                                            </Label>
                                                          </InsightsLabel>
                                                        </FindRefWrapper>
                                                      </Popper>
                                                    </Tooltip>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Label
                                                      className="label pf-u-mb-xs"
                                                    >
                                                      <span
                                                        className="vuln-label label pf-u-mb-xs"
                                                        style={
                                                          Object {
                                                            "display": "block",
                                                          }
                                                        }
                                                      >
                                                        Risk of change
                                                      </span>
                                                    </Label>
                                                    <Tooltip
                                                      content="These will likely require an outage window."
                                                    >
                                                      <Popper
                                                        appendTo={[Function]}
                                                        distance={15}
                                                        enableFlip={true}
                                                        flipBehavior={
                                                          Array [
                                                            "top",
                                                            "right",
                                                            "bottom",
                                                            "left",
                                                            "top",
                                                            "right",
                                                            "bottom",
                                                          ]
                                                        }
                                                        isVisible={false}
                                                        onBlur={[Function]}
                                                        onDocumentClick={false}
                                                        onDocumentKeyDown={[Function]}
                                                        onFocus={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onTriggerEnter={[Function]}
                                                        placement="top"
                                                        popper={
                                                          <div
                                                            className="pf-c-tooltip"
                                                            id="pf-tooltip-7"
                                                            role="tooltip"
                                                            style={
                                                              Object {
                                                                "maxWidth": null,
                                                                "opacity": 0,
                                                                "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                                              }
                                                            }
                                                          >
                                                            <TooltipArrow />
                                                            <TooltipContent
                                                              isLeftAligned={false}
                                                            >
                                                              These will likely require an outage window.
                                                            </TooltipContent>
                                                          </div>
                                                        }
                                                        popperMatchesTriggerWidth={false}
                                                        positionModifiers={
                                                          Object {
                                                            "bottom": "pf-m-bottom",
                                                            "left": "pf-m-left",
                                                            "right": "pf-m-right",
                                                            "top": "pf-m-top",
                                                          }
                                                        }
                                                        trigger={
                                                          <Label
                                                            className="impact-label-moderate"
                                                          >
                                                            Moderate
                                                          </Label>
                                                        }
                                                        zIndex={9999}
                                                      >
                                                        <FindRefWrapper
                                                          onFoundRef={[Function]}
                                                        >
                                                          <Label
                                                            className="impact-label-moderate"
                                                          >
                                                            <span
                                                              className="pf-c-label impact-label-moderate"
                                                            >
                                                              <span
                                                                className="pf-c-label__content"
                                                              >
                                                                Moderate
                                                              </span>
                                                            </span>
                                                          </Label>
                                                        </FindRefWrapper>
                                                      </Popper>
                                                    </Tooltip>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Label
                                                      className="label pf-u-mb-xs"
                                                    >
                                                      <span
                                                        className="vuln-label label pf-u-mb-xs"
                                                        style={
                                                          Object {
                                                            "display": "block",
                                                          }
                                                        }
                                                      >
                                                        Remediation
                                                      </span>
                                                    </Label>
                                                    <Split>
                                                      <div
                                                        className="pf-l-split"
                                                      >
                                                        <SplitItem>
                                                          <div
                                                            className="pf-l-split__item"
                                                          >
                                                            <CheckCircleIcon
                                                              className="checkCircleIcon pf-u-mr-xs"
                                                              color="currentColor"
                                                              noVerticalAlign={false}
                                                              size="sm"
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                aria-labelledby={null}
                                                                className="checkCircleIcon pf-u-mr-xs"
                                                                fill="currentColor"
                                                                height="1em"
                                                                role="img"
                                                                style={
                                                                  Object {
                                                                    "verticalAlign": "-0.125em",
                                                                  }
                                                                }
                                                                viewBox="0 0 512 512"
                                                                width="1em"
                                                              >
                                                                <path
                                                                  d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                                                                />
                                                              </svg>
                                                            </CheckCircleIcon>
                                                            Yes
                                                            <Tooltip
                                                              content="You can create Ansible Playbooks and remediate your systems with Remediation application"
                                                            >
                                                              <Popper
                                                                appendTo={[Function]}
                                                                distance={15}
                                                                enableFlip={true}
                                                                flipBehavior={
                                                                  Array [
                                                                    "top",
                                                                    "right",
                                                                    "bottom",
                                                                    "left",
                                                                    "top",
                                                                    "right",
                                                                    "bottom",
                                                                  ]
                                                                }
                                                                isVisible={false}
                                                                onBlur={[Function]}
                                                                onDocumentClick={false}
                                                                onDocumentKeyDown={[Function]}
                                                                onFocus={[Function]}
                                                                onMouseEnter={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onTriggerEnter={[Function]}
                                                                placement="top"
                                                                popper={
                                                                  <div
                                                                    className="pf-c-tooltip"
                                                                    id="pf-tooltip-8"
                                                                    role="tooltip"
                                                                    style={
                                                                      Object {
                                                                        "maxWidth": null,
                                                                        "opacity": 0,
                                                                        "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                                                      }
                                                                    }
                                                                  >
                                                                    <TooltipArrow />
                                                                    <TooltipContent
                                                                      isLeftAligned={false}
                                                                    >
                                                                      You can create Ansible Playbooks and remediate your systems with Remediation application
                                                                    </TooltipContent>
                                                                  </div>
                                                                }
                                                                popperMatchesTriggerWidth={false}
                                                                positionModifiers={
                                                                  Object {
                                                                    "bottom": "pf-m-bottom",
                                                                    "left": "pf-m-left",
                                                                    "right": "pf-m-right",
                                                                    "top": "pf-m-top",
                                                                  }
                                                                }
                                                                trigger={
                                                                  <OutlinedQuestionCircleIcon
                                                                    className="l-sm-spacer outlinedQuestionCircleIcon"
                                                                    color="currentColor"
                                                                    noVerticalAlign={false}
                                                                    size="sm"
                                                                  />
                                                                }
                                                                zIndex={9999}
                                                              >
                                                                <FindRefWrapper
                                                                  onFoundRef={[Function]}
                                                                >
                                                                  <OutlinedQuestionCircleIcon
                                                                    className="l-sm-spacer outlinedQuestionCircleIcon"
                                                                    color="currentColor"
                                                                    noVerticalAlign={false}
                                                                    size="sm"
                                                                  >
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      aria-labelledby={null}
                                                                      className="l-sm-spacer outlinedQuestionCircleIcon"
                                                                      fill="currentColor"
                                                                      height="1em"
                                                                      role="img"
                                                                      style={
                                                                        Object {
                                                                          "verticalAlign": "-0.125em",
                                                                        }
                                                                      }
                                                                      viewBox="0 0 512 512"
                                                                      width="1em"
                                                                    >
                                                                      <path
                                                                        d="M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 448c-110.532 0-200-89.431-200-200 0-110.495 89.472-200 200-200 110.491 0 200 89.471 200 200 0 110.53-89.431 200-200 200zm107.244-255.2c0 67.052-72.421 68.084-72.421 92.863V300c0 6.627-5.373 12-12 12h-45.647c-6.627 0-12-5.373-12-12v-8.659c0-35.745 27.1-50.034 47.579-61.516 17.561-9.845 28.324-16.541 28.324-29.579 0-17.246-21.999-28.693-39.784-28.693-23.189 0-33.894 10.977-48.942 29.969-4.057 5.12-11.46 6.071-16.666 2.124l-27.824-21.098c-5.107-3.872-6.251-11.066-2.644-16.363C184.846 131.491 214.94 112 261.794 112c49.071 0 101.45 38.304 101.45 88.8zM298 368c0 23.159-18.841 42-42 42s-42-18.841-42-42 18.841-42 42-42 42 18.841 42 42z"
                                                                      />
                                                                    </svg>
                                                                  </OutlinedQuestionCircleIcon>
                                                                </FindRefWrapper>
                                                              </Popper>
                                                            </Tooltip>
                                                          </div>
                                                        </SplitItem>
                                                        <SplitItem
                                                          className="pf-u-ml-md"
                                                        >
                                                          <div
                                                            className="pf-l-split__item pf-u-ml-md"
                                                          />
                                                        </SplitItem>
                                                      </div>
                                                    </Split>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </TextContent>
                                      </div>
                                    </StackItem>
                                    <StackItem>
                                      <div
                                        className="pf-l-stack__item"
                                      >
                                        <TextContent>
                                          <div
                                            className="pf-c-content"
                                          >
                                            <Text
                                              className="pf-u-mt-xs"
                                              component="p"
                                            >
                                              <p
                                                className="pf-u-mt-xs"
                                                data-ouia-component-id="OUIA-Generated-Text-3"
                                                data-ouia-component-type="PF4/Text"
                                                data-ouia-safe={true}
                                                data-pf-content={true}
                                              >
                                                <a
                                                  className="kb-link"
                                                  href="https://access.redhat.com/node/4572391"
                                                  rel="noopener noreferrer"
                                                  target="_blank"
                                                >
                                                  Knowledgebase article
                                                  <ExternalLinkAltIcon
                                                    className="l-sm-spacer"
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      className="l-sm-spacer"
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 512 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z"
                                                      />
                                                    </svg>
                                                  </ExternalLinkAltIcon>
                                                </a>
                                              </p>
                                            </Text>
                                          </div>
                                        </TextContent>
                                      </div>
                                    </StackItem>
                                  </div>
                                </Stack>
                              </div>
                            </GridItem>
                            <GridItem
                              md={3}
                              sm={12}
                            >
                              <div
                                className="pf-l-grid__item pf-m-12-col-on-sm pf-m-3-col-on-md"
                              >
                                <TextContent>
                                  <div
                                    className="pf-c-content"
                                  >
                                    <Label>
                                      <span
                                        className="vuln-label "
                                        style={
                                          Object {
                                            "display": "block",
                                          }
                                        }
                                      >
                                        Associated CVEs:
                                      </span>
                                    </Label>
                                    <Text
                                      className="pf-u-mt-xs associated-cves"
                                      component="p"
                                    >
                                      <p
                                        className="pf-u-mt-xs associated-cves"
                                        data-ouia-component-id="OUIA-Generated-Text-4"
                                        data-ouia-component-type="PF4/Text"
                                        data-ouia-safe={true}
                                        data-pf-content={true}
                                      >
                                        CVE-2019-11135
                                         (
                                        current
                                        )
                                      </p>
                                    </Text>
                                  </div>
                                </TextContent>
                              </div>
                            </GridItem>
                          </div>
                        </Grid>
                      </div>
                    </CardBody>
                  </div>
                </div>
              </ExpandableSection>
            </article>
          </Card>
        </CSAwRuleBox>
      </injectIntl(CSAwRuleBox)>
    </Router>
  </BrowserRouter>
</Provider>
`;
