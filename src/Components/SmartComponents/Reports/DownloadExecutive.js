
import React, { useState } from 'react';
import { useIntl } from 'react-intl';
import { ExportIcon } from '@patternfly/react-icons';
import { DateFormat } from '@redhat-cloud-services/frontend-components';
import { DownloadButton } from '@redhat-cloud-services/frontend-components-pdf-generator';
import { getExecutiveReport } from '../../../Helpers/APIHelper';
import messages from '../../../Messages';
import buildExecReport from './BuildExecReport';

const DownloadExecutive = () => {
    const intl = useIntl();
    const [loading, setLoading] = useState(false);

    const dataFetch = async () => {
        setLoading(true);

        const data = await getExecutiveReport();
        const report = buildExecReport({ data, intl });

        setLoading(false);
        return [report];

    };

    const date = new DateFormat({ date: new Date(), type: 'exact' }).props.children;

    return (
        <div style={{ float: 'right' }} >

            <DownloadButton
                label={loading ? intl.formatMessage(messages.loading) : intl.formatMessage(messages.downloadExecutiveLabel)}
                asyncFunction={dataFetch}
                buttonProps={{ variant: 'link', icon: <ExportIcon className='iconOverride' />, component: 'a' }}
                type={intl.formatMessage(messages.vulnerabilitiesHeader)}
                fileName={`Vulnerability-Executive-Report--${date.replace(/ /g, '-')}.pdf`}
            />
        </div>
    );

};

export default DownloadExecutive;
