// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`KebabItems component Should render without default params 1`] = `
<BaseKebab
  dropdownItems={
    Array [
      <DropdownItem
        component="button"
        onClick={[Function]}
      >
        <FormattedMessage
          defaultMessage="Export as JSON"
          id="kebab.exportAsJson"
          values={Object {}}
        />
      </DropdownItem>,
      <DropdownItem
        component="button"
        onClick={[Function]}
      >
        <FormattedMessage
          defaultMessage="Export as CSV"
          id="kebab.exportAsCsv"
          values={Object {}}
        />
      </DropdownItem>,
      <DropdownItem
        component="button"
        onClick={[Function]}
      >
        <FormattedMessage
          defaultMessage="Edit business risk"
          id="kebab.editBusinnesRisk"
          values={Object {}}
        />
      </DropdownItem>,
      <DropdownItem
        component="button"
        onClick={[Function]}
      >
        <FormattedMessage
          defaultMessage="Edit status"
          id="kebab.editStatus"
          values={Object {}}
        />
      </DropdownItem>,
      <DropdownItem
        component="button"
        onClick={[Function]}
      >
        <FormattedMessage
          defaultMessage="Expand all CVEs"
          id="kebab.expandCves"
          values={Object {}}
        />
      </DropdownItem>,
      <DropdownItem
        component="button"
        onClick={[Function]}
      >
        <FormattedMessage
          defaultMessage="Exclude system from vulnerability analysis"
          id="kebab.excludeVulnerabilityAnalysis"
          values={Object {}}
        />
      </DropdownItem>,
      <DropdownItem
        component="button"
        onClick={[Function]}
      >
        <FormattedMessage
          defaultMessage="Exclude system from analysis"
          id="kebab.excludeAnalysis"
          values={Object {}}
        />
      </DropdownItem>,
      <DropdownItem
        component="button"
        onClick={[Function]}
      >
        <FormattedMessage
          defaultMessage="Show systems excluded from vulnerability analysis"
          id="kebab.ShowExcludedSystems"
          values={Object {}}
        />
      </DropdownItem>,
    ]
  }
>
  <div>
    <Dropdown
      dropdownItems={
        Array [
          <DropdownItem
            component="button"
            onClick={[Function]}
          >
            <FormattedMessage
              defaultMessage="Export as JSON"
              id="kebab.exportAsJson"
              values={Object {}}
            />
          </DropdownItem>,
          <DropdownItem
            component="button"
            onClick={[Function]}
          >
            <FormattedMessage
              defaultMessage="Export as CSV"
              id="kebab.exportAsCsv"
              values={Object {}}
            />
          </DropdownItem>,
          <DropdownItem
            component="button"
            onClick={[Function]}
          >
            <FormattedMessage
              defaultMessage="Edit business risk"
              id="kebab.editBusinnesRisk"
              values={Object {}}
            />
          </DropdownItem>,
          <DropdownItem
            component="button"
            onClick={[Function]}
          >
            <FormattedMessage
              defaultMessage="Edit status"
              id="kebab.editStatus"
              values={Object {}}
            />
          </DropdownItem>,
          <DropdownItem
            component="button"
            onClick={[Function]}
          >
            <FormattedMessage
              defaultMessage="Expand all CVEs"
              id="kebab.expandCves"
              values={Object {}}
            />
          </DropdownItem>,
          <DropdownItem
            component="button"
            onClick={[Function]}
          >
            <FormattedMessage
              defaultMessage="Exclude system from vulnerability analysis"
              id="kebab.excludeVulnerabilityAnalysis"
              values={Object {}}
            />
          </DropdownItem>,
          <DropdownItem
            component="button"
            onClick={[Function]}
          >
            <FormattedMessage
              defaultMessage="Exclude system from analysis"
              id="kebab.excludeAnalysis"
              values={Object {}}
            />
          </DropdownItem>,
          <DropdownItem
            component="button"
            onClick={[Function]}
          >
            <FormattedMessage
              defaultMessage="Show systems excluded from vulnerability analysis"
              id="kebab.ShowExcludedSystems"
              values={Object {}}
            />
          </DropdownItem>,
        ]
      }
      isOpen={true}
      isPlain={true}
      onSelect={[Function]}
      toggle={
        <KebabToggle
          onToggle={[Function]}
        />
      }
    >
      <Component
        dropdownItems={
          Array [
            <DropdownItem
              component="button"
              onClick={[Function]}
            >
              <FormattedMessage
                defaultMessage="Export as JSON"
                id="kebab.exportAsJson"
                values={Object {}}
              />
            </DropdownItem>,
            <DropdownItem
              component="button"
              onClick={[Function]}
            >
              <FormattedMessage
                defaultMessage="Export as CSV"
                id="kebab.exportAsCsv"
                values={Object {}}
              />
            </DropdownItem>,
            <DropdownItem
              component="button"
              onClick={[Function]}
            >
              <FormattedMessage
                defaultMessage="Edit business risk"
                id="kebab.editBusinnesRisk"
                values={Object {}}
              />
            </DropdownItem>,
            <DropdownItem
              component="button"
              onClick={[Function]}
            >
              <FormattedMessage
                defaultMessage="Edit status"
                id="kebab.editStatus"
                values={Object {}}
              />
            </DropdownItem>,
            <DropdownItem
              component="button"
              onClick={[Function]}
            >
              <FormattedMessage
                defaultMessage="Expand all CVEs"
                id="kebab.expandCves"
                values={Object {}}
              />
            </DropdownItem>,
            <DropdownItem
              component="button"
              onClick={[Function]}
            >
              <FormattedMessage
                defaultMessage="Exclude system from vulnerability analysis"
                id="kebab.excludeVulnerabilityAnalysis"
                values={Object {}}
              />
            </DropdownItem>,
            <DropdownItem
              component="button"
              onClick={[Function]}
            >
              <FormattedMessage
                defaultMessage="Exclude system from analysis"
                id="kebab.excludeAnalysis"
                values={Object {}}
              />
            </DropdownItem>,
            <DropdownItem
              component="button"
              onClick={[Function]}
            >
              <FormattedMessage
                defaultMessage="Show systems excluded from vulnerability analysis"
                id="kebab.ShowExcludedSystems"
                values={Object {}}
              />
            </DropdownItem>,
          ]
        }
        isOpen={true}
        isPlain={true}
        toggle={
          <KebabToggle
            onToggle={[Function]}
          />
        }
      >
        <ComponentWithOuia
          component={[Function]}
          componentProps={
            Object {
              "dropdownItems": Array [
                <DropdownItem
                  component="button"
                  onClick={[Function]}
                >
                  <FormattedMessage
                    defaultMessage="Export as JSON"
                    id="kebab.exportAsJson"
                    values={Object {}}
                  />
                </DropdownItem>,
                <DropdownItem
                  component="button"
                  onClick={[Function]}
                >
                  <FormattedMessage
                    defaultMessage="Export as CSV"
                    id="kebab.exportAsCsv"
                    values={Object {}}
                  />
                </DropdownItem>,
                <DropdownItem
                  component="button"
                  onClick={[Function]}
                >
                  <FormattedMessage
                    defaultMessage="Edit business risk"
                    id="kebab.editBusinnesRisk"
                    values={Object {}}
                  />
                </DropdownItem>,
                <DropdownItem
                  component="button"
                  onClick={[Function]}
                >
                  <FormattedMessage
                    defaultMessage="Edit status"
                    id="kebab.editStatus"
                    values={Object {}}
                  />
                </DropdownItem>,
                <DropdownItem
                  component="button"
                  onClick={[Function]}
                >
                  <FormattedMessage
                    defaultMessage="Expand all CVEs"
                    id="kebab.expandCves"
                    values={Object {}}
                  />
                </DropdownItem>,
                <DropdownItem
                  component="button"
                  onClick={[Function]}
                >
                  <FormattedMessage
                    defaultMessage="Exclude system from vulnerability analysis"
                    id="kebab.excludeVulnerabilityAnalysis"
                    values={Object {}}
                  />
                </DropdownItem>,
                <DropdownItem
                  component="button"
                  onClick={[Function]}
                >
                  <FormattedMessage
                    defaultMessage="Exclude system from analysis"
                    id="kebab.excludeAnalysis"
                    values={Object {}}
                  />
                </DropdownItem>,
                <DropdownItem
                  component="button"
                  onClick={[Function]}
                >
                  <FormattedMessage
                    defaultMessage="Show systems excluded from vulnerability analysis"
                    id="kebab.ShowExcludedSystems"
                    values={Object {}}
                  />
                </DropdownItem>,
              ],
              "isOpen": true,
              "isPlain": true,
              "toggle": <KebabToggle
                onToggle={[Function]}
              />,
            }
          }
          consumerContext={null}
        >
          <DropdownWithContext
            autoFocus={true}
            className=""
            direction="down"
            dropdownItems={
              Array [
                <DropdownItem
                  component="button"
                  onClick={[Function]}
                >
                  <FormattedMessage
                    defaultMessage="Export as JSON"
                    id="kebab.exportAsJson"
                    values={Object {}}
                  />
                </DropdownItem>,
                <DropdownItem
                  component="button"
                  onClick={[Function]}
                >
                  <FormattedMessage
                    defaultMessage="Export as CSV"
                    id="kebab.exportAsCsv"
                    values={Object {}}
                  />
                </DropdownItem>,
                <DropdownItem
                  component="button"
                  onClick={[Function]}
                >
                  <FormattedMessage
                    defaultMessage="Edit business risk"
                    id="kebab.editBusinnesRisk"
                    values={Object {}}
                  />
                </DropdownItem>,
                <DropdownItem
                  component="button"
                  onClick={[Function]}
                >
                  <FormattedMessage
                    defaultMessage="Edit status"
                    id="kebab.editStatus"
                    values={Object {}}
                  />
                </DropdownItem>,
                <DropdownItem
                  component="button"
                  onClick={[Function]}
                >
                  <FormattedMessage
                    defaultMessage="Expand all CVEs"
                    id="kebab.expandCves"
                    values={Object {}}
                  />
                </DropdownItem>,
                <DropdownItem
                  component="button"
                  onClick={[Function]}
                >
                  <FormattedMessage
                    defaultMessage="Exclude system from vulnerability analysis"
                    id="kebab.excludeVulnerabilityAnalysis"
                    values={Object {}}
                  />
                </DropdownItem>,
                <DropdownItem
                  component="button"
                  onClick={[Function]}
                >
                  <FormattedMessage
                    defaultMessage="Exclude system from analysis"
                    id="kebab.excludeAnalysis"
                    values={Object {}}
                  />
                </DropdownItem>,
                <DropdownItem
                  component="button"
                  onClick={[Function]}
                >
                  <FormattedMessage
                    defaultMessage="Show systems excluded from vulnerability analysis"
                    id="kebab.ShowExcludedSystems"
                    values={Object {}}
                  />
                </DropdownItem>,
              ]
            }
            isGrouped={false}
            isOpen={true}
            isPlain={true}
            onSelect={[Function]}
            ouiaComponentType="Dropdown"
            ouiaContext={
              Object {
                "isOuia": false,
                "ouiaId": null,
              }
            }
            position="left"
            toggle={
              <KebabToggle
                onToggle={[Function]}
              />
            }
          >
            <div
              className="pf-c-dropdown pf-m-expanded"
            >
              <KebabToggle
                ariaHasPopup={true}
                id="pf-toggle-id-1"
                isOpen={true}
                isPlain={true}
                key=".0"
                onEnter={[Function]}
                onToggle={[Function]}
                parentRef={
                  Object {
                    "current": <div
                      class="pf-c-dropdown pf-m-expanded"
                    >
                      <button
                        aria-expanded="true"
                        aria-haspopup="true"
                        aria-label="Actions"
                        class="pf-c-dropdown__toggle pf-m-plain"
                        id="pf-toggle-id-1"
                        type="button"
                      >
                        <svg
                          aria-hidden="true"
                          fill="currentColor"
                          height="1em"
                          role="img"
                          style="vertical-align: -0.125em;"
                          viewBox="0 0 192 512"
                          width="1em"
                        >
                          <path
                            d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                            transform=""
                          />
                        </svg>
                      </button>
                      <ul
                        aria-labelledby="pf-toggle-id-1"
                        class="pf-c-dropdown__menu"
                        role="menu"
                      >
                        <li
                          role="menuitem"
                        >
                          <button
                            class="pf-c-dropdown__menu-item"
                            tabindex="-1"
                            type="button"
                          >
                            Export as JSON
                          </button>
                        </li>
                        <li
                          role="menuitem"
                        >
                          <button
                            class="pf-c-dropdown__menu-item"
                            tabindex="-1"
                            type="button"
                          >
                            Export as CSV
                          </button>
                        </li>
                        <li
                          role="menuitem"
                        >
                          <button
                            class="pf-c-dropdown__menu-item"
                            tabindex="-1"
                            type="button"
                          >
                            Edit business risk
                          </button>
                        </li>
                        <li
                          role="menuitem"
                        >
                          <button
                            class="pf-c-dropdown__menu-item"
                            tabindex="-1"
                            type="button"
                          >
                            Edit status
                          </button>
                        </li>
                        <li
                          role="menuitem"
                        >
                          <button
                            class="pf-c-dropdown__menu-item"
                            tabindex="-1"
                            type="button"
                          >
                            Expand all CVEs
                          </button>
                        </li>
                        <li
                          role="menuitem"
                        >
                          <button
                            class="pf-c-dropdown__menu-item"
                            tabindex="-1"
                            type="button"
                          >
                            Exclude system from vulnerability analysis
                          </button>
                        </li>
                        <li
                          role="menuitem"
                        >
                          <button
                            class="pf-c-dropdown__menu-item"
                            tabindex="-1"
                            type="button"
                          >
                            Exclude system from analysis
                          </button>
                        </li>
                        <li
                          role="menuitem"
                        >
                          <button
                            class="pf-c-dropdown__menu-item"
                            tabindex="-1"
                            type="button"
                          >
                            Show systems excluded from vulnerability analysis
                          </button>
                        </li>
                      </ul>
                    </div>,
                  }
                }
              >
                <Toggle
                  aria-label="Actions"
                  ariaHasPopup={true}
                  bubbleEvent={false}
                  className=""
                  id="pf-toggle-id-1"
                  isActive={false}
                  isDisabled={false}
                  isFocused={false}
                  isHovered={false}
                  isOpen={true}
                  isPlain={true}
                  isPrimary={false}
                  isSplitButton={false}
                  onEnter={[Function]}
                  onToggle={[Function]}
                  parentRef={
                    Object {
                      "current": <div
                        class="pf-c-dropdown pf-m-expanded"
                      >
                        <button
                          aria-expanded="true"
                          aria-haspopup="true"
                          aria-label="Actions"
                          class="pf-c-dropdown__toggle pf-m-plain"
                          id="pf-toggle-id-1"
                          type="button"
                        >
                          <svg
                            aria-hidden="true"
                            fill="currentColor"
                            height="1em"
                            role="img"
                            style="vertical-align: -0.125em;"
                            viewBox="0 0 192 512"
                            width="1em"
                          >
                            <path
                              d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                              transform=""
                            />
                          </svg>
                        </button>
                        <ul
                          aria-labelledby="pf-toggle-id-1"
                          class="pf-c-dropdown__menu"
                          role="menu"
                        >
                          <li
                            role="menuitem"
                          >
                            <button
                              class="pf-c-dropdown__menu-item"
                              tabindex="-1"
                              type="button"
                            >
                              Export as JSON
                            </button>
                          </li>
                          <li
                            role="menuitem"
                          >
                            <button
                              class="pf-c-dropdown__menu-item"
                              tabindex="-1"
                              type="button"
                            >
                              Export as CSV
                            </button>
                          </li>
                          <li
                            role="menuitem"
                          >
                            <button
                              class="pf-c-dropdown__menu-item"
                              tabindex="-1"
                              type="button"
                            >
                              Edit business risk
                            </button>
                          </li>
                          <li
                            role="menuitem"
                          >
                            <button
                              class="pf-c-dropdown__menu-item"
                              tabindex="-1"
                              type="button"
                            >
                              Edit status
                            </button>
                          </li>
                          <li
                            role="menuitem"
                          >
                            <button
                              class="pf-c-dropdown__menu-item"
                              tabindex="-1"
                              type="button"
                            >
                              Expand all CVEs
                            </button>
                          </li>
                          <li
                            role="menuitem"
                          >
                            <button
                              class="pf-c-dropdown__menu-item"
                              tabindex="-1"
                              type="button"
                            >
                              Exclude system from vulnerability analysis
                            </button>
                          </li>
                          <li
                            role="menuitem"
                          >
                            <button
                              class="pf-c-dropdown__menu-item"
                              tabindex="-1"
                              type="button"
                            >
                              Exclude system from analysis
                            </button>
                          </li>
                          <li
                            role="menuitem"
                          >
                            <button
                              class="pf-c-dropdown__menu-item"
                              tabindex="-1"
                              type="button"
                            >
                              Show systems excluded from vulnerability analysis
                            </button>
                          </li>
                        </ul>
                      </div>,
                    }
                  }
                >
                  <button
                    aria-expanded={true}
                    aria-haspopup={true}
                    aria-label="Actions"
                    className="pf-c-dropdown__toggle pf-m-plain"
                    disabled={false}
                    id="pf-toggle-id-1"
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    type="button"
                  >
                    <EllipsisVIcon
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                      title={null}
                    >
                      <svg
                        aria-hidden={true}
                        aria-labelledby={null}
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style={
                          Object {
                            "verticalAlign": "-0.125em",
                          }
                        }
                        viewBox="0 0 192 512"
                        width="1em"
                      >
                        <path
                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                          transform=""
                        />
                      </svg>
                    </EllipsisVIcon>
                  </button>
                </Toggle>
              </KebabToggle>
              <DropdownMenu
                aria-labelledby="pf-toggle-id-1"
                autoFocus={false}
                className=""
                component="ul"
                isGrouped={false}
                isOpen={true}
                openedOnEnter={false}
                position="left"
              >
                <ul
                  aria-labelledby="pf-toggle-id-1"
                  autoFocus={false}
                  className="pf-c-dropdown__menu"
                  hidden={false}
                  role="menu"
                >
                  <DropdownItem
                    component="button"
                    index={0}
                    key=".$json"
                    onClick={[Function]}
                  >
                    <InternalDropdownItem
                      className=""
                      component="button"
                      context={
                        Object {
                          "keyHandler": [Function],
                          "sendRef": [Function],
                        }
                      }
                      enterTriggersArrowDown={false}
                      index={0}
                      isDisabled={false}
                      isHovered={false}
                      onClick={[Function]}
                      role="menuitem"
                      tabIndex={-1}
                      tooltipProps={Object {}}
                      variant="item"
                    >
                      <li
                        className={null}
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        role="menuitem"
                      >
                        <button
                          className="pf-c-dropdown__menu-item"
                          disabled={false}
                          tabIndex={-1}
                          type="button"
                        >
                          <FormattedMessage
                            defaultMessage="Export as JSON"
                            id="kebab.exportAsJson"
                            values={Object {}}
                          >
                            Export as JSON
                          </FormattedMessage>
                        </button>
                      </li>
                    </InternalDropdownItem>
                  </DropdownItem>
                  <DropdownItem
                    component="button"
                    index={1}
                    key=".$csv"
                    onClick={[Function]}
                  >
                    <InternalDropdownItem
                      className=""
                      component="button"
                      context={
                        Object {
                          "keyHandler": [Function],
                          "sendRef": [Function],
                        }
                      }
                      enterTriggersArrowDown={false}
                      index={1}
                      isDisabled={false}
                      isHovered={false}
                      onClick={[Function]}
                      role="menuitem"
                      tabIndex={-1}
                      tooltipProps={Object {}}
                      variant="item"
                    >
                      <li
                        className={null}
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        role="menuitem"
                      >
                        <button
                          className="pf-c-dropdown__menu-item"
                          disabled={false}
                          tabIndex={-1}
                          type="button"
                        >
                          <FormattedMessage
                            defaultMessage="Export as CSV"
                            id="kebab.exportAsCsv"
                            values={Object {}}
                          >
                            Export as CSV
                          </FormattedMessage>
                        </button>
                      </li>
                    </InternalDropdownItem>
                  </DropdownItem>
                  <DropdownItem
                    component="button"
                    index={2}
                    key=".$editBusinessRisk"
                    onClick={[Function]}
                  >
                    <InternalDropdownItem
                      className=""
                      component="button"
                      context={
                        Object {
                          "keyHandler": [Function],
                          "sendRef": [Function],
                        }
                      }
                      enterTriggersArrowDown={false}
                      index={2}
                      isDisabled={false}
                      isHovered={false}
                      onClick={[Function]}
                      role="menuitem"
                      tabIndex={-1}
                      tooltipProps={Object {}}
                      variant="item"
                    >
                      <li
                        className={null}
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        role="menuitem"
                      >
                        <button
                          className="pf-c-dropdown__menu-item"
                          disabled={false}
                          tabIndex={-1}
                          type="button"
                        >
                          <FormattedMessage
                            defaultMessage="Edit business risk"
                            id="kebab.editBusinnesRisk"
                            values={Object {}}
                          >
                            Edit business risk
                          </FormattedMessage>
                        </button>
                      </li>
                    </InternalDropdownItem>
                  </DropdownItem>
                  <DropdownItem
                    component="button"
                    index={3}
                    key=".$editStatus"
                    onClick={[Function]}
                  >
                    <InternalDropdownItem
                      className=""
                      component="button"
                      context={
                        Object {
                          "keyHandler": [Function],
                          "sendRef": [Function],
                        }
                      }
                      enterTriggersArrowDown={false}
                      index={3}
                      isDisabled={false}
                      isHovered={false}
                      onClick={[Function]}
                      role="menuitem"
                      tabIndex={-1}
                      tooltipProps={Object {}}
                      variant="item"
                    >
                      <li
                        className={null}
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        role="menuitem"
                      >
                        <button
                          className="pf-c-dropdown__menu-item"
                          disabled={false}
                          tabIndex={-1}
                          type="button"
                        >
                          <FormattedMessage
                            defaultMessage="Edit status"
                            id="kebab.editStatus"
                            values={Object {}}
                          >
                            Edit status
                          </FormattedMessage>
                        </button>
                      </li>
                    </InternalDropdownItem>
                  </DropdownItem>
                  <DropdownItem
                    component="button"
                    index={4}
                    key=".$toggleCveDescription"
                    onClick={[Function]}
                  >
                    <InternalDropdownItem
                      className=""
                      component="button"
                      context={
                        Object {
                          "keyHandler": [Function],
                          "sendRef": [Function],
                        }
                      }
                      enterTriggersArrowDown={false}
                      index={4}
                      isDisabled={false}
                      isHovered={false}
                      onClick={[Function]}
                      role="menuitem"
                      tabIndex={-1}
                      tooltipProps={Object {}}
                      variant="item"
                    >
                      <li
                        className={null}
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        role="menuitem"
                      >
                        <button
                          className="pf-c-dropdown__menu-item"
                          disabled={false}
                          tabIndex={-1}
                          type="button"
                        >
                          <FormattedMessage
                            defaultMessage="Expand all CVEs"
                            id="kebab.expandCves"
                            values={Object {}}
                          >
                            Expand all CVEs
                          </FormattedMessage>
                        </button>
                      </li>
                    </InternalDropdownItem>
                  </DropdownItem>
                  <DropdownItem
                    component="button"
                    index={5}
                    key=".$do_opt_out"
                    onClick={[Function]}
                  >
                    <InternalDropdownItem
                      className=""
                      component="button"
                      context={
                        Object {
                          "keyHandler": [Function],
                          "sendRef": [Function],
                        }
                      }
                      enterTriggersArrowDown={false}
                      index={5}
                      isDisabled={false}
                      isHovered={false}
                      onClick={[Function]}
                      role="menuitem"
                      tabIndex={-1}
                      tooltipProps={Object {}}
                      variant="item"
                    >
                      <li
                        className={null}
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        role="menuitem"
                      >
                        <button
                          className="pf-c-dropdown__menu-item"
                          disabled={false}
                          tabIndex={-1}
                          type="button"
                        >
                          <FormattedMessage
                            defaultMessage="Exclude system from vulnerability analysis"
                            id="kebab.excludeVulnerabilityAnalysis"
                            values={Object {}}
                          >
                            Exclude system from vulnerability analysis
                          </FormattedMessage>
                        </button>
                      </li>
                    </InternalDropdownItem>
                  </DropdownItem>
                  <DropdownItem
                    component="button"
                    index={6}
                    key=".$do_opt_out"
                    onClick={[Function]}
                  >
                    <InternalDropdownItem
                      className=""
                      component="button"
                      context={
                        Object {
                          "keyHandler": [Function],
                          "sendRef": [Function],
                        }
                      }
                      enterTriggersArrowDown={false}
                      index={6}
                      isDisabled={false}
                      isHovered={false}
                      onClick={[Function]}
                      role="menuitem"
                      tabIndex={-1}
                      tooltipProps={Object {}}
                      variant="item"
                    >
                      <li
                        className={null}
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        role="menuitem"
                      >
                        <button
                          className="pf-c-dropdown__menu-item"
                          disabled={false}
                          tabIndex={-1}
                          type="button"
                        >
                          <FormattedMessage
                            defaultMessage="Exclude system from analysis"
                            id="kebab.excludeAnalysis"
                            values={Object {}}
                          >
                            Exclude system from analysis
                          </FormattedMessage>
                        </button>
                      </li>
                    </InternalDropdownItem>
                  </DropdownItem>
                  <DropdownItem
                    component="button"
                    index={7}
                    key=".$toggle_opt_out"
                    onClick={[Function]}
                  >
                    <InternalDropdownItem
                      className=""
                      component="button"
                      context={
                        Object {
                          "keyHandler": [Function],
                          "sendRef": [Function],
                        }
                      }
                      enterTriggersArrowDown={false}
                      index={7}
                      isDisabled={false}
                      isHovered={false}
                      onClick={[Function]}
                      role="menuitem"
                      tabIndex={-1}
                      tooltipProps={Object {}}
                      variant="item"
                    >
                      <li
                        className={null}
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        role="menuitem"
                      >
                        <button
                          className="pf-c-dropdown__menu-item"
                          disabled={false}
                          tabIndex={-1}
                          type="button"
                        >
                          <FormattedMessage
                            defaultMessage="Show systems excluded from vulnerability analysis"
                            id="kebab.ShowExcludedSystems"
                            values={Object {}}
                          >
                            Show systems excluded from vulnerability analysis
                          </FormattedMessage>
                        </button>
                      </li>
                    </InternalDropdownItem>
                  </DropdownItem>
                </ul>
              </DropdownMenu>
            </div>
          </DropdownWithContext>
        </ComponentWithOuia>
      </Component>
    </Dropdown>
  </div>
</BaseKebab>
`;

exports[`KebabItems component should render with collapse all text 1`] = `
<BaseKebab
  dropdownItems={
    Array [
      <DropdownItem
        component="button"
        onClick={[Function]}
      >
        <FormattedMessage
          defaultMessage="Collapse all CVEs"
          id="kebab.collapseCves"
          values={Object {}}
        />
      </DropdownItem>,
    ]
  }
>
  <div>
    <Dropdown
      dropdownItems={
        Array [
          <DropdownItem
            component="button"
            onClick={[Function]}
          >
            <FormattedMessage
              defaultMessage="Collapse all CVEs"
              id="kebab.collapseCves"
              values={Object {}}
            />
          </DropdownItem>,
        ]
      }
      isOpen={true}
      isPlain={true}
      onSelect={[Function]}
      toggle={
        <KebabToggle
          onToggle={[Function]}
        />
      }
    >
      <Component
        dropdownItems={
          Array [
            <DropdownItem
              component="button"
              onClick={[Function]}
            >
              <FormattedMessage
                defaultMessage="Collapse all CVEs"
                id="kebab.collapseCves"
                values={Object {}}
              />
            </DropdownItem>,
          ]
        }
        isOpen={true}
        isPlain={true}
        toggle={
          <KebabToggle
            onToggle={[Function]}
          />
        }
      >
        <ComponentWithOuia
          component={[Function]}
          componentProps={
            Object {
              "dropdownItems": Array [
                <DropdownItem
                  component="button"
                  onClick={[Function]}
                >
                  <FormattedMessage
                    defaultMessage="Collapse all CVEs"
                    id="kebab.collapseCves"
                    values={Object {}}
                  />
                </DropdownItem>,
              ],
              "isOpen": true,
              "isPlain": true,
              "toggle": <KebabToggle
                onToggle={[Function]}
              />,
            }
          }
          consumerContext={null}
        >
          <DropdownWithContext
            autoFocus={true}
            className=""
            direction="down"
            dropdownItems={
              Array [
                <DropdownItem
                  component="button"
                  onClick={[Function]}
                >
                  <FormattedMessage
                    defaultMessage="Collapse all CVEs"
                    id="kebab.collapseCves"
                    values={Object {}}
                  />
                </DropdownItem>,
              ]
            }
            isGrouped={false}
            isOpen={true}
            isPlain={true}
            onSelect={[Function]}
            ouiaComponentType="Dropdown"
            ouiaContext={
              Object {
                "isOuia": false,
                "ouiaId": null,
              }
            }
            position="left"
            toggle={
              <KebabToggle
                onToggle={[Function]}
              />
            }
          >
            <div
              className="pf-c-dropdown pf-m-expanded"
            >
              <KebabToggle
                ariaHasPopup={true}
                id="pf-toggle-id-3"
                isOpen={true}
                isPlain={true}
                key=".0"
                onEnter={[Function]}
                onToggle={[Function]}
                parentRef={
                  Object {
                    "current": <div
                      class="pf-c-dropdown pf-m-expanded"
                    >
                      <button
                        aria-expanded="true"
                        aria-haspopup="true"
                        aria-label="Actions"
                        class="pf-c-dropdown__toggle pf-m-plain"
                        id="pf-toggle-id-3"
                        type="button"
                      >
                        <svg
                          aria-hidden="true"
                          fill="currentColor"
                          height="1em"
                          role="img"
                          style="vertical-align: -0.125em;"
                          viewBox="0 0 192 512"
                          width="1em"
                        >
                          <path
                            d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                            transform=""
                          />
                        </svg>
                      </button>
                      <ul
                        aria-labelledby="pf-toggle-id-3"
                        class="pf-c-dropdown__menu"
                        role="menu"
                      >
                        <li
                          role="menuitem"
                        >
                          <button
                            class="pf-c-dropdown__menu-item"
                            tabindex="-1"
                            type="button"
                          >
                            Collapse all CVEs
                          </button>
                        </li>
                      </ul>
                    </div>,
                  }
                }
              >
                <Toggle
                  aria-label="Actions"
                  ariaHasPopup={true}
                  bubbleEvent={false}
                  className=""
                  id="pf-toggle-id-3"
                  isActive={false}
                  isDisabled={false}
                  isFocused={false}
                  isHovered={false}
                  isOpen={true}
                  isPlain={true}
                  isPrimary={false}
                  isSplitButton={false}
                  onEnter={[Function]}
                  onToggle={[Function]}
                  parentRef={
                    Object {
                      "current": <div
                        class="pf-c-dropdown pf-m-expanded"
                      >
                        <button
                          aria-expanded="true"
                          aria-haspopup="true"
                          aria-label="Actions"
                          class="pf-c-dropdown__toggle pf-m-plain"
                          id="pf-toggle-id-3"
                          type="button"
                        >
                          <svg
                            aria-hidden="true"
                            fill="currentColor"
                            height="1em"
                            role="img"
                            style="vertical-align: -0.125em;"
                            viewBox="0 0 192 512"
                            width="1em"
                          >
                            <path
                              d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                              transform=""
                            />
                          </svg>
                        </button>
                        <ul
                          aria-labelledby="pf-toggle-id-3"
                          class="pf-c-dropdown__menu"
                          role="menu"
                        >
                          <li
                            role="menuitem"
                          >
                            <button
                              class="pf-c-dropdown__menu-item"
                              tabindex="-1"
                              type="button"
                            >
                              Collapse all CVEs
                            </button>
                          </li>
                        </ul>
                      </div>,
                    }
                  }
                >
                  <button
                    aria-expanded={true}
                    aria-haspopup={true}
                    aria-label="Actions"
                    className="pf-c-dropdown__toggle pf-m-plain"
                    disabled={false}
                    id="pf-toggle-id-3"
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    type="button"
                  >
                    <EllipsisVIcon
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                      title={null}
                    >
                      <svg
                        aria-hidden={true}
                        aria-labelledby={null}
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style={
                          Object {
                            "verticalAlign": "-0.125em",
                          }
                        }
                        viewBox="0 0 192 512"
                        width="1em"
                      >
                        <path
                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                          transform=""
                        />
                      </svg>
                    </EllipsisVIcon>
                  </button>
                </Toggle>
              </KebabToggle>
              <DropdownMenu
                aria-labelledby="pf-toggle-id-3"
                autoFocus={false}
                className=""
                component="ul"
                isGrouped={false}
                isOpen={true}
                openedOnEnter={false}
                position="left"
              >
                <ul
                  aria-labelledby="pf-toggle-id-3"
                  autoFocus={false}
                  className="pf-c-dropdown__menu"
                  hidden={false}
                  role="menu"
                >
                  <DropdownItem
                    component="button"
                    index={0}
                    key=".$toggleCveDescription"
                    onClick={[Function]}
                  >
                    <InternalDropdownItem
                      className=""
                      component="button"
                      context={
                        Object {
                          "keyHandler": [Function],
                          "sendRef": [Function],
                        }
                      }
                      enterTriggersArrowDown={false}
                      index={0}
                      isDisabled={false}
                      isHovered={false}
                      onClick={[Function]}
                      role="menuitem"
                      tabIndex={-1}
                      tooltipProps={Object {}}
                      variant="item"
                    >
                      <li
                        className={null}
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        role="menuitem"
                      >
                        <button
                          className="pf-c-dropdown__menu-item"
                          disabled={false}
                          tabIndex={-1}
                          type="button"
                        >
                          <FormattedMessage
                            defaultMessage="Collapse all CVEs"
                            id="kebab.collapseCves"
                            values={Object {}}
                          >
                            Collapse all CVEs
                          </FormattedMessage>
                        </button>
                      </li>
                    </InternalDropdownItem>
                  </DropdownItem>
                </ul>
              </DropdownMenu>
            </div>
          </DropdownWithContext>
        </ComponentWithOuia>
      </Component>
    </Dropdown>
  </div>
</BaseKebab>
`;

exports[`KebabItems component should render with hide systems 1`] = `
<BaseKebab
  dropdownItems={
    Array [
      <DropdownItem
        component="button"
        onClick={[Function]}
      >
        <FormattedMessage
          defaultMessage="Hide systems excluded from vulnerability analysis"
          id="kebab.hideExcludedSystems"
          values={Object {}}
        />
      </DropdownItem>,
    ]
  }
>
  <div>
    <Dropdown
      dropdownItems={
        Array [
          <DropdownItem
            component="button"
            onClick={[Function]}
          >
            <FormattedMessage
              defaultMessage="Hide systems excluded from vulnerability analysis"
              id="kebab.hideExcludedSystems"
              values={Object {}}
            />
          </DropdownItem>,
        ]
      }
      isOpen={true}
      isPlain={true}
      onSelect={[Function]}
      toggle={
        <KebabToggle
          onToggle={[Function]}
        />
      }
    >
      <Component
        dropdownItems={
          Array [
            <DropdownItem
              component="button"
              onClick={[Function]}
            >
              <FormattedMessage
                defaultMessage="Hide systems excluded from vulnerability analysis"
                id="kebab.hideExcludedSystems"
                values={Object {}}
              />
            </DropdownItem>,
          ]
        }
        isOpen={true}
        isPlain={true}
        toggle={
          <KebabToggle
            onToggle={[Function]}
          />
        }
      >
        <ComponentWithOuia
          component={[Function]}
          componentProps={
            Object {
              "dropdownItems": Array [
                <DropdownItem
                  component="button"
                  onClick={[Function]}
                >
                  <FormattedMessage
                    defaultMessage="Hide systems excluded from vulnerability analysis"
                    id="kebab.hideExcludedSystems"
                    values={Object {}}
                  />
                </DropdownItem>,
              ],
              "isOpen": true,
              "isPlain": true,
              "toggle": <KebabToggle
                onToggle={[Function]}
              />,
            }
          }
          consumerContext={null}
        >
          <DropdownWithContext
            autoFocus={true}
            className=""
            direction="down"
            dropdownItems={
              Array [
                <DropdownItem
                  component="button"
                  onClick={[Function]}
                >
                  <FormattedMessage
                    defaultMessage="Hide systems excluded from vulnerability analysis"
                    id="kebab.hideExcludedSystems"
                    values={Object {}}
                  />
                </DropdownItem>,
              ]
            }
            isGrouped={false}
            isOpen={true}
            isPlain={true}
            onSelect={[Function]}
            ouiaComponentType="Dropdown"
            ouiaContext={
              Object {
                "isOuia": false,
                "ouiaId": null,
              }
            }
            position="left"
            toggle={
              <KebabToggle
                onToggle={[Function]}
              />
            }
          >
            <div
              className="pf-c-dropdown pf-m-expanded"
            >
              <KebabToggle
                ariaHasPopup={true}
                id="pf-toggle-id-7"
                isOpen={true}
                isPlain={true}
                key=".0"
                onEnter={[Function]}
                onToggle={[Function]}
                parentRef={
                  Object {
                    "current": <div
                      class="pf-c-dropdown pf-m-expanded"
                    >
                      <button
                        aria-expanded="true"
                        aria-haspopup="true"
                        aria-label="Actions"
                        class="pf-c-dropdown__toggle pf-m-plain"
                        id="pf-toggle-id-7"
                        type="button"
                      >
                        <svg
                          aria-hidden="true"
                          fill="currentColor"
                          height="1em"
                          role="img"
                          style="vertical-align: -0.125em;"
                          viewBox="0 0 192 512"
                          width="1em"
                        >
                          <path
                            d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                            transform=""
                          />
                        </svg>
                      </button>
                      <ul
                        aria-labelledby="pf-toggle-id-7"
                        class="pf-c-dropdown__menu"
                        role="menu"
                      >
                        <li
                          role="menuitem"
                        >
                          <button
                            class="pf-c-dropdown__menu-item"
                            tabindex="-1"
                            type="button"
                          >
                            Hide systems excluded from vulnerability analysis
                          </button>
                        </li>
                      </ul>
                    </div>,
                  }
                }
              >
                <Toggle
                  aria-label="Actions"
                  ariaHasPopup={true}
                  bubbleEvent={false}
                  className=""
                  id="pf-toggle-id-7"
                  isActive={false}
                  isDisabled={false}
                  isFocused={false}
                  isHovered={false}
                  isOpen={true}
                  isPlain={true}
                  isPrimary={false}
                  isSplitButton={false}
                  onEnter={[Function]}
                  onToggle={[Function]}
                  parentRef={
                    Object {
                      "current": <div
                        class="pf-c-dropdown pf-m-expanded"
                      >
                        <button
                          aria-expanded="true"
                          aria-haspopup="true"
                          aria-label="Actions"
                          class="pf-c-dropdown__toggle pf-m-plain"
                          id="pf-toggle-id-7"
                          type="button"
                        >
                          <svg
                            aria-hidden="true"
                            fill="currentColor"
                            height="1em"
                            role="img"
                            style="vertical-align: -0.125em;"
                            viewBox="0 0 192 512"
                            width="1em"
                          >
                            <path
                              d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                              transform=""
                            />
                          </svg>
                        </button>
                        <ul
                          aria-labelledby="pf-toggle-id-7"
                          class="pf-c-dropdown__menu"
                          role="menu"
                        >
                          <li
                            role="menuitem"
                          >
                            <button
                              class="pf-c-dropdown__menu-item"
                              tabindex="-1"
                              type="button"
                            >
                              Hide systems excluded from vulnerability analysis
                            </button>
                          </li>
                        </ul>
                      </div>,
                    }
                  }
                >
                  <button
                    aria-expanded={true}
                    aria-haspopup={true}
                    aria-label="Actions"
                    className="pf-c-dropdown__toggle pf-m-plain"
                    disabled={false}
                    id="pf-toggle-id-7"
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    type="button"
                  >
                    <EllipsisVIcon
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                      title={null}
                    >
                      <svg
                        aria-hidden={true}
                        aria-labelledby={null}
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style={
                          Object {
                            "verticalAlign": "-0.125em",
                          }
                        }
                        viewBox="0 0 192 512"
                        width="1em"
                      >
                        <path
                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                          transform=""
                        />
                      </svg>
                    </EllipsisVIcon>
                  </button>
                </Toggle>
              </KebabToggle>
              <DropdownMenu
                aria-labelledby="pf-toggle-id-7"
                autoFocus={false}
                className=""
                component="ul"
                isGrouped={false}
                isOpen={true}
                openedOnEnter={false}
                position="left"
              >
                <ul
                  aria-labelledby="pf-toggle-id-7"
                  autoFocus={false}
                  className="pf-c-dropdown__menu"
                  hidden={false}
                  role="menu"
                >
                  <DropdownItem
                    component="button"
                    index={0}
                    key=".$toggle_opt_out"
                    onClick={[Function]}
                  >
                    <InternalDropdownItem
                      className=""
                      component="button"
                      context={
                        Object {
                          "keyHandler": [Function],
                          "sendRef": [Function],
                        }
                      }
                      enterTriggersArrowDown={false}
                      index={0}
                      isDisabled={false}
                      isHovered={false}
                      onClick={[Function]}
                      role="menuitem"
                      tabIndex={-1}
                      tooltipProps={Object {}}
                      variant="item"
                    >
                      <li
                        className={null}
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        role="menuitem"
                      >
                        <button
                          className="pf-c-dropdown__menu-item"
                          disabled={false}
                          tabIndex={-1}
                          type="button"
                        >
                          <FormattedMessage
                            defaultMessage="Hide systems excluded from vulnerability analysis"
                            id="kebab.hideExcludedSystems"
                            values={Object {}}
                          >
                            Hide systems excluded from vulnerability analysis
                          </FormattedMessage>
                        </button>
                      </li>
                    </InternalDropdownItem>
                  </DropdownItem>
                </ul>
              </DropdownMenu>
            </div>
          </DropdownWithContext>
        </ComponentWithOuia>
      </Component>
    </Dropdown>
  </div>
</BaseKebab>
`;

exports[`KebabItems component should render with resume text 1`] = `
<BaseKebab
  dropdownItems={
    Array [
      <DropdownItem
        component="button"
        onClick={[Function]}
      >
        <FormattedMessage
          defaultMessage="Resume analysis for system"
          id="kebab.resumeAnalysis"
          values={Object {}}
        />
      </DropdownItem>,
      <DropdownItem
        component="button"
        onClick={[Function]}
      >
        <FormattedMessage
          defaultMessage="Resume analysis for system"
          id="kebab.resumeAnalysis"
          values={Object {}}
        />
      </DropdownItem>,
    ]
  }
>
  <div>
    <Dropdown
      dropdownItems={
        Array [
          <DropdownItem
            component="button"
            onClick={[Function]}
          >
            <FormattedMessage
              defaultMessage="Resume analysis for system"
              id="kebab.resumeAnalysis"
              values={Object {}}
            />
          </DropdownItem>,
          <DropdownItem
            component="button"
            onClick={[Function]}
          >
            <FormattedMessage
              defaultMessage="Resume analysis for system"
              id="kebab.resumeAnalysis"
              values={Object {}}
            />
          </DropdownItem>,
        ]
      }
      isOpen={true}
      isPlain={true}
      onSelect={[Function]}
      toggle={
        <KebabToggle
          onToggle={[Function]}
        />
      }
    >
      <Component
        dropdownItems={
          Array [
            <DropdownItem
              component="button"
              onClick={[Function]}
            >
              <FormattedMessage
                defaultMessage="Resume analysis for system"
                id="kebab.resumeAnalysis"
                values={Object {}}
              />
            </DropdownItem>,
            <DropdownItem
              component="button"
              onClick={[Function]}
            >
              <FormattedMessage
                defaultMessage="Resume analysis for system"
                id="kebab.resumeAnalysis"
                values={Object {}}
              />
            </DropdownItem>,
          ]
        }
        isOpen={true}
        isPlain={true}
        toggle={
          <KebabToggle
            onToggle={[Function]}
          />
        }
      >
        <ComponentWithOuia
          component={[Function]}
          componentProps={
            Object {
              "dropdownItems": Array [
                <DropdownItem
                  component="button"
                  onClick={[Function]}
                >
                  <FormattedMessage
                    defaultMessage="Resume analysis for system"
                    id="kebab.resumeAnalysis"
                    values={Object {}}
                  />
                </DropdownItem>,
                <DropdownItem
                  component="button"
                  onClick={[Function]}
                >
                  <FormattedMessage
                    defaultMessage="Resume analysis for system"
                    id="kebab.resumeAnalysis"
                    values={Object {}}
                  />
                </DropdownItem>,
              ],
              "isOpen": true,
              "isPlain": true,
              "toggle": <KebabToggle
                onToggle={[Function]}
              />,
            }
          }
          consumerContext={null}
        >
          <DropdownWithContext
            autoFocus={true}
            className=""
            direction="down"
            dropdownItems={
              Array [
                <DropdownItem
                  component="button"
                  onClick={[Function]}
                >
                  <FormattedMessage
                    defaultMessage="Resume analysis for system"
                    id="kebab.resumeAnalysis"
                    values={Object {}}
                  />
                </DropdownItem>,
                <DropdownItem
                  component="button"
                  onClick={[Function]}
                >
                  <FormattedMessage
                    defaultMessage="Resume analysis for system"
                    id="kebab.resumeAnalysis"
                    values={Object {}}
                  />
                </DropdownItem>,
              ]
            }
            isGrouped={false}
            isOpen={true}
            isPlain={true}
            onSelect={[Function]}
            ouiaComponentType="Dropdown"
            ouiaContext={
              Object {
                "isOuia": false,
                "ouiaId": null,
              }
            }
            position="left"
            toggle={
              <KebabToggle
                onToggle={[Function]}
              />
            }
          >
            <div
              className="pf-c-dropdown pf-m-expanded"
            >
              <KebabToggle
                ariaHasPopup={true}
                id="pf-toggle-id-5"
                isOpen={true}
                isPlain={true}
                key=".0"
                onEnter={[Function]}
                onToggle={[Function]}
                parentRef={
                  Object {
                    "current": <div
                      class="pf-c-dropdown pf-m-expanded"
                    >
                      <button
                        aria-expanded="true"
                        aria-haspopup="true"
                        aria-label="Actions"
                        class="pf-c-dropdown__toggle pf-m-plain"
                        id="pf-toggle-id-5"
                        type="button"
                      >
                        <svg
                          aria-hidden="true"
                          fill="currentColor"
                          height="1em"
                          role="img"
                          style="vertical-align: -0.125em;"
                          viewBox="0 0 192 512"
                          width="1em"
                        >
                          <path
                            d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                            transform=""
                          />
                        </svg>
                      </button>
                      <ul
                        aria-labelledby="pf-toggle-id-5"
                        class="pf-c-dropdown__menu"
                        role="menu"
                      >
                        <li
                          role="menuitem"
                        >
                          <button
                            class="pf-c-dropdown__menu-item"
                            tabindex="-1"
                            type="button"
                          >
                            Resume analysis for system
                          </button>
                        </li>
                        <li
                          role="menuitem"
                        >
                          <button
                            class="pf-c-dropdown__menu-item"
                            tabindex="-1"
                            type="button"
                          >
                            Resume analysis for system
                          </button>
                        </li>
                      </ul>
                    </div>,
                  }
                }
              >
                <Toggle
                  aria-label="Actions"
                  ariaHasPopup={true}
                  bubbleEvent={false}
                  className=""
                  id="pf-toggle-id-5"
                  isActive={false}
                  isDisabled={false}
                  isFocused={false}
                  isHovered={false}
                  isOpen={true}
                  isPlain={true}
                  isPrimary={false}
                  isSplitButton={false}
                  onEnter={[Function]}
                  onToggle={[Function]}
                  parentRef={
                    Object {
                      "current": <div
                        class="pf-c-dropdown pf-m-expanded"
                      >
                        <button
                          aria-expanded="true"
                          aria-haspopup="true"
                          aria-label="Actions"
                          class="pf-c-dropdown__toggle pf-m-plain"
                          id="pf-toggle-id-5"
                          type="button"
                        >
                          <svg
                            aria-hidden="true"
                            fill="currentColor"
                            height="1em"
                            role="img"
                            style="vertical-align: -0.125em;"
                            viewBox="0 0 192 512"
                            width="1em"
                          >
                            <path
                              d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                              transform=""
                            />
                          </svg>
                        </button>
                        <ul
                          aria-labelledby="pf-toggle-id-5"
                          class="pf-c-dropdown__menu"
                          role="menu"
                        >
                          <li
                            role="menuitem"
                          >
                            <button
                              class="pf-c-dropdown__menu-item"
                              tabindex="-1"
                              type="button"
                            >
                              Resume analysis for system
                            </button>
                          </li>
                          <li
                            role="menuitem"
                          >
                            <button
                              class="pf-c-dropdown__menu-item"
                              tabindex="-1"
                              type="button"
                            >
                              Resume analysis for system
                            </button>
                          </li>
                        </ul>
                      </div>,
                    }
                  }
                >
                  <button
                    aria-expanded={true}
                    aria-haspopup={true}
                    aria-label="Actions"
                    className="pf-c-dropdown__toggle pf-m-plain"
                    disabled={false}
                    id="pf-toggle-id-5"
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    type="button"
                  >
                    <EllipsisVIcon
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                      title={null}
                    >
                      <svg
                        aria-hidden={true}
                        aria-labelledby={null}
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style={
                          Object {
                            "verticalAlign": "-0.125em",
                          }
                        }
                        viewBox="0 0 192 512"
                        width="1em"
                      >
                        <path
                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                          transform=""
                        />
                      </svg>
                    </EllipsisVIcon>
                  </button>
                </Toggle>
              </KebabToggle>
              <DropdownMenu
                aria-labelledby="pf-toggle-id-5"
                autoFocus={false}
                className=""
                component="ul"
                isGrouped={false}
                isOpen={true}
                openedOnEnter={false}
                position="left"
              >
                <ul
                  aria-labelledby="pf-toggle-id-5"
                  autoFocus={false}
                  className="pf-c-dropdown__menu"
                  hidden={false}
                  role="menu"
                >
                  <DropdownItem
                    component="button"
                    index={0}
                    key=".$do_opt_out"
                    onClick={[Function]}
                  >
                    <InternalDropdownItem
                      className=""
                      component="button"
                      context={
                        Object {
                          "keyHandler": [Function],
                          "sendRef": [Function],
                        }
                      }
                      enterTriggersArrowDown={false}
                      index={0}
                      isDisabled={false}
                      isHovered={false}
                      onClick={[Function]}
                      role="menuitem"
                      tabIndex={-1}
                      tooltipProps={Object {}}
                      variant="item"
                    >
                      <li
                        className={null}
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        role="menuitem"
                      >
                        <button
                          className="pf-c-dropdown__menu-item"
                          disabled={false}
                          tabIndex={-1}
                          type="button"
                        >
                          <FormattedMessage
                            defaultMessage="Resume analysis for system"
                            id="kebab.resumeAnalysis"
                            values={Object {}}
                          >
                            Resume analysis for system
                          </FormattedMessage>
                        </button>
                      </li>
                    </InternalDropdownItem>
                  </DropdownItem>
                  <DropdownItem
                    component="button"
                    index={1}
                    key=".$do_opt_out"
                    onClick={[Function]}
                  >
                    <InternalDropdownItem
                      className=""
                      component="button"
                      context={
                        Object {
                          "keyHandler": [Function],
                          "sendRef": [Function],
                        }
                      }
                      enterTriggersArrowDown={false}
                      index={1}
                      isDisabled={false}
                      isHovered={false}
                      onClick={[Function]}
                      role="menuitem"
                      tabIndex={-1}
                      tooltipProps={Object {}}
                      variant="item"
                    >
                      <li
                        className={null}
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        role="menuitem"
                      >
                        <button
                          className="pf-c-dropdown__menu-item"
                          disabled={false}
                          tabIndex={-1}
                          type="button"
                        >
                          <FormattedMessage
                            defaultMessage="Resume analysis for system"
                            id="kebab.resumeAnalysis"
                            values={Object {}}
                          >
                            Resume analysis for system
                          </FormattedMessage>
                        </button>
                      </li>
                    </InternalDropdownItem>
                  </DropdownItem>
                </ul>
              </DropdownMenu>
            </div>
          </DropdownWithContext>
        </ComponentWithOuia>
      </Component>
    </Dropdown>
  </div>
</BaseKebab>
`;
