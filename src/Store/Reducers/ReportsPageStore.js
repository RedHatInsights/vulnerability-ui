import Immutable from 'seamless-immutable';
import * as ActionTypes from '../ActionTypes';
import { applyGlobalFilter } from './reducersHelper';

export const initialState = Immutable({
    parameters: {},
    operatingSystems: {
        isLoading: true,
        data: null
    }
});

export const ReportsPageStore = (state = initialState, action) => {
    let newState;

    switch (action.type) {
        case ActionTypes.SET_GLOBAL_FILTER:
            newState = state.setIn(['parameters'], {
                ...applyGlobalFilter(state.parameters, action.payload)
            });
            return newState;
        case ActionTypes.FETCH_OPERATING_SYSTEMS + '_FULFILLED':
            newState = state.setIn(['operatingSystems', 'data'], action.payload.results.map(({ value }) => value));
            newState = newState.setIn(['operatingSystems', 'isLoading'], false);
            return newState;
        default:
            return state;
    }
};

