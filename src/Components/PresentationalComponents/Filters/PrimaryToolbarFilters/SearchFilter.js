import { conditionalFilterType } from '@redhat-cloud-services/frontend-components';
import { intl } from '../../../../Utilities/IntlProvider';
import messages from '../../../../Messages';

import debounce from 'lodash/debounce';
import React from 'react';

const SearchFilter = (placeholder, search, apply, callback) => {
    const [searchValue, setSearchValue] = React.useState();
    const [handleSearch] = React.useState(() =>
        debounce(filter => apply({ filter, page: 1, callback }), 400)
    );

    React.useEffect(() => setSearchValue(search), [search]);

    return {
        type: conditionalFilterType.text,
        label: intl.formatMessage(messages.searchLabel),
        filterValues: {
            onChange: (event, value) => {
                setSearchValue(value);
                handleSearch(value);
            },
            placeholder,
            value: searchValue
        }
    };
};

export default SearchFilter;
