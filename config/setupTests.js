import { configure, mount, render, shallow } from 'enzyme';
import Adapter from '@wojtekmaj/enzyme-adapter-react-17';
import React from 'react';
import 'babel-polyfill';

configure({ adapter: new Adapter() });

global.shallow = shallow;
global.render = render;
global.mount = mount;
global.React = React;

jest.mock('@redhat-cloud-services/frontend-components/useChrome', () => {
    return {
        __esModule: true,
        default: () => ({ hideGlobalFilter: () => { } })
    };
});

window.insights = {
    chrome: {
        getUserPermissions: () => Promise.resolve(),
        auth: {
            getUser: () => "Testing Name"
        }
    },
    loadInventory: () => Promise.resolve({
        inventoryConnector: (args) => {
            const InventoryTable = () => <div>A mock passed!</div>;
            return ({ InventoryTable });
        },
        mergeWithEntities: () => { },
        mergeWithDetail: () => { }
    })
};

global.window.__scalprum__ = {
    scalprumOptions: {
        cacheTimeout: 999999
    },
    appsConfig: {
        inventory: {
            manifestLocation: 'https://console.stage.redhat.com/apps/inventory/fed-mods.json?ts=1643875037626',
            module: 'inventory#./RootApp',
            name: 'inventory'
        },
        remediations: {
            manifestLocation: 'https://console.stage.redhat.com/apps/remediations/fed-mods.json?ts=1643875037626',
            module: 'remediations#./RemediationButton',
            name: 'remediations'
        }
    },
    factories: {
        inventory: {
            expiration: new Date('01-01-3000'),
            modules: {
                './InventoryTable': {
                    __esModule: true,
                    default: () => <div><h1>Inventory mock</h1></div>
                }
            }
        },
        remediations: {
            expiration: new Date('01-01-3000'),
            modules: {
                './RemediationButton': {
                    __esModule: true,
                    default: () => <div><h1>Remediations mock</h1></div>
                }
            }
        }
    }
};

jest.useFakeTimers('modern').setSystemTime(new Date('2020-01-01').getTime());
