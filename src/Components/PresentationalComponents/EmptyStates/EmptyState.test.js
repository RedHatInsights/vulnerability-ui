import {
    EmptyStateNoCVEs,
    EmptyStateNoSystems,
    EmptyStateExcludedSystem
} from './EmptyStates'
import { render, screen } from '@testing-library/react';
import userEvent from '@testing-library/user-event';
import { IntlProvider } from '@redhat-cloud-services/frontend-components-translations';
import messages from '../../../Messages'

describe('Empty states', () => {
    it('should render EmptyStateNoCVEs', () => {
        const { asFragment } = render(<IntlProvider locale="en"><EmptyStateNoCVEs secondParagraph={messages.emptyStateThereShouldBeCVEs}/></IntlProvider>);
        expect(asFragment()).toMatchSnapshot();

        expect(screen.getByTestId('prod-sec-link')).toBeTruthy();
    })

    it('should render EmptyStateNoSystems', () => {
        const { asFragment } = render(<IntlProvider locale="en"><EmptyStateNoSystems /></IntlProvider>);
        expect(asFragment()).toMatchSnapshot();
    })

    it('should render EmptyStateExcludedSystem', () => {
        const mockAction = jest.fn();
        const { asFragment } = render(<IntlProvider locale="en"><EmptyStateExcludedSystem buttonAction={mockAction} /></IntlProvider>);
        expect(asFragment()).toMatchSnapshot();

        userEvent.click(screen.getByTestId('empty-state-button-action'));
        expect(mockAction).toHaveBeenCalled();
    })
})
