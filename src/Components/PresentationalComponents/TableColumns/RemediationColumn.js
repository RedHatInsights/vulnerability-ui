import React, { Fragment } from 'react';
import PropType from 'prop-types';
import { AnsibeTowerIcon } from '@patternfly/react-icons';import { Tooltip } from '@patternfly/react-core';
import { FormattedMessage } from 'react-intl';
import messages from '../../../Messages';
import { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';

const RemediationColumn = ({ fixable }) => {
    return (
        <Fragment>
            {fixable === true && <Fragment><AnsibeTowerIcon/> <FormattedMessage {...messages.playbook} /></Fragment>}
            {fixable === false && <FormattedMessage {...messages.manual} />}
            {

                fixable ?? (
                    <Fragment>
                        <FormattedMessage {...messages.notAvailable} />
                        <Tooltip exitDelay={2000} appendTo={document.querySelector('.vulnerability')} content={
                            <FormattedMessage
                                {...messages.fixableToolip}
                                values={
                                    {
                                        link: ''
                                    }
                                }
                            />
                        }>
                            <OutlinedQuestionCircleIcon
                                className="pf-u-ml-xs"
                                color="var(--pf-global--Color--200)"
                            />
                        </Tooltip>
                    </Fragment>
                )
            }
        </Fragment>
    );
};

RemediationColumn.propTypes = {
    fixable: PropType.bool
};

export default RemediationColumn;
