import * as APIHelper from '../../Helpers/APIHelper';
import ReducerRegistry from '../../Utilities/ReducerRegistry';
import * as ActionTypes from '../ActionTypes';
import { CVEReducer } from '../Reducers/CVEStore';
import { SystemsReducer } from '../Reducers/SystemsStore';
import { VulnerabilitiesStore } from '../Reducers/VulnerabilitiesStore';

ReducerRegistry.register({ CVEStore: CVEReducer });
ReducerRegistry.register({ VulnerabilitiesStore });
ReducerRegistry.register({ SystemsStore: SystemsReducer });

export const fetchAffectedSystemsByCVE = apiProps => ({
    type: ActionTypes.FETCH_AFFECTED_SYSTEMS_BY_CVE,
    payload: new Promise(resolve => {
        resolve(APIHelper.getAffectedSystemsByCVE(apiProps));
    }).then(result => result)
});

export const fetchSystems = () => ({
    type: ActionTypes.FETCH_SYSTEMS,
    payload: new Promise(resolve => {
        resolve(APIHelper.getSystems());
    }).then(result => result)
});

export const fetchCveDetails = synopsis => ({
    type: ActionTypes.FETCH_CVE_DETAILS,
    payload: new Promise(resolve => {
        resolve(APIHelper.getCveDetails(synopsis));
    }).then(result => result)
});

export const fetchCveListByAccount = apiProps => ({
    type: ActionTypes.FETCH_CVE_LIST,
    payload: new Promise(resolve => {
        resolve(APIHelper.getCveListByAccount(apiProps));
    }).then(result => result)
});

export const fetchCveListBySystem = apiProps => ({
    type: ActionTypes.FETCH_CVE_LIST,
    payload: new Promise(resolve => {
        resolve(APIHelper.getCveListBySystem(apiProps));
    }).then(result => result)
});

export const emptyCveList = () => ({
    type: ActionTypes.EMPTY_CVE_LIST,
    payload: new Promise(resolve => {
        resolve('');
    }).then(result => result)
});
