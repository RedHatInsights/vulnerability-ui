// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CveInfoBox Should render with rules 1`] = `
<CSAwRuleBox
  rules={
    Array [
      Object {
        "associated_cves": Array [
          "CVE-2019-11135",
        ],
        "change_risk": 3,
        "description": "CVE-2019-11135: \\"TAA\\" kernel side-channel",
        "generic": "An implementation issue similar to MDS was found in many x86 microprocessors.

An unprivileged attacker can use this flaw to bypass memory restrictions in order to read cached data from the processor and sibling logical processors. This allows malicious users to access information from the local system, and allows malicious virtual machines or users thereof to access information from other guests or the host system.
",
        "kbase_node_id": 4572391,
        "playbook_count": 1,
        "reboot_required": false,
        "rule_id": "CVE_2019_11135_cpu_taa|CVE_2019_11135_CPU_TAA_KERNEL",
        "summary": "An issue was found in the manner in which certain x86 microprocessors manage thread memory access synchronization. It has been assigned [CVE-2019-11135](https://access.redhat.com/security/cve/CVE-2019-11135). Complete mitigations for this issue require microcode and kernel updates, and disabling hyperthreading where applicable.

An unprivileged user can use this flaw to gain read access to privileged memory that would otherwise be inacessible, including from other virtual machines on the same host system.
",
      },
    ]
  }
  synopsis="CVE-2019-11135"
>
  <Card>
    <article
      className="pf-c-card"
    >
      <CardBody>
        <div
          className="pf-c-card__body"
        >
          <Grid
            gutter="md"
          >
            <div
              className="pf-l-grid pf-m-gutter"
            >
              <GridItem
                span={12}
              >
                <div
                  className="pf-l-grid__item pf-m-12-col"
                >
                  <TextContent
                    className="icon-with-label"
                  >
                    <div
                      className="pf-c-content icon-with-label"
                    >
                      <Text
                        component="h3"
                      >
                        <h3
                          className=""
                          data-pf-content={true}
                        >
                           
                          <CSAwIcon>
                            <img
                              alt="Customer security awareness icon"
                              className="csaw-icon"
                              src="test-file-stub"
                            />
                          </CSAwIcon>
                           
                          CVE-2019-11135: "TAA" kernel side-channel
                        </h3>
                      </Text>
                    </div>
                  </TextContent>
                </div>
              </GridItem>
              <GridItem
                span={8}
              >
                <div
                  className="pf-l-grid__item pf-m-8-col"
                >
                  <Stack
                    gutter="md"
                  >
                    <div
                      className="pf-l-stack pf-m-gutter"
                    >
                      <StackItem>
                        <div
                          className="pf-l-stack__item"
                        >
                          <TextContent>
                            <div
                              className="pf-c-content"
                            >
                              <TruncatedText
                                characterLimit={250}
                                component="p"
                                content="An issue was found in the manner in which certain x86 microprocessors manage thread memory access synchronization. It has been assigned [CVE-2019-11135](https://access.redhat.com/security/cve/CVE-2019-11135). Complete mitigations for this issue require microcode and kernel updates, and disabling hyperthreading where applicable.

An unprivileged user can use this flaw to gain read access to privileged memory that would otherwise be inacessible, including from other virtual machines on the same host system.
"
                                showLessLabel={
                                  <FormattedMessage
                                    defaultMessage="Read less"
                                    description="Read less label for general usage"
                                    id="readLess"
                                    values={Object {}}
                                  />
                                }
                                showMoreLabel={
                                  <FormattedMessage
                                    defaultMessage="Read More"
                                    description="Read more generic label"
                                    id="readMore"
                                    values={Object {}}
                                  />
                                }
                              >
                                <TextContent>
                                  <div
                                    className="pf-c-content"
                                  >
                                    <Text
                                      component="p"
                                    >
                                      <p
                                        className=""
                                        data-pf-content={true}
                                      >
                                        An issue was found in the manner in which certain x86 microprocessors manage thread memory access synchronization. It has been assigned [CVE-2019-11135](https://access.redhat.com/security/cve/CVE-2019-11135). Complete mitigations for this issue requâ€¦
                                      </p>
                                    </Text>
                                    <a
                                      onClick={[Function]}
                                      rel="noopener noreferrer"
                                    >
                                      <FormattedMessage
                                        defaultMessage="Read More"
                                        description="Read more generic label"
                                        id="readMore"
                                        values={Object {}}
                                      >
                                        Read More
                                      </FormattedMessage>
                                    </a>
                                  </div>
                                </TextContent>
                              </TruncatedText>
                            </div>
                          </TextContent>
                        </div>
                      </StackItem>
                      <StackItem>
                        <div
                          className="pf-l-stack__item"
                        >
                          <TextContent>
                            <div
                              className="pf-c-content"
                            >
                              <Text
                                component="h4"
                              >
                                <h4
                                  className=""
                                  data-pf-content={true}
                                >
                                   
                                  <FormattedMessage
                                    defaultMessage="Associated CVEs:"
                                    description="Associated CVEs general label"
                                    id="associatedCves"
                                    values={Object {}}
                                  >
                                    Associated CVEs:
                                  </FormattedMessage>
                                </h4>
                              </Text>
                              <Text
                                component="p"
                              >
                                <p
                                  className=""
                                  data-pf-content={true}
                                >
                                  CVE-2019-11135
                                   (
                                  <FormattedMessage
                                    defaultMessage="current"
                                    description="Current label for general usage"
                                    id="current"
                                    values={Object {}}
                                  >
                                    current
                                  </FormattedMessage>
                                  )
                                </p>
                              </Text>
                            </div>
                          </TextContent>
                        </div>
                      </StackItem>
                      <StackItem>
                        <div
                          className="pf-l-stack__item"
                        >
                          <TextContent>
                            <div
                              className="pf-c-content"
                            >
                              <Text
                                className="icon-with-label"
                                component="a"
                              >
                                <a
                                  className="icon-with-label"
                                  data-pf-content={true}
                                >
                                  <a
                                    href="https://access.redhat.com/node/4572391"
                                    rel="noopener noreferrer"
                                    target="_blank"
                                  >
                                    <FormattedMessage
                                      defaultMessage="Knowledgebase article"
                                      description="Knowledgebase article"
                                      id="knowledgebasearticle"
                                      values={Object {}}
                                    >
                                      Knowledgebase article
                                    </FormattedMessage>
                                    <ExternalLinkAltIcon
                                      className="l-sm-spacer"
                                      color="currentColor"
                                      noVerticalAlign={false}
                                      size="sm"
                                      title={null}
                                    >
                                      <svg
                                        aria-hidden={true}
                                        aria-labelledby={null}
                                        className="l-sm-spacer"
                                        fill="currentColor"
                                        height="1em"
                                        role="img"
                                        style={
                                          Object {
                                            "verticalAlign": "-0.125em",
                                          }
                                        }
                                        viewBox="0 0 512 512"
                                        width="1em"
                                      >
                                        <path
                                          d="M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z"
                                          transform=""
                                        />
                                      </svg>
                                    </ExternalLinkAltIcon>
                                  </a>
                                </a>
                              </Text>
                            </div>
                          </TextContent>
                        </div>
                      </StackItem>
                    </div>
                  </Stack>
                </div>
              </GridItem>
              <GridItem
                span={4}
              >
                <div
                  className="pf-l-grid__item pf-m-4-col"
                >
                  <Stack
                    gutter="md"
                  >
                    <div
                      className="pf-l-stack pf-m-gutter"
                    >
                      <StackItem>
                        <div
                          className="pf-l-stack__item"
                        >
                          <TextContent>
                            <div
                              className="pf-c-content"
                            >
                              <Text
                                component="h4"
                              >
                                <h4
                                  className=""
                                  data-pf-content={true}
                                >
                                  <FormattedMessage
                                    defaultMessage="Remediation"
                                    description="Remediation label for general usage "
                                    id="remediation"
                                    values={Object {}}
                                  >
                                    Remediation
                                  </FormattedMessage>
                                </h4>
                              </Text>
                              <Split
                                gutter="md"
                              >
                                <div
                                  className="pf-l-split pf-m-gutter"
                                >
                                  <SplitItem>
                                    <div
                                      className="pf-l-split__item"
                                    >
                                      <Label
                                        className="label"
                                      >
                                        <span
                                          className="vuln-label label"
                                        >
                                          <FormattedMessage
                                            defaultMessage="Ansible remediation"
                                            description="label for remediating with Ansible"
                                            id="ansibleRemediation"
                                            values={Object {}}
                                          >
                                            Ansible remediation
                                          </FormattedMessage>
                                        </span>
                                      </Label>
                                    </div>
                                  </SplitItem>
                                  <SplitItem
                                    className="icon-with-label"
                                    isFilled={true}
                                  >
                                    <div
                                      className="pf-l-split__item pf-m-fill icon-with-label"
                                    >
                                      <CheckCircleIcon
                                        className="ansible-success"
                                        color="currentColor"
                                        noVerticalAlign={false}
                                        size="sm"
                                        title={null}
                                      >
                                        <svg
                                          aria-hidden={true}
                                          aria-labelledby={null}
                                          className="ansible-success"
                                          fill="currentColor"
                                          height="1em"
                                          role="img"
                                          style={
                                            Object {
                                              "verticalAlign": "-0.125em",
                                            }
                                          }
                                          viewBox="0 0 512 512"
                                          width="1em"
                                        >
                                          <path
                                            d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                                            transform=""
                                          />
                                        </svg>
                                      </CheckCircleIcon>
                                      <FormattedMessage
                                        defaultMessage="Yes"
                                        description="Yes general label"
                                        id="yes"
                                        values={Object {}}
                                      >
                                        Yes
                                      </FormattedMessage>
                                    </div>
                                  </SplitItem>
                                </div>
                              </Split>
                              <Split
                                gutter="md"
                              >
                                <div
                                  className="pf-l-split pf-m-gutter"
                                >
                                  <SplitItem>
                                    <div
                                      className="pf-l-split__item"
                                    >
                                      <Label
                                        className="label"
                                      >
                                        <span
                                          className="vuln-label label"
                                        >
                                          <FormattedMessage
                                            defaultMessage="Risk of change"
                                            description="Risk of change label for CVE rules"
                                            id="riskOfChange"
                                            values={Object {}}
                                          >
                                            Risk of change
                                          </FormattedMessage>
                                        </span>
                                      </Label>
                                    </div>
                                  </SplitItem>
                                  <SplitItem
                                    className="icon-with-label"
                                    isFilled={true}
                                  >
                                    <div
                                      className="pf-l-split__item pf-m-fill icon-with-label"
                                    >
                                      <ExclamationTriangleIcon
                                        color="var(--pf-global--warning-color--100)"
                                        noVerticalAlign={false}
                                        size="sm"
                                        title={null}
                                      >
                                        <svg
                                          aria-hidden={true}
                                          aria-labelledby={null}
                                          fill="var(--pf-global--warning-color--100)"
                                          height="1em"
                                          role="img"
                                          style={
                                            Object {
                                              "verticalAlign": "-0.125em",
                                            }
                                          }
                                          viewBox="0 0 576 512"
                                          width="1em"
                                        >
                                          <path
                                            d="M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                            transform=""
                                          />
                                        </svg>
                                      </ExclamationTriangleIcon>
                                      High
                                      <Tooltip
                                        appendTo={[Function]}
                                        aria="describedby"
                                        boundary="window"
                                        className=""
                                        content="These will likely require an outage window."
                                        distance={15}
                                        enableFlip={true}
                                        entryDelay={500}
                                        exitDelay={500}
                                        flipBehavior={
                                          Array [
                                            "top",
                                            "right",
                                            "bottom",
                                            "left",
                                            "top",
                                            "right",
                                            "bottom",
                                          ]
                                        }
                                        id=""
                                        isAppLauncher={false}
                                        isContentLeftAligned={false}
                                        isVisible={false}
                                        maxWidth="18.75rem"
                                        position="top"
                                        tippyProps={Object {}}
                                        trigger="mouseenter focus"
                                        zIndex={9999}
                                      >
                                        <PopoverBase
                                          appendTo={[Function]}
                                          aria="describedby"
                                          arrow={true}
                                          boundary="window"
                                          content={
                                            <div
                                              className=""
                                              id=""
                                              role="tooltip"
                                            >
                                              <TooltipContent
                                                isLeftAligned={false}
                                              >
                                                These will likely require an outage window.
                                              </TooltipContent>
                                            </div>
                                          }
                                          delay={
                                            Array [
                                              500,
                                              500,
                                            ]
                                          }
                                          distance={15}
                                          flip={true}
                                          flipBehavior={
                                            Array [
                                              "top",
                                              "right",
                                              "bottom",
                                              "left",
                                              "top",
                                              "right",
                                              "bottom",
                                            ]
                                          }
                                          isVisible={false}
                                          lazy={true}
                                          maxWidth="18.75rem"
                                          onCreate={[Function]}
                                          placement="top"
                                          popperOptions={
                                            Object {
                                              "modifiers": Object {
                                                "hide": Object {
                                                  "enabled": true,
                                                },
                                                "preventOverflow": Object {
                                                  "enabled": true,
                                                },
                                              },
                                            }
                                          }
                                          theme="pf-tooltip"
                                          trigger="mouseenter focus"
                                          zIndex={9999}
                                        >
                                          <OutlinedQuestionCircleIcon
                                            className="l-sm-spacer"
                                            color="var(--pf-global--secondary-color--100)"
                                            noVerticalAlign={false}
                                            size="sm"
                                            title={null}
                                          >
                                            <svg
                                              aria-hidden={true}
                                              aria-labelledby={null}
                                              className="l-sm-spacer"
                                              fill="var(--pf-global--secondary-color--100)"
                                              height="1em"
                                              role="img"
                                              style={
                                                Object {
                                                  "verticalAlign": "-0.125em",
                                                }
                                              }
                                              viewBox="0 0 512 512"
                                              width="1em"
                                            >
                                              <path
                                                d="M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 448c-110.532 0-200-89.431-200-200 0-110.495 89.472-200 200-200 110.491 0 200 89.471 200 200 0 110.53-89.431 200-200 200zm107.244-255.2c0 67.052-72.421 68.084-72.421 92.863V300c0 6.627-5.373 12-12 12h-45.647c-6.627 0-12-5.373-12-12v-8.659c0-35.745 27.1-50.034 47.579-61.516 17.561-9.845 28.324-16.541 28.324-29.579 0-17.246-21.999-28.693-39.784-28.693-23.189 0-33.894 10.977-48.942 29.969-4.057 5.12-11.46 6.071-16.666 2.124l-27.824-21.098c-5.107-3.872-6.251-11.066-2.644-16.363C184.846 131.491 214.94 112 261.794 112c49.071 0 101.45 38.304 101.45 88.8zM298 368c0 23.159-18.841 42-42 42s-42-18.841-42-42 18.841-42 42-42 42 18.841 42 42z"
                                                transform=""
                                              />
                                            </svg>
                                          </OutlinedQuestionCircleIcon>
                                          <Portal
                                            containerInfo={
                                              <div>
                                                <div
                                                  class=""
                                                  id=""
                                                  role="tooltip"
                                                >
                                                  <div
                                                    class="pf-c-tooltip__content"
                                                  >
                                                    These will likely require an outage window.
                                                  </div>
                                                </div>
                                              </div>
                                            }
                                          >
                                            <div
                                              className=""
                                              id=""
                                              role="tooltip"
                                            >
                                              <TooltipContent
                                                isLeftAligned={false}
                                              >
                                                <div
                                                  className="pf-c-tooltip__content"
                                                >
                                                  These will likely require an outage window.
                                                </div>
                                              </TooltipContent>
                                            </div>
                                          </Portal>
                                        </PopoverBase>
                                      </Tooltip>
                                      <br />
                                    </div>
                                  </SplitItem>
                                </div>
                              </Split>
                            </div>
                          </TextContent>
                        </div>
                      </StackItem>
                    </div>
                  </Stack>
                </div>
              </GridItem>
            </div>
          </Grid>
        </div>
      </CardBody>
    </article>
  </Card>
</CSAwRuleBox>
`;

exports[`CveInfoBox Should render without rules  1`] = `
<CSAwRuleBox
  rules={Array []}
  synopsis="CVE-2019-11135"
/>
`;
