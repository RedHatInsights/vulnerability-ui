import { Popover, Stack, StackItem, Text, TextContent, TextVariants } from '@patternfly/react-core';
import { ExternalLinkAltIcon } from '@patternfly/react-icons';
import { parseCvssScore } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';
import propTypes from 'prop-types';
import React from 'react';
import { getImpactDetails } from '../../../Helpers/MiscHelper';
import CVEInfoBox from '../CVEInfoBox/CVEInfoBox';
import CvssVector from '../CvssVector/CvssVector';

const learnMorePopover = cveDetails => {
    return (
        <Popover
            position="bottom"
            enableFlip
            headerContent={<div>{cveDetails.title + ' impact'}</div>}
            bodyContent={
                <TextContent>
                    <Text component={TextVariants.p}>{cveDetails.text}</Text>
                </TextContent>
            }
            footerContent={
                <a href="https://access.redhat.com/security/updates/classification/" target="_blank" rel="noopener noreferrer">
                    Learn more about security ratings <ExternalLinkAltIcon />
                </a>
            }
        >
            <a>Learn more</a>
        </Popover>
    );
};

const CVEPageDetailsSeverity = props => {
    const cveDetails = getImpactDetails(props.impact);
    const cvssVersion = (props.cvss3_score && 'CVSS 3.0') || (props.cvss2_score && 'CVSS 2.0') || 'CVSS 3.0';
    return (
        <React.Fragment>
            <Stack gutter="sm">
                <StackItem>
                    <CVEInfoBox
                        titleColor={cveDetails.color}
                        titleContent={cveDetails.titleContent}
                        descriptionTitle={cveDetails.title + ' impact'}
                        descriptionContent={learnMorePopover(cveDetails)}
                    />
                </StackItem>
                <StackItem>
                    <CVEInfoBox
                        titleContent={
                            <TextContent>
                                <Text component={TextVariants.h3}>{parseCvssScore(props.cvss2_score, props.cvss3_score)}</Text>
                            </TextContent>
                        }
                        descriptionTitle={cvssVersion + ' base score'}
                    />
                </StackItem>

                <StackItem>
                    <CvssVector cvss2_metrics={props.cvss2_metrics} cvss3_metrics={props.cvss3_metrics} />
                </StackItem>
            </Stack>
        </React.Fragment>
    );
};

CVEPageDetailsSeverity.propTypes = {
    impact: propTypes.string,
    cvss2_score: propTypes.any,
    cvss3_score: propTypes.any,
    cvss2_metrics: propTypes.any,
    cvss3_metrics: propTypes.any
};

CVEPageDetailsSeverity.defaultProps = {
    impact: 'Unknown',
    cvss2_score: undefined,
    cvss3_score: undefined,
    cvss2_metrics: undefined,
    cvss3_metrics: undefined
};

export default CVEPageDetailsSeverity;
