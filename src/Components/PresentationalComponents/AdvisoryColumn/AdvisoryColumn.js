import React, { Fragment } from 'react';
import PropType from 'prop-types';
import { Tooltip } from '@patternfly/react-core';
import { FormattedMessage } from 'react-intl';
import { ADVISORY_PATH } from '../../../Helpers/constants';
import messages from '../../../Messages';
import { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';
import { createRHDBLink } from '../../../Helpers/CVEHelper';

const AdvisoryColumn = ({ cve, advisoriesList }) => {
    return (
        advisoriesList?.length > 0
            ? (
                advisoriesList.map((advisory, _i) =>
                    <a
                        key={_i}
                        href={`${ADVISORY_PATH}/${advisory}`}
                        target="_blank"
                        rel="noopener noreferrer"
                    >
                        {advisory}
                    </a>
                ).reduce((prev, curr) => [prev, ', ', curr])
            ) : (
                <Fragment>
                    <FormattedMessage {...messages.notAvailable} />
                    <Tooltip exitDelay={2000} appendTo={document.querySelector('.vulnerability')} content={
                        <FormattedMessage
                            {...messages.advisoryTooltip}
                            values={
                                {
                                    link: createRHDBLink(
                                        cve,
                                        messages.rhCVEdb,
                                        { className: 'toolip-link--embeded' }
                                    )
                                }
                            }
                        />
                    }>
                        <OutlinedQuestionCircleIcon
                            className="pf-u-ml-xs"
                            color="var(--pf-global--Color--200)"
                        />
                    </Tooltip>
                </Fragment>
            )
    );
};

AdvisoryColumn.propTypes = {
    advisoriesList: PropType.array,
    cve: PropType.string
};

export default AdvisoryColumn;
