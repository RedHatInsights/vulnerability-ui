import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';
import { intl } from '../../../../Utilities/IntlProvider';
import messages from '../../../../Messages';
import { EXCLUDED_FILTER_OPTIONS } from '../../../../Helpers/constants';

const excludedFilter = (apply, currentFilter = {}) => {
    let { excluded: currentValue } = currentFilter;

    const filterByExcluded = (values) => {
        apply({
            excluded: values.length > 0 ? values?.join(',') : undefined,
            page: 1
        });
    };

    return {
        label: intl.formatMessage(messages.filterSystemsIncludedInAnalysis),
        type: conditionalFilterType.checkbox,
        urlParam: 'excluded',
        filterValues: {
            onChange: (event, value) => {
                filterByExcluded(value);
            },
            items: EXCLUDED_FILTER_OPTIONS.map(({ label, value }) => ({ label, value })),
            value: currentValue?.length > 0 ? currentValue?.split(',') : undefined
        }
    };
};

export default excludedFilter;
