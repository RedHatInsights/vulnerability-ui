// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CVEPageDetailsDescription component should render without props 1`] = `
<injectIntl(CVEPageDetailsDescription)
  cveAttributes={
    Object {
      "business_risk": "Not defined",
      "business_risk_id": 0,
      "business_risk_justification": null,
      "cvss3_metrics": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "cvss3_score": "5.900",
      "description": "It was found that ghostscript could leak sensitive operators on the operand stack when a pseudo-operator pushes a subroutine. A specially crafted PostScript file could use this flaw to escape the -dSAFER protection in order to, for example, have access to the file system and execute commands.",
      "impact": "Important",
      "public_date": "12 May 2020",
      "status": "Resolved via mitigation",
      "status_id": 6,
      "synopsis": "CVE-2020-10711",
      "systems_status_detail": Object {
        "0": 2,
      },
    }
  }
>
  <CVEPageDetailsDescription
    cveAttributes={
      Object {
        "business_risk": "Not defined",
        "business_risk_id": 0,
        "business_risk_justification": null,
        "cvss3_metrics": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
        "cvss3_score": "5.900",
        "description": "It was found that ghostscript could leak sensitive operators on the operand stack when a pseudo-operator pushes a subroutine. A specially crafted PostScript file could use this flaw to escape the -dSAFER protection in order to, for example, have access to the file system and execute commands.",
        "impact": "Important",
        "public_date": "12 May 2020",
        "status": "Resolved via mitigation",
        "status_id": 6,
        "synopsis": "CVE-2020-10711",
        "systems_status_detail": Object {
          "0": 2,
        },
      }
    }
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatDateToParts": [Function],
        "formatDisplayName": [Function],
        "formatList": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatNumberToParts": [Function],
        "formatPlural": [Function],
        "formatRelativeTime": [Function],
        "formatTime": [Function],
        "formatTimeToParts": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getDisplayNames": [Function],
          "getListFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralRules": [Function],
          "getRelativeTimeFormat": [Function],
        },
        "locale": "en",
        "messages": Object {
          "default.cancel": "Cancel",
          "default.delete": "Delete",
          "default.remove": "Remove",
          "default.save": "Save",
        },
        "onError": [Function],
        "textComponent": Symbol(react.fragment),
        "timeZone": undefined,
        "wrapRichTextChunksInFragment": undefined,
      }
    }
  >
    <Component
      hasGutter={true}
    >
      <div
        className="pf-l-stack pf-m-gutter"
      >
        <Component>
          <div
            className="pf-l-stack__item"
          />
        </Component>
        <Component>
          <div
            className="pf-l-stack__item"
          >
            <Component
              hasGutter={true}
            >
              <div
                className="pf-l-split pf-m-gutter"
              >
                <Component>
                  <div
                    className="pf-l-split__item"
                  >
                    <SnippetWithHeaderAndPopover
                      content={
                        <Unknown>
                          <Unknown>
                            <Unknown>
                              <StyledText
                                alignSelf={null}
                                background={null}
                                backgroundImage={null}
                                backgroundPosition={null}
                                backgroundRepeat={null}
                                backgroundSize={null}
                                bg={null}
                                border={null}
                                borderBottom={null}
                                borderColor={null}
                                borderLeft={null}
                                borderRadius={null}
                                borderRight={null}
                                borderTop={null}
                                bottom={null}
                                boxShadow={null}
                                className=""
                                color={null}
                                component="div"
                                display={null}
                                flex={null}
                                flexBasis={null}
                                fontFamily={null}
                                fontSize={1}
                                fontWeight="bold"
                                height={null}
                                left={null}
                                letterSpacing={null}
                                lineHeight="sm"
                                m={null}
                                maxHeight={null}
                                maxWidth={null}
                                mb={null}
                                minHeight={null}
                                minWidth={null}
                                ml={null}
                                mr={null}
                                mt={null}
                                mx={null}
                                my={null}
                                opacity={null}
                                order={null}
                                overflow={null}
                                p={null}
                                pb={null}
                                pl={null}
                                position={null}
                                pr={null}
                                pt={null}
                                px={null}
                                py={null}
                                ratio={null}
                                right={null}
                                textAlign={null}
                                top={null}
                                verticalAlign={null}
                                width={null}
                                zIndex={null}
                              >
                                Justification note
                              </StyledText>
                            </Unknown>
                            <Unknown>
                              --
                            </Unknown>
                          </Unknown>
                        </Unknown>
                      }
                      title="Business risk"
                      value="Not defined"
                    >
                      <Popover
                        appendTo={[Function]}
                        aria-label="Business risk popover"
                        bodyContent={
                          <Unknown>
                            <Unknown>
                              <Unknown>
                                <StyledText
                                  alignSelf={null}
                                  background={null}
                                  backgroundImage={null}
                                  backgroundPosition={null}
                                  backgroundRepeat={null}
                                  backgroundSize={null}
                                  bg={null}
                                  border={null}
                                  borderBottom={null}
                                  borderColor={null}
                                  borderLeft={null}
                                  borderRadius={null}
                                  borderRight={null}
                                  borderTop={null}
                                  bottom={null}
                                  boxShadow={null}
                                  className=""
                                  color={null}
                                  component="div"
                                  display={null}
                                  flex={null}
                                  flexBasis={null}
                                  fontFamily={null}
                                  fontSize={1}
                                  fontWeight="bold"
                                  height={null}
                                  left={null}
                                  letterSpacing={null}
                                  lineHeight="sm"
                                  m={null}
                                  maxHeight={null}
                                  maxWidth={null}
                                  mb={null}
                                  minHeight={null}
                                  minWidth={null}
                                  ml={null}
                                  mr={null}
                                  mt={null}
                                  mx={null}
                                  my={null}
                                  opacity={null}
                                  order={null}
                                  overflow={null}
                                  p={null}
                                  pb={null}
                                  pl={null}
                                  position={null}
                                  pr={null}
                                  pt={null}
                                  px={null}
                                  py={null}
                                  ratio={null}
                                  right={null}
                                  textAlign={null}
                                  top={null}
                                  verticalAlign={null}
                                  width={null}
                                  zIndex={null}
                                >
                                  Justification note
                                </StyledText>
                              </Unknown>
                              <Unknown>
                                --
                              </Unknown>
                            </Unknown>
                          </Unknown>
                        }
                        boundary="window"
                        className=""
                        closeBtnAriaLabel="Close"
                        distance={25}
                        enableFlip={true}
                        flipBehavior={
                          Array [
                            "top",
                            "right",
                            "bottom",
                            "left",
                            "top",
                            "right",
                            "bottom",
                          ]
                        }
                        footerContent={null}
                        headerContent=""
                        hideOnOutsideClick={true}
                        isVisible={null}
                        maxWidth="calc(1rem + 1rem + 18.75rem)"
                        onHidden={[Function]}
                        onHide={[Function]}
                        onMount={[Function]}
                        onShow={[Function]}
                        onShown={[Function]}
                        position="right"
                        shouldClose={[Function]}
                        tippyProps={Object {}}
                        zIndex={9999}
                      >
                        <PopoverBase
                          appendTo={[Function]}
                          arrow={true}
                          boundary="window"
                          content={<React.Fragment />}
                          distance={25}
                          flip={true}
                          flipBehavior={
                            Array [
                              "top",
                              "right",
                              "bottom",
                              "left",
                              "top",
                              "right",
                              "bottom",
                            ]
                          }
                          hideOnClick={true}
                          interactive={true}
                          interactiveBorder={0}
                          isVisible={null}
                          lazy={true}
                          maxWidth="calc(1rem + 1rem + 18.75rem)"
                          onCreate={[Function]}
                          onHidden={[Function]}
                          onHide={[Function]}
                          onMount={[Function]}
                          onShow={[Function]}
                          onShown={[Function]}
                          placement="right"
                          popperOptions={
                            Object {
                              "modifiers": Object {
                                "hide": Object {
                                  "enabled": true,
                                },
                                "preventOverflow": Object {
                                  "enabled": true,
                                },
                              },
                            }
                          }
                          theme="pf-popover"
                          trigger="click"
                          zIndex={9999}
                        >
                          <Component
                            style={
                              Object {
                                "cursor": "pointer",
                                "display": "inline-block",
                              }
                            }
                          >
                            <div
                              className="pf-l-stack"
                              style={
                                Object {
                                  "cursor": "pointer",
                                  "display": "inline-block",
                                }
                              }
                            >
                              <Component>
                                <div
                                  className="pf-l-stack__item"
                                >
                                  <Label>
                                    <span
                                      className="vuln-label undefined"
                                    >
                                      Business risk
                                    </span>
                                  </Label>
                                </div>
                              </Component>
                              <Component>
                                <div
                                  className="pf-l-stack__item"
                                >
                                  <a>
                                    Not defined
                                  </a>
                                </div>
                              </Component>
                            </div>
                          </Component>
                          <Portal
                            containerInfo={<div />}
                          />
                        </PopoverBase>
                      </Popover>
                    </SnippetWithHeaderAndPopover>
                  </div>
                </Component>
                <Component>
                  <div
                    className="pf-l-split__item"
                  >
                    <SnippetWithHeaderAndPopover
                      content={
                        <Unknown>
                          <Unknown>
                            <StyledText
                              alignSelf={null}
                              background={null}
                              backgroundImage={null}
                              backgroundPosition={null}
                              backgroundRepeat={null}
                              backgroundSize={null}
                              bg={null}
                              border={null}
                              borderBottom={null}
                              borderColor={null}
                              borderLeft={null}
                              borderRadius={null}
                              borderRight={null}
                              borderTop={null}
                              bottom={null}
                              boxShadow={null}
                              className=""
                              color={null}
                              component="div"
                              display={null}
                              flex={null}
                              flexBasis={null}
                              fontFamily={null}
                              fontSize={1}
                              fontWeight="bold"
                              height={null}
                              left={null}
                              letterSpacing={null}
                              lineHeight="sm"
                              m={null}
                              maxHeight={null}
                              maxWidth={null}
                              mb={null}
                              minHeight={null}
                              minWidth={null}
                              ml={null}
                              mr={null}
                              mt={null}
                              mx={null}
                              my={null}
                              opacity={null}
                              order={null}
                              overflow={null}
                              p={null}
                              pb={null}
                              pl={null}
                              position={null}
                              pr={null}
                              pt={null}
                              px={null}
                              py={null}
                              ratio={null}
                              right={null}
                              textAlign={null}
                              top={null}
                              verticalAlign={null}
                              width={null}
                              zIndex={null}
                            >
                              CVE status
                            </StyledText>
                            Resolved via mitigation
                            <StyledText
                              alignSelf={null}
                              background={null}
                              backgroundImage={null}
                              backgroundPosition={null}
                              backgroundRepeat={null}
                              backgroundSize={null}
                              bg={null}
                              border={null}
                              borderBottom={null}
                              borderColor={null}
                              borderLeft={null}
                              borderRadius={null}
                              borderRight={null}
                              borderTop={null}
                              bottom={null}
                              boxShadow={null}
                              className=""
                              color={null}
                              component="div"
                              display={null}
                              flex={null}
                              flexBasis={null}
                              fontFamily={null}
                              fontSize={1}
                              fontWeight="bold"
                              height={null}
                              left={null}
                              letterSpacing={null}
                              lineHeight="sm"
                              m={null}
                              maxHeight={null}
                              maxWidth={null}
                              mb={null}
                              minHeight={null}
                              minWidth={null}
                              ml={null}
                              mr={null}
                              mt={null}
                              mx={null}
                              my={null}
                              opacity={null}
                              order={null}
                              overflow={null}
                              p={null}
                              pb={null}
                              pl={null}
                              position={null}
                              pr={null}
                              pt={null}
                              px={null}
                              py={null}
                              ratio={null}
                              right={null}
                              style={
                                Object {
                                  "marginTop": "var(--pf-global--spacer--sm)",
                                }
                              }
                              textAlign={null}
                              top={null}
                              verticalAlign={null}
                              width={null}
                              zIndex={null}
                            >
                              Justification note
                            </StyledText>
                            --
                          </Unknown>
                        </Unknown>
                      }
                      title="Status"
                      value={
                        <span>
                           
                          Resolved via mitigation
                        </span>
                      }
                    >
                      <Popover
                        appendTo={[Function]}
                        aria-label="Business risk popover"
                        bodyContent={
                          <Unknown>
                            <Unknown>
                              <StyledText
                                alignSelf={null}
                                background={null}
                                backgroundImage={null}
                                backgroundPosition={null}
                                backgroundRepeat={null}
                                backgroundSize={null}
                                bg={null}
                                border={null}
                                borderBottom={null}
                                borderColor={null}
                                borderLeft={null}
                                borderRadius={null}
                                borderRight={null}
                                borderTop={null}
                                bottom={null}
                                boxShadow={null}
                                className=""
                                color={null}
                                component="div"
                                display={null}
                                flex={null}
                                flexBasis={null}
                                fontFamily={null}
                                fontSize={1}
                                fontWeight="bold"
                                height={null}
                                left={null}
                                letterSpacing={null}
                                lineHeight="sm"
                                m={null}
                                maxHeight={null}
                                maxWidth={null}
                                mb={null}
                                minHeight={null}
                                minWidth={null}
                                ml={null}
                                mr={null}
                                mt={null}
                                mx={null}
                                my={null}
                                opacity={null}
                                order={null}
                                overflow={null}
                                p={null}
                                pb={null}
                                pl={null}
                                position={null}
                                pr={null}
                                pt={null}
                                px={null}
                                py={null}
                                ratio={null}
                                right={null}
                                textAlign={null}
                                top={null}
                                verticalAlign={null}
                                width={null}
                                zIndex={null}
                              >
                                CVE status
                              </StyledText>
                              Resolved via mitigation
                              <StyledText
                                alignSelf={null}
                                background={null}
                                backgroundImage={null}
                                backgroundPosition={null}
                                backgroundRepeat={null}
                                backgroundSize={null}
                                bg={null}
                                border={null}
                                borderBottom={null}
                                borderColor={null}
                                borderLeft={null}
                                borderRadius={null}
                                borderRight={null}
                                borderTop={null}
                                bottom={null}
                                boxShadow={null}
                                className=""
                                color={null}
                                component="div"
                                display={null}
                                flex={null}
                                flexBasis={null}
                                fontFamily={null}
                                fontSize={1}
                                fontWeight="bold"
                                height={null}
                                left={null}
                                letterSpacing={null}
                                lineHeight="sm"
                                m={null}
                                maxHeight={null}
                                maxWidth={null}
                                mb={null}
                                minHeight={null}
                                minWidth={null}
                                ml={null}
                                mr={null}
                                mt={null}
                                mx={null}
                                my={null}
                                opacity={null}
                                order={null}
                                overflow={null}
                                p={null}
                                pb={null}
                                pl={null}
                                position={null}
                                pr={null}
                                pt={null}
                                px={null}
                                py={null}
                                ratio={null}
                                right={null}
                                style={
                                  Object {
                                    "marginTop": "var(--pf-global--spacer--sm)",
                                  }
                                }
                                textAlign={null}
                                top={null}
                                verticalAlign={null}
                                width={null}
                                zIndex={null}
                              >
                                Justification note
                              </StyledText>
                              --
                            </Unknown>
                          </Unknown>
                        }
                        boundary="window"
                        className=""
                        closeBtnAriaLabel="Close"
                        distance={25}
                        enableFlip={true}
                        flipBehavior={
                          Array [
                            "top",
                            "right",
                            "bottom",
                            "left",
                            "top",
                            "right",
                            "bottom",
                          ]
                        }
                        footerContent={null}
                        headerContent=""
                        hideOnOutsideClick={true}
                        isVisible={null}
                        maxWidth="calc(1rem + 1rem + 18.75rem)"
                        onHidden={[Function]}
                        onHide={[Function]}
                        onMount={[Function]}
                        onShow={[Function]}
                        onShown={[Function]}
                        position="right"
                        shouldClose={[Function]}
                        tippyProps={Object {}}
                        zIndex={9999}
                      >
                        <PopoverBase
                          appendTo={[Function]}
                          arrow={true}
                          boundary="window"
                          content={<React.Fragment />}
                          distance={25}
                          flip={true}
                          flipBehavior={
                            Array [
                              "top",
                              "right",
                              "bottom",
                              "left",
                              "top",
                              "right",
                              "bottom",
                            ]
                          }
                          hideOnClick={true}
                          interactive={true}
                          interactiveBorder={0}
                          isVisible={null}
                          lazy={true}
                          maxWidth="calc(1rem + 1rem + 18.75rem)"
                          onCreate={[Function]}
                          onHidden={[Function]}
                          onHide={[Function]}
                          onMount={[Function]}
                          onShow={[Function]}
                          onShown={[Function]}
                          placement="right"
                          popperOptions={
                            Object {
                              "modifiers": Object {
                                "hide": Object {
                                  "enabled": true,
                                },
                                "preventOverflow": Object {
                                  "enabled": true,
                                },
                              },
                            }
                          }
                          theme="pf-popover"
                          trigger="click"
                          zIndex={9999}
                        >
                          <Component
                            style={
                              Object {
                                "cursor": "pointer",
                                "display": "inline-block",
                              }
                            }
                          >
                            <div
                              className="pf-l-stack"
                              style={
                                Object {
                                  "cursor": "pointer",
                                  "display": "inline-block",
                                }
                              }
                            >
                              <Component>
                                <div
                                  className="pf-l-stack__item"
                                >
                                  <Label>
                                    <span
                                      className="vuln-label undefined"
                                    >
                                      Status
                                    </span>
                                  </Label>
                                </div>
                              </Component>
                              <Component>
                                <div
                                  className="pf-l-stack__item"
                                >
                                  <a>
                                    <span>
                                       
                                      Resolved via mitigation
                                    </span>
                                  </a>
                                </div>
                              </Component>
                            </div>
                          </Component>
                          <Portal
                            containerInfo={<div />}
                          />
                        </PopoverBase>
                      </Popover>
                    </SnippetWithHeaderAndPopover>
                  </div>
                </Component>
              </div>
            </Component>
          </div>
        </Component>
        <Component>
          <div
            className="pf-l-stack__item"
          >
            <Component>
              <div
                className="pf-c-content"
              >
                <Component
                  component="p"
                >
                  <p
                    className=""
                    data-pf-content={true}
                  >
                    It was found that ghostscript could leak sensitive operators on the operand stack when a pseudo-operator pushes a subroutine. A specially crafted PostScript file could use this flaw to escape the -dSAFER protection in order to, for example, have access to the file system and execute commands.
                  </p>
                </Component>
              </div>
            </Component>
          </div>
        </Component>
        <Component>
          <div
            className="pf-l-stack__item"
          >
            <div
              style={
                Object {
                  "marginBottom": "var(--pf-global--spacer--xs)",
                }
              }
            >
              Publish date
              : 
              12 May 2020
            </div>
            <div />
          </div>
        </Component>
      </div>
    </Component>
  </CVEPageDetailsDescription>
</injectIntl(CVEPageDetailsDescription)>
`;
