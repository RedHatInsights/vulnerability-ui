import { routerParams } from '@red-hat-insights/insights-frontend-components';
import propTypes from 'prop-types';
import React from 'react';
import { connect } from 'react-redux';
import { fetchCveListBySystem } from '../../../Store/Actions/Actions';
import { sCveTableBySystem } from '../../../Store/Selectors/VulnerabilitiesSelectors';
import VulnerabilitiesCves from '../VulnerabilitiesCves/VulnerabilitiesCves';

class SystemDetail extends React.Component {
    constructor(props) {
        super(props);
    }

    render() {
        const header = [
            { title: 'Impact', key: 'impact', width: 5 },
            { title: 'Name', key: 'synopsis', width: 10 },
            { title: 'Description', key: 'description', width: 60, hasSort: false },
            { title: 'CVSS Base Score', key: 'cvss_score', width: 5 },
            { title: 'Publish date', key: 'public_date', width: 10 }
        ];
        return (
            <React.Fragment>
                <VulnerabilitiesCves
                    header={header}
                    dataSelector={sCveTableBySystem}
                    fetchResource={params => fetchCveListBySystem({ ...params, system: this.props.affectedSystemId })}
                    showAllCheckbox={false}
                />
            </React.Fragment>
        );
    }
}

SystemDetail.propTypes = {
    cve: propTypes.object,
    match: propTypes.object,
    affectedSystemId: propTypes.string
};

function mapStateToProps(state) {
    return {
        affectedSystemId: state.entityDetails.entity.insights_id
    };
}

export default routerParams(
    connect(
        mapStateToProps,
        null
    )(SystemDetail)
);
