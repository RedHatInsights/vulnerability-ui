import React, { useState } from 'react';
import propTypes from 'prop-types';
import {
    Select,
    SelectOption
} from '@patternfly/react-core/deprecated';

const SelectCustomSorter = ({ sorterData, setSorterData, selectProps, options }) => {
    const [isOpen, setOpen] = useState(false);

    const handleOnSelectChange = (optionName) => {
        const optionValue = options.find(item => item.label === optionName).value;
        setSorterData(optionValue);
        setOpen(false);
    };

    return (
        <Select
            variant="single"
            direction="up"
            aria-label="Select Input"
            onToggle={() => setOpen(!isOpen)}
            isOpen={isOpen}
            placeholderText={options.find(item => item.value === sorterData).label}
            key="custom-sorter"
            onSelect={(event, optionName) => { handleOnSelectChange(optionName); }}
            width="auto"
            {... selectProps}
        >
            {options.map(item =>
                <SelectOption width="100%" key={item.label} value={item.label}/>
            )}
        </Select>
    );
};

SelectCustomSorter.propTypes = {
    sorterData: propTypes.string,
    setSorterData: propTypes.func,
    selectProps: propTypes.object,
    options: propTypes.array
};

export default SelectCustomSorter;
