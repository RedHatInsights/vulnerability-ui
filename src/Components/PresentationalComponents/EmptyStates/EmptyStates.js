import React from 'react';
import propTypes from 'prop-types';
import { FormattedMessage } from 'react-intl';
import {
    Bullseye,
    Button,
    EmptyStateVariant,
    EmptyState,
    EmptyStateBody,
    EmptyStateIcon,
    Text,
    TextContent,
    Title
} from '@patternfly/react-core';
import { ExternalLinkAltIcon, SecurityIcon } from '@patternfly/react-icons';
import messages from '../../../Messages';
import { NotAuthorized as FECNotAuthorized } from '@redhat-cloud-services/frontend-components/NotAuthorized';
import { LockIcon } from '@patternfly/react-icons';
import { intl } from '../../../Utilities/IntlProvider';
import PropTypes from 'prop-types';

export const EmptyStateNoCVEs = ({ secondParagraph }) => (
    <EmptyState variant={EmptyStateVariant.large}>
        <Title headingLevel="h5" size="lg">
            <FormattedMessage {...messages.emptyStateNoMatchingCves} />
        </Title>
        <TextContent>
            <EmptyStateBody>
                <Text>
                    <FormattedMessage {...messages.emptyStateEditFilterSettings} />
                </Text>
                <Text>
                    <FormattedMessage {...secondParagraph} values={{ link: (
                        <a href="https://access.redhat.com/security/team/contact/" target="__blank" rel="noopener noreferrer">
                            <FormattedMessage {...messages.emptyStateProdSecLink} />  <ExternalLinkAltIcon />
                        </a>
                    ) }} />
                </Text>
            </EmptyStateBody>
        </TextContent>
    </EmptyState>
);

EmptyStateNoCVEs.propTypes = {
    secondParagraph: PropTypes.object
};

export const EmptyStateNoSystems = () => (
    <EmptyState variant={EmptyStateVariant.large}>
        <Title headingLevel="h5" size="lg">
            <FormattedMessage {...messages.emptyStateNoMatchingSystems} />
        </Title>
        <TextContent>
            <EmptyStateBody>
                <Text>
                    <FormattedMessage {...messages.emptyStateEditFilterSettings} />
                </Text>
            </EmptyStateBody>
        </TextContent>
    </EmptyState>
);

export const EmptyStateExcludedSystem = ({ buttonAction }) => (
    <Bullseye>
        <EmptyState variant={EmptyStateVariant.large}>
            <EmptyStateIcon icon={SecurityIcon} size="sm" />
            <Title headingLevel="h5" size="lg">
                <FormattedMessage {...messages.emptyStateSystemExcludedTitle} />
            </Title>
            <EmptyStateBody>
                <FormattedMessage {...messages.emptyStateSystemExcludedBody} />
            </EmptyStateBody>
            <Button variant="primary" component="a" onClick={buttonAction}>
                <FormattedMessage {...messages.emptyStateSystemResumeAnalysis} />
            </Button>
        </EmptyState>
    </Bullseye>
);

EmptyStateExcludedSystem.propTypes = {
    buttonAction: propTypes.func
};

export const NotAuthorized = () => (
    <FECNotAuthorized
        icon={LockIcon}
        title={intl.formatMessage(messages.notAuthorizedTitle)}
        description={intl.formatMessage(messages.notAuthorizedDescription)}
        prevPageButtonText={intl.formatMessage(messages.returnToPreviousPage)}
        toLandingPageText={intl.formatMessage(messages.returnToLandingPage)}
    />
);
