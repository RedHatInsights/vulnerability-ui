import { shallow } from 'enzyme';
import toJson from 'enzyme-to-json';
import React from 'react';
import { VulnerabilityHeader } from '../../SmartComponents/VulnerabilityHeader/VulnerabilityHeader';

describe('VulnerabilityHeader component', () => {
    it('should render without props', () => {
        const wrapper = shallow(<VulnerabilityHeader />);
        expect(toJson(wrapper)).toMatchSnapshot();
    });

    it('should render with header as empty string', () => {
        const header = { title: '' };
        const wrapper = shallow(<VulnerabilityHeader header={header} />);
        expect(toJson(wrapper)).toMatchSnapshot();
    });

    it('should render with header Hello world', () => {
        const header = { title: 'Hello world' };
        const wrapper = shallow(<VulnerabilityHeader header={header} />);
        expect(toJson(wrapper)).toMatchSnapshot();
    });

    it('should render with empty breadcrumb', () => {
        const header = {
            breadcrumbs: []
        };
        const wrapper = shallow(<VulnerabilityHeader header={header} />);
        expect(toJson(wrapper)).toMatchSnapshot();
    });

    it('should render with 1 breadcrumb item and last is active', () => {
        const header = {
            breadcrumbs: [
                {
                    title: 'First item',
                    to: '#',
                    isActive: true
                }
            ]
        };
        const wrapper = shallow(<VulnerabilityHeader header={header} />);
        expect(toJson(wrapper)).toMatchSnapshot();
    });

    it('should render with 2 breadcrumb items and last is active', () => {
        const header = {
            breadcrumbs: [
                {
                    title: 'First item',
                    to: '#',
                    isActive: false
                },
                {
                    title: 'Second item',
                    to: '#',
                    isActive: true
                }
            ]
        };
        const wrapper = shallow(<VulnerabilityHeader header={header} />);
        expect(toJson(wrapper)).toMatchSnapshot();
    });

    it('should render with 3 breadcrumb items and last is active', () => {
        const header = {
            breadcrumbs: [
                {
                    title: 'First item',
                    to: '#',
                    isActive: false
                },
                {
                    title: 'Second item',
                    to: '#',
                    isActive: false
                },
                {
                    title: 'Third item',
                    to: '#',
                    isActive: true
                }
            ]
        };
        const wrapper = shallow(<VulnerabilityHeader header={header} />);
        expect(toJson(wrapper)).toMatchSnapshot();
    });
});
