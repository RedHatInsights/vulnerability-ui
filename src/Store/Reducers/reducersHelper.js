export const error = {
    errorCode: null,
    message: null,
    hasError: false
};

const hasResetFilters = (
    workloads,
    SIDs,
    tags
) => (workloads === undefined || workloads?.SAP === undefined) && SIDs.length === 0 && tags.length === 0;

const hasSetAnyFilter = (state) => ['sap_system', 'tags', 'sap_sids'].some(key => state.hasOwnProperty(key));

export const applyGlobalFilter = (state, { workloads, SIDs, tags }) => {
    // DO nothing in first load
    if (!hasSetAnyFilter(state) && hasResetFilters(workloads, SIDs, tags)) {
        return state;
    }

    if (hasSetAnyFilter(state) && hasResetFilters(workloads, SIDs, tags)) {
        // reset the filters
        state = {
            ...state,
            sap_system: undefined,
            tags: undefined,
            sap_sids: undefined,
            page: 1
        };
    } else {
        state = {
            ...state,
            ...workloads && { sap_system: workloads?.SAP?.isSelected === true ? true : undefined },
            ...SIDs && { sap_sids: SIDs },
            ...tags && { tags },
            page: 1
        };
    }

    return state;
};

export const isTimestampValid = (stateTimestamp, actionTimestamp) => actionTimestamp >= stateTimestamp;
