import React from 'react';
import propTypes from 'prop-types';
import { connect } from 'react-redux';
import { withRouter } from 'react-router-dom';
import { FormattedMessage } from 'react-intl';
import messages from '../../../Messages';
import { PATHS } from '../../../Helpers/constants';
import { setHeader } from '../../../Store/Actions/Actions';
import { ConnectedSystemCves } from '../SystemCves/SystemCves';
import { EmptyExcludedSystem } from '../../PresentationalComponents/EmptyStates/EmptyStates';

class SystemDetails extends React.Component {
    static propTypes = {
        entity: propTypes.object,
        isOptOut: propTypes.bool,
        loaded: propTypes.bool,
        optOutSystemHandler: propTypes.func
    };

    constructor(props) {
        super(props);
    }

    render() {
        const { entity, isOptOut, optOutSystemHandler, loaded } = this.props;

        if (!entity || !loaded) {
            return null;
        }

        if (!isOptOut) {
            return (
                <React.Fragment>
                    <ConnectedSystemCves
                        entity={{ id: entity.id, display_name: entity.display_name }}
                        allowedCveActions={['EDIT_STATUS', 'REMEDIATE']}
                        showHeaderLabel
                        setPageTitle
                    />
                </React.Fragment>
            );
        } else {
            return (
                <React.Fragment>
                    <EmptyExcludedSystem buttonAction={() => optOutSystemHandler(false)} />
                </React.Fragment>
            );
        }
    }
}

function mapStateToProps({ entityDetails: { entity, opt_out: isOptOut, loaded } }) {
    return {
        entity,
        isOptOut,
        loaded
    };
}

export default withRouter(
    connect(
        mapStateToProps,
        null
    )(SystemDetails)
);
