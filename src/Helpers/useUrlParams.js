import { useCallback } from 'react';
import { useSearchParams } from 'react-router-dom';

// TODO DRY:similar to constructParameters
export function constructURLParameters(urlParams, allowedParams) {
    if (urlParams) {
        const params = { ...urlParams };
        Object.keys(urlParams).forEach(
            key => (
                params[key] === undefined
                || params[key] === ''
                || !allowedParams.includes(key)
                || params[key] === false
            )
                && delete params[key]

        );
        return params;
    }
}

export const useUrlParams = (allowedParams) => {
    const [searchParams, setSearchParams] = useSearchParams();

    const setUrlParams = useCallback((parameters) => {
        const para = constructURLParameters(parameters, allowedParams);

        setSearchParams(para);
    }, [JSON.stringify(allowedParams)]);

    return [searchParams, setUrlParams];
};

export default useUrlParams;
