import SystemsPage from './SystemsPage';
import { render } from '@testing-library/react';
import TestWrapper from '../../../Utilities/TestWrapper';
import { initialState } from '../../../Store/Reducers/SystemsPageStore';
import configureStore from 'redux-mock-store';

jest.mock("react-redux", () => ({
    ...jest.requireActual("react-redux"),
    useDispatch: jest.fn(),
    useSelector: jest.fn()
}));

const customMiddleWare = store => next => action => {
    useSelector.mockImplementation(callback => {
        return callback({ SystemsPageStore: initialState });
    });
    next(action);
};

const mockStore = configureStore([customMiddleWare]);
const store = mockStore(initialState);

describe('SystemsPage', () => {
    let fetchData = jest.fn();
    let systems = { data: [], meta: {} };

    it.skip('should call fetchData function', () => {
        render(
            <TestWrapper store={ store }>
                <SystemsPage systems={systems} fetchData={fetchData} />
            </TestWrapper>
        );

        expect(fetchData).toBeCalled;
    });
});
