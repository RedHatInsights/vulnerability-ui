import React from 'react';
import SystemDetails from '../../Components/SmartComponents/SystemDetailsPage/SystemDetails';
import { FETCH_SYSTEM_DETAILS } from '../ActionTypes';

export const initialState = {
    loaded: false
};

export const systemDetailsPageStore = (
    INVENTORY_ACTION_TYPES, optOutSystemHandler, rbacPermissions, isRbacLoading
) => (state = initialState, action) => {
    switch (action.type) {
        case FETCH_SYSTEM_DETAILS + '_FULFILLED':
            return {
                ...state,
                ...action.payload.data
            };
        case INVENTORY_ACTION_TYPES.LOAD_ENTITY_FULFILLED:
            return {
                ...state,
                loaded: true,
                activeApps: [
                    {
                        title: 'Vulnerabilities',
                        name: 'vulnerabilities',
                        component: () => <SystemDetails
                            rbacPermissions={rbacPermissions}
                            optOutSystemHandler={optOutSystemHandler}
                            isRbacLoading={isRbacLoading}
                        />
                    }
                ]
            };
        case INVENTORY_ACTION_TYPES.LOAD_ENTITY_REJECTED:
            return {
                ...state,
                loaded: true,
                activeApps: [
                    {
                        title: 'Vulnerabilities',
                        name: 'vulnerabilities',
                        component: () => <SystemDetails />
                    }
                ]
            };
        default:
            return state;
    }
};
