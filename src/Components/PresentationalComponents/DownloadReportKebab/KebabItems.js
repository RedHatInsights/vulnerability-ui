import { DropdownItem } from '@patternfly/react-core';
import React from 'react';
import messages from '../../../Messages';
import { FormattedMessage } from 'react-intl';

export const kebabItemDownloadJSON = (downloadReport, { ...props }) => (
    <DropdownItem key="json" component="button" onClick={() => downloadReport('json')} {...props}>
        <FormattedMessage {...messages.kebabExportAsJson} />
    </DropdownItem>
);

export const kebabItemDownloadCSV = (downloadReport, { ...props }) => (
    <DropdownItem key="csv" component="button" onClick={() => downloadReport('csv')} {...props}>
        <FormattedMessage {...messages.kebabExportAsCsv} />
    </DropdownItem>
);

export const kebabItemDownloadPDF = (loading, downloadReport, { ...props }) => (
    <DropdownItem key="pdf" component="button" onClick={() => downloadReport(true)} {...props}>
        {loading ? <FormattedMessage {...messages.loading} /> : <FormattedMessage {...messages.kebabExportAsPDF} />}
    </DropdownItem>
);

export const kebabItemEditBusinessRisk = (showBusinessRiskModal, cves, { ...props }) => (
    <DropdownItem key="editBusinessRisk" component="button" onClick={() => showBusinessRiskModal(cves)} {...props}>
        <FormattedMessage {...messages.kebabEditBusinessRisk} />
    </DropdownItem>
);

export const kebabItemEditStatus = (showStatusModal, cves, inventoryIds,  { ...props }) => (
    <DropdownItem key="editStatus" component="button" onClick={() => showStatusModal(cves, inventoryIds)} {...props}>
        <FormattedMessage {...messages.kebabEditStatus} />
    </DropdownItem>
);
