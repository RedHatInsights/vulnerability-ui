/* eslint-disable react/no-danger */
import React, { Fragment } from 'react';
import marked from 'marked';
import PropTypes from 'prop-types';
import { injectIntl } from 'react-intl';
import sanitizeHtml from 'sanitize-html';
import { Truncate } from '@redhat-cloud-services/frontend-components/components/Truncate';
import { Stack, StackItem, TextContent } from '@patternfly/react-core';
import { handleCVELink } from '../../../Helpers/VulnerabilitiesHelper';
import messages from '../../../Messages';

const CSAwRuleSummary = ({ text, truncate, link, intl }) => {
    const dangerousHtml = (text) => ({ __html: sanitizeHtml(text) });

    return (
        <TextContent>
            { truncate
                ? (
                    <Truncate
                        length={230}
                        expandText={intl.formatMessage(messages.readMore)}
                        collapseText={intl.formatMessage(messages.readLess)}
                        text={marked(text)}
                    />
                ) : (
                    <Fragment>
                        <Stack>
                            <StackItem>
                                <span dangerouslySetInnerHTML={dangerousHtml(marked(text))}/>
                            </StackItem>
                            <StackItem>
                                {link && handleCVELink(link, intl.formatMessage(messages.readMore))}
                            </StackItem>

                        </Stack>

                    </Fragment>
                )
            }
        </TextContent>
    );

};

CSAwRuleSummary.defaultProps = {
    truncate: true,
    link: null
};

CSAwRuleSummary.propTypes = {
    intl: PropTypes.oneOfType([
        PropTypes.string,
        PropTypes.object
    ]),
    truncate: PropTypes.bool,
    text: PropTypes.string,
    link: PropTypes.string
};

export default injectIntl(CSAwRuleSummary);
