// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`KebabItems component Should render without default params 1`] = `
<BaseKebab
  dropdownItems={
    Array [
      <Unknown
        component="button"
        onClick={[Function]}
      >
        <FormattedMessage
          defaultMessage="Export as JSON"
          id="kebab.exportAsJson"
          values={Object {}}
        />
      </Unknown>,
      <Unknown
        component="button"
        onClick={[Function]}
      >
        <FormattedMessage
          defaultMessage="Export as CSV"
          id="kebab.exportAsCsv"
          values={Object {}}
        />
      </Unknown>,
      <Unknown
        component="button"
        onClick={[Function]}
      >
        <FormattedMessage
          defaultMessage="Edit business risk"
          id="kebab.editBusinnesRisk"
          values={Object {}}
        />
      </Unknown>,
      <Unknown
        component="button"
        onClick={[Function]}
      >
        <FormattedMessage
          defaultMessage="Edit status"
          id="kebab.editStatus"
          values={Object {}}
        />
      </Unknown>,
      <Unknown
        component="button"
        onClick={[Function]}
      >
        <FormattedMessage
          defaultMessage="Expand all CVEs"
          id="kebab.expandCves"
          values={Object {}}
        />
      </Unknown>,
      <Unknown
        component="button"
        onClick={[Function]}
      >
        <FormattedMessage
          defaultMessage="Exclude system from vulnerability analysis"
          id="kebab.excludeVulnerabilityAnalysis"
          values={Object {}}
        />
      </Unknown>,
      <Unknown
        component="button"
        onClick={[Function]}
      >
        <FormattedMessage
          defaultMessage="Exclude system from analysis"
          id="kebab.excludeAnalysis"
          values={Object {}}
        />
      </Unknown>,
      <Unknown
        component="button"
        onClick={[Function]}
      >
        <FormattedMessage
          defaultMessage="Show systems excluded from vulnerability analysis"
          id="kebab.ShowExcludedSystems"
          values={Object {}}
        />
      </Unknown>,
    ]
  }
>
  <div>
    <Component
      dropdownItems={
        Array [
          <Unknown
            component="button"
            onClick={[Function]}
          >
            <FormattedMessage
              defaultMessage="Export as JSON"
              id="kebab.exportAsJson"
              values={Object {}}
            />
          </Unknown>,
          <Unknown
            component="button"
            onClick={[Function]}
          >
            <FormattedMessage
              defaultMessage="Export as CSV"
              id="kebab.exportAsCsv"
              values={Object {}}
            />
          </Unknown>,
          <Unknown
            component="button"
            onClick={[Function]}
          >
            <FormattedMessage
              defaultMessage="Edit business risk"
              id="kebab.editBusinnesRisk"
              values={Object {}}
            />
          </Unknown>,
          <Unknown
            component="button"
            onClick={[Function]}
          >
            <FormattedMessage
              defaultMessage="Edit status"
              id="kebab.editStatus"
              values={Object {}}
            />
          </Unknown>,
          <Unknown
            component="button"
            onClick={[Function]}
          >
            <FormattedMessage
              defaultMessage="Expand all CVEs"
              id="kebab.expandCves"
              values={Object {}}
            />
          </Unknown>,
          <Unknown
            component="button"
            onClick={[Function]}
          >
            <FormattedMessage
              defaultMessage="Exclude system from vulnerability analysis"
              id="kebab.excludeVulnerabilityAnalysis"
              values={Object {}}
            />
          </Unknown>,
          <Unknown
            component="button"
            onClick={[Function]}
          >
            <FormattedMessage
              defaultMessage="Exclude system from analysis"
              id="kebab.excludeAnalysis"
              values={Object {}}
            />
          </Unknown>,
          <Unknown
            component="button"
            onClick={[Function]}
          >
            <FormattedMessage
              defaultMessage="Show systems excluded from vulnerability analysis"
              id="kebab.ShowExcludedSystems"
              values={Object {}}
            />
          </Unknown>,
        ]
      }
      isOpen={true}
      isPlain={true}
      onSelect={[Function]}
      toggle={
        <Unknown
          onToggle={[Function]}
        />
      }
    >
      <DropdownWithContext
        autoFocus={true}
        className=""
        direction="down"
        dropdownItems={
          Array [
            <Unknown
              component="button"
              onClick={[Function]}
            >
              <FormattedMessage
                defaultMessage="Export as JSON"
                id="kebab.exportAsJson"
                values={Object {}}
              />
            </Unknown>,
            <Unknown
              component="button"
              onClick={[Function]}
            >
              <FormattedMessage
                defaultMessage="Export as CSV"
                id="kebab.exportAsCsv"
                values={Object {}}
              />
            </Unknown>,
            <Unknown
              component="button"
              onClick={[Function]}
            >
              <FormattedMessage
                defaultMessage="Edit business risk"
                id="kebab.editBusinnesRisk"
                values={Object {}}
              />
            </Unknown>,
            <Unknown
              component="button"
              onClick={[Function]}
            >
              <FormattedMessage
                defaultMessage="Edit status"
                id="kebab.editStatus"
                values={Object {}}
              />
            </Unknown>,
            <Unknown
              component="button"
              onClick={[Function]}
            >
              <FormattedMessage
                defaultMessage="Expand all CVEs"
                id="kebab.expandCves"
                values={Object {}}
              />
            </Unknown>,
            <Unknown
              component="button"
              onClick={[Function]}
            >
              <FormattedMessage
                defaultMessage="Exclude system from vulnerability analysis"
                id="kebab.excludeVulnerabilityAnalysis"
                values={Object {}}
              />
            </Unknown>,
            <Unknown
              component="button"
              onClick={[Function]}
            >
              <FormattedMessage
                defaultMessage="Exclude system from analysis"
                id="kebab.excludeAnalysis"
                values={Object {}}
              />
            </Unknown>,
            <Unknown
              component="button"
              onClick={[Function]}
            >
              <FormattedMessage
                defaultMessage="Show systems excluded from vulnerability analysis"
                id="kebab.ShowExcludedSystems"
                values={Object {}}
              />
            </Unknown>,
          ]
        }
        isGrouped={false}
        isOpen={true}
        isPlain={true}
        menuAppendTo="inline"
        onSelect={[Function]}
        ouiaComponentType="Dropdown"
        position="left"
        toggle={
          <Unknown
            onToggle={[Function]}
          />
        }
      >
        <div
          className="pf-c-dropdown pf-m-expanded"
          data-ouia-component-id={2}
          data-ouia-component-type="PF4/Dropdown"
          data-ouia-safe={true}
        >
          <Component
            aria-haspopup={true}
            getMenuRef={[Function]}
            id="pf-toggle-id-2"
            isOpen={true}
            isPlain={true}
            key=".0"
            onEnter={[Function]}
            onToggle={[Function]}
            parentRef={
              Object {
                "current": <div
                  class="pf-c-dropdown pf-m-expanded"
                  data-ouia-component-id="2"
                  data-ouia-component-type="PF4/Dropdown"
                  data-ouia-safe="true"
                >
                  <button
                    aria-expanded="true"
                    aria-haspopup="true"
                    aria-label="Actions"
                    class="pf-c-dropdown__toggle pf-m-plain"
                    id="pf-toggle-id-2"
                    type="button"
                  >
                    <svg
                      aria-hidden="true"
                      fill="currentColor"
                      height="1em"
                      role="img"
                      style="vertical-align: -0.125em;"
                      viewBox="0 0 192 512"
                      width="1em"
                    >
                      <path
                        d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                        transform=""
                      />
                    </svg>
                  </button>
                  <ul
                    aria-labelledby="pf-toggle-id-2"
                    class="pf-c-dropdown__menu"
                    role="menu"
                  >
                    <li
                      role="menuitem"
                    >
                      <button
                        class="pf-c-dropdown__menu-item"
                        tabindex="-1"
                        type="button"
                      >
                        Export as JSON
                      </button>
                    </li>
                    <li
                      role="menuitem"
                    >
                      <button
                        class="pf-c-dropdown__menu-item"
                        tabindex="-1"
                        type="button"
                      >
                        Export as CSV
                      </button>
                    </li>
                    <li
                      role="menuitem"
                    >
                      <button
                        class="pf-c-dropdown__menu-item"
                        tabindex="-1"
                        type="button"
                      >
                        Edit business risk
                      </button>
                    </li>
                    <li
                      role="menuitem"
                    >
                      <button
                        class="pf-c-dropdown__menu-item"
                        tabindex="-1"
                        type="button"
                      >
                        Edit status
                      </button>
                    </li>
                    <li
                      role="menuitem"
                    >
                      <button
                        class="pf-c-dropdown__menu-item"
                        tabindex="-1"
                        type="button"
                      >
                        Expand all CVEs
                      </button>
                    </li>
                    <li
                      role="menuitem"
                    >
                      <button
                        class="pf-c-dropdown__menu-item"
                        tabindex="-1"
                        type="button"
                      >
                        Exclude system from vulnerability analysis
                      </button>
                    </li>
                    <li
                      role="menuitem"
                    >
                      <button
                        class="pf-c-dropdown__menu-item"
                        tabindex="-1"
                        type="button"
                      >
                        Exclude system from analysis
                      </button>
                    </li>
                    <li
                      role="menuitem"
                    >
                      <button
                        class="pf-c-dropdown__menu-item"
                        tabindex="-1"
                        type="button"
                      >
                        Show systems excluded from vulnerability analysis
                      </button>
                    </li>
                  </ul>
                </div>,
              }
            }
          >
            <Toggle
              aria-haspopup={true}
              aria-label="Actions"
              bubbleEvent={false}
              className=""
              getMenuRef={[Function]}
              id="pf-toggle-id-2"
              isActive={false}
              isDisabled={false}
              isOpen={true}
              isPlain={true}
              isPrimary={false}
              isSplitButton={false}
              onEnter={[Function]}
              onToggle={[Function]}
              parentRef={
                Object {
                  "current": <div
                    class="pf-c-dropdown pf-m-expanded"
                    data-ouia-component-id="2"
                    data-ouia-component-type="PF4/Dropdown"
                    data-ouia-safe="true"
                  >
                    <button
                      aria-expanded="true"
                      aria-haspopup="true"
                      aria-label="Actions"
                      class="pf-c-dropdown__toggle pf-m-plain"
                      id="pf-toggle-id-2"
                      type="button"
                    >
                      <svg
                        aria-hidden="true"
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style="vertical-align: -0.125em;"
                        viewBox="0 0 192 512"
                        width="1em"
                      >
                        <path
                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                          transform=""
                        />
                      </svg>
                    </button>
                    <ul
                      aria-labelledby="pf-toggle-id-2"
                      class="pf-c-dropdown__menu"
                      role="menu"
                    >
                      <li
                        role="menuitem"
                      >
                        <button
                          class="pf-c-dropdown__menu-item"
                          tabindex="-1"
                          type="button"
                        >
                          Export as JSON
                        </button>
                      </li>
                      <li
                        role="menuitem"
                      >
                        <button
                          class="pf-c-dropdown__menu-item"
                          tabindex="-1"
                          type="button"
                        >
                          Export as CSV
                        </button>
                      </li>
                      <li
                        role="menuitem"
                      >
                        <button
                          class="pf-c-dropdown__menu-item"
                          tabindex="-1"
                          type="button"
                        >
                          Edit business risk
                        </button>
                      </li>
                      <li
                        role="menuitem"
                      >
                        <button
                          class="pf-c-dropdown__menu-item"
                          tabindex="-1"
                          type="button"
                        >
                          Edit status
                        </button>
                      </li>
                      <li
                        role="menuitem"
                      >
                        <button
                          class="pf-c-dropdown__menu-item"
                          tabindex="-1"
                          type="button"
                        >
                          Expand all CVEs
                        </button>
                      </li>
                      <li
                        role="menuitem"
                      >
                        <button
                          class="pf-c-dropdown__menu-item"
                          tabindex="-1"
                          type="button"
                        >
                          Exclude system from vulnerability analysis
                        </button>
                      </li>
                      <li
                        role="menuitem"
                      >
                        <button
                          class="pf-c-dropdown__menu-item"
                          tabindex="-1"
                          type="button"
                        >
                          Exclude system from analysis
                        </button>
                      </li>
                      <li
                        role="menuitem"
                      >
                        <button
                          class="pf-c-dropdown__menu-item"
                          tabindex="-1"
                          type="button"
                        >
                          Show systems excluded from vulnerability analysis
                        </button>
                      </li>
                    </ul>
                  </div>,
                }
              }
            >
              <button
                aria-expanded={true}
                aria-haspopup={true}
                aria-label="Actions"
                className="pf-c-dropdown__toggle pf-m-plain"
                disabled={false}
                id="pf-toggle-id-2"
                onClick={[Function]}
                onKeyDown={[Function]}
                type="button"
              >
                <EllipsisVIcon
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                >
                  <svg
                    aria-hidden={true}
                    aria-labelledby={null}
                    fill="currentColor"
                    height="1em"
                    role="img"
                    style={
                      Object {
                        "verticalAlign": "-0.125em",
                      }
                    }
                    viewBox="0 0 192 512"
                    width="1em"
                  >
                    <path
                      d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                      transform=""
                    />
                  </svg>
                </EllipsisVIcon>
              </button>
            </Toggle>
          </Component>
          <DropdownMenu
            aria-labelledby="pf-toggle-id-2"
            autoFocus={false}
            className=""
            component="ul"
            isGrouped={false}
            isOpen={true}
            openedOnEnter={false}
            position="left"
            setMenuComponentRef={[Function]}
          >
            <ul
              aria-labelledby="pf-toggle-id-2"
              autoFocus={false}
              className="pf-c-dropdown__menu"
              hidden={false}
              role="menu"
            >
              <Component
                component="button"
                index={0}
                key=".$json"
                onClick={[Function]}
              >
                <InternalDropdownItem
                  className=""
                  component="button"
                  context={
                    Object {
                      "keyHandler": [Function],
                      "sendRef": [Function],
                    }
                  }
                  enterTriggersArrowDown={false}
                  icon={null}
                  index={0}
                  isDisabled={false}
                  isHovered={false}
                  isPlainText={false}
                  onClick={[Function]}
                  role="menuitem"
                  tabIndex={-1}
                  tooltipProps={Object {}}
                >
                  <li
                    className={null}
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    role="menuitem"
                  >
                    <button
                      className="pf-c-dropdown__menu-item"
                      disabled={false}
                      tabIndex={-1}
                      type="button"
                    >
                      <FormattedMessage
                        defaultMessage="Export as JSON"
                        id="kebab.exportAsJson"
                        values={Object {}}
                      >
                        Export as JSON
                      </FormattedMessage>
                    </button>
                  </li>
                </InternalDropdownItem>
              </Component>
              <Component
                component="button"
                index={1}
                key=".$csv"
                onClick={[Function]}
              >
                <InternalDropdownItem
                  className=""
                  component="button"
                  context={
                    Object {
                      "keyHandler": [Function],
                      "sendRef": [Function],
                    }
                  }
                  enterTriggersArrowDown={false}
                  icon={null}
                  index={1}
                  isDisabled={false}
                  isHovered={false}
                  isPlainText={false}
                  onClick={[Function]}
                  role="menuitem"
                  tabIndex={-1}
                  tooltipProps={Object {}}
                >
                  <li
                    className={null}
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    role="menuitem"
                  >
                    <button
                      className="pf-c-dropdown__menu-item"
                      disabled={false}
                      tabIndex={-1}
                      type="button"
                    >
                      <FormattedMessage
                        defaultMessage="Export as CSV"
                        id="kebab.exportAsCsv"
                        values={Object {}}
                      >
                        Export as CSV
                      </FormattedMessage>
                    </button>
                  </li>
                </InternalDropdownItem>
              </Component>
              <Component
                component="button"
                index={2}
                key=".$editBusinessRisk"
                onClick={[Function]}
              >
                <InternalDropdownItem
                  className=""
                  component="button"
                  context={
                    Object {
                      "keyHandler": [Function],
                      "sendRef": [Function],
                    }
                  }
                  enterTriggersArrowDown={false}
                  icon={null}
                  index={2}
                  isDisabled={false}
                  isHovered={false}
                  isPlainText={false}
                  onClick={[Function]}
                  role="menuitem"
                  tabIndex={-1}
                  tooltipProps={Object {}}
                >
                  <li
                    className={null}
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    role="menuitem"
                  >
                    <button
                      className="pf-c-dropdown__menu-item"
                      disabled={false}
                      tabIndex={-1}
                      type="button"
                    >
                      <FormattedMessage
                        defaultMessage="Edit business risk"
                        id="kebab.editBusinnesRisk"
                        values={Object {}}
                      >
                        Edit business risk
                      </FormattedMessage>
                    </button>
                  </li>
                </InternalDropdownItem>
              </Component>
              <Component
                component="button"
                index={3}
                key=".$editStatus"
                onClick={[Function]}
              >
                <InternalDropdownItem
                  className=""
                  component="button"
                  context={
                    Object {
                      "keyHandler": [Function],
                      "sendRef": [Function],
                    }
                  }
                  enterTriggersArrowDown={false}
                  icon={null}
                  index={3}
                  isDisabled={false}
                  isHovered={false}
                  isPlainText={false}
                  onClick={[Function]}
                  role="menuitem"
                  tabIndex={-1}
                  tooltipProps={Object {}}
                >
                  <li
                    className={null}
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    role="menuitem"
                  >
                    <button
                      className="pf-c-dropdown__menu-item"
                      disabled={false}
                      tabIndex={-1}
                      type="button"
                    >
                      <FormattedMessage
                        defaultMessage="Edit status"
                        id="kebab.editStatus"
                        values={Object {}}
                      >
                        Edit status
                      </FormattedMessage>
                    </button>
                  </li>
                </InternalDropdownItem>
              </Component>
              <Component
                component="button"
                index={4}
                key=".$toggleCveDescription"
                onClick={[Function]}
              >
                <InternalDropdownItem
                  className=""
                  component="button"
                  context={
                    Object {
                      "keyHandler": [Function],
                      "sendRef": [Function],
                    }
                  }
                  enterTriggersArrowDown={false}
                  icon={null}
                  index={4}
                  isDisabled={false}
                  isHovered={false}
                  isPlainText={false}
                  onClick={[Function]}
                  role="menuitem"
                  tabIndex={-1}
                  tooltipProps={Object {}}
                >
                  <li
                    className={null}
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    role="menuitem"
                  >
                    <button
                      className="pf-c-dropdown__menu-item"
                      disabled={false}
                      tabIndex={-1}
                      type="button"
                    >
                      <FormattedMessage
                        defaultMessage="Expand all CVEs"
                        id="kebab.expandCves"
                        values={Object {}}
                      >
                        Expand all CVEs
                      </FormattedMessage>
                    </button>
                  </li>
                </InternalDropdownItem>
              </Component>
              <Component
                component="button"
                index={5}
                key=".$do_opt_out_analysis"
                onClick={[Function]}
              >
                <InternalDropdownItem
                  className=""
                  component="button"
                  context={
                    Object {
                      "keyHandler": [Function],
                      "sendRef": [Function],
                    }
                  }
                  enterTriggersArrowDown={false}
                  icon={null}
                  index={5}
                  isDisabled={false}
                  isHovered={false}
                  isPlainText={false}
                  onClick={[Function]}
                  role="menuitem"
                  tabIndex={-1}
                  tooltipProps={Object {}}
                >
                  <li
                    className={null}
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    role="menuitem"
                  >
                    <button
                      className="pf-c-dropdown__menu-item"
                      disabled={false}
                      tabIndex={-1}
                      type="button"
                    >
                      <FormattedMessage
                        defaultMessage="Exclude system from vulnerability analysis"
                        id="kebab.excludeVulnerabilityAnalysis"
                        values={Object {}}
                      >
                        Exclude system from vulnerability analysis
                      </FormattedMessage>
                    </button>
                  </li>
                </InternalDropdownItem>
              </Component>
              <Component
                component="button"
                index={6}
                key=".$do_opt_out"
                onClick={[Function]}
              >
                <InternalDropdownItem
                  className=""
                  component="button"
                  context={
                    Object {
                      "keyHandler": [Function],
                      "sendRef": [Function],
                    }
                  }
                  enterTriggersArrowDown={false}
                  icon={null}
                  index={6}
                  isDisabled={false}
                  isHovered={false}
                  isPlainText={false}
                  onClick={[Function]}
                  role="menuitem"
                  tabIndex={-1}
                  tooltipProps={Object {}}
                >
                  <li
                    className={null}
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    role="menuitem"
                  >
                    <button
                      className="pf-c-dropdown__menu-item"
                      disabled={false}
                      tabIndex={-1}
                      type="button"
                    >
                      <FormattedMessage
                        defaultMessage="Exclude system from analysis"
                        id="kebab.excludeAnalysis"
                        values={Object {}}
                      >
                        Exclude system from analysis
                      </FormattedMessage>
                    </button>
                  </li>
                </InternalDropdownItem>
              </Component>
              <Component
                component="button"
                index={7}
                key=".$toggle_opt_out"
                onClick={[Function]}
              >
                <InternalDropdownItem
                  className=""
                  component="button"
                  context={
                    Object {
                      "keyHandler": [Function],
                      "sendRef": [Function],
                    }
                  }
                  enterTriggersArrowDown={false}
                  icon={null}
                  index={7}
                  isDisabled={false}
                  isHovered={false}
                  isPlainText={false}
                  onClick={[Function]}
                  role="menuitem"
                  tabIndex={-1}
                  tooltipProps={Object {}}
                >
                  <li
                    className={null}
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    role="menuitem"
                  >
                    <button
                      className="pf-c-dropdown__menu-item"
                      disabled={false}
                      tabIndex={-1}
                      type="button"
                    >
                      <FormattedMessage
                        defaultMessage="Show systems excluded from vulnerability analysis"
                        id="kebab.ShowExcludedSystems"
                        values={Object {}}
                      >
                        Show systems excluded from vulnerability analysis
                      </FormattedMessage>
                    </button>
                  </li>
                </InternalDropdownItem>
              </Component>
            </ul>
          </DropdownMenu>
        </div>
      </DropdownWithContext>
    </Component>
  </div>
</BaseKebab>
`;

exports[`KebabItems component should render with collapse all text 1`] = `
<BaseKebab
  dropdownItems={
    Array [
      <Unknown
        component="button"
        onClick={[Function]}
      >
        <FormattedMessage
          defaultMessage="Collapse all CVEs"
          id="kebab.collapseCves"
          values={Object {}}
        />
      </Unknown>,
    ]
  }
>
  <div>
    <Component
      dropdownItems={
        Array [
          <Unknown
            component="button"
            onClick={[Function]}
          >
            <FormattedMessage
              defaultMessage="Collapse all CVEs"
              id="kebab.collapseCves"
              values={Object {}}
            />
          </Unknown>,
        ]
      }
      isOpen={true}
      isPlain={true}
      onSelect={[Function]}
      toggle={
        <Unknown
          onToggle={[Function]}
        />
      }
    >
      <DropdownWithContext
        autoFocus={true}
        className=""
        direction="down"
        dropdownItems={
          Array [
            <Unknown
              component="button"
              onClick={[Function]}
            >
              <FormattedMessage
                defaultMessage="Collapse all CVEs"
                id="kebab.collapseCves"
                values={Object {}}
              />
            </Unknown>,
          ]
        }
        isGrouped={false}
        isOpen={true}
        isPlain={true}
        menuAppendTo="inline"
        onSelect={[Function]}
        ouiaComponentType="Dropdown"
        position="left"
        toggle={
          <Unknown
            onToggle={[Function]}
          />
        }
      >
        <div
          className="pf-c-dropdown pf-m-expanded"
          data-ouia-component-id={5}
          data-ouia-component-type="PF4/Dropdown"
          data-ouia-safe={true}
        >
          <Component
            aria-haspopup={true}
            getMenuRef={[Function]}
            id="pf-toggle-id-5"
            isOpen={true}
            isPlain={true}
            key=".0"
            onEnter={[Function]}
            onToggle={[Function]}
            parentRef={
              Object {
                "current": <div
                  class="pf-c-dropdown pf-m-expanded"
                  data-ouia-component-id="5"
                  data-ouia-component-type="PF4/Dropdown"
                  data-ouia-safe="true"
                >
                  <button
                    aria-expanded="true"
                    aria-haspopup="true"
                    aria-label="Actions"
                    class="pf-c-dropdown__toggle pf-m-plain"
                    id="pf-toggle-id-5"
                    type="button"
                  >
                    <svg
                      aria-hidden="true"
                      fill="currentColor"
                      height="1em"
                      role="img"
                      style="vertical-align: -0.125em;"
                      viewBox="0 0 192 512"
                      width="1em"
                    >
                      <path
                        d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                        transform=""
                      />
                    </svg>
                  </button>
                  <ul
                    aria-labelledby="pf-toggle-id-5"
                    class="pf-c-dropdown__menu"
                    role="menu"
                  >
                    <li
                      role="menuitem"
                    >
                      <button
                        class="pf-c-dropdown__menu-item"
                        tabindex="-1"
                        type="button"
                      >
                        Collapse all CVEs
                      </button>
                    </li>
                  </ul>
                </div>,
              }
            }
          >
            <Toggle
              aria-haspopup={true}
              aria-label="Actions"
              bubbleEvent={false}
              className=""
              getMenuRef={[Function]}
              id="pf-toggle-id-5"
              isActive={false}
              isDisabled={false}
              isOpen={true}
              isPlain={true}
              isPrimary={false}
              isSplitButton={false}
              onEnter={[Function]}
              onToggle={[Function]}
              parentRef={
                Object {
                  "current": <div
                    class="pf-c-dropdown pf-m-expanded"
                    data-ouia-component-id="5"
                    data-ouia-component-type="PF4/Dropdown"
                    data-ouia-safe="true"
                  >
                    <button
                      aria-expanded="true"
                      aria-haspopup="true"
                      aria-label="Actions"
                      class="pf-c-dropdown__toggle pf-m-plain"
                      id="pf-toggle-id-5"
                      type="button"
                    >
                      <svg
                        aria-hidden="true"
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style="vertical-align: -0.125em;"
                        viewBox="0 0 192 512"
                        width="1em"
                      >
                        <path
                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                          transform=""
                        />
                      </svg>
                    </button>
                    <ul
                      aria-labelledby="pf-toggle-id-5"
                      class="pf-c-dropdown__menu"
                      role="menu"
                    >
                      <li
                        role="menuitem"
                      >
                        <button
                          class="pf-c-dropdown__menu-item"
                          tabindex="-1"
                          type="button"
                        >
                          Collapse all CVEs
                        </button>
                      </li>
                    </ul>
                  </div>,
                }
              }
            >
              <button
                aria-expanded={true}
                aria-haspopup={true}
                aria-label="Actions"
                className="pf-c-dropdown__toggle pf-m-plain"
                disabled={false}
                id="pf-toggle-id-5"
                onClick={[Function]}
                onKeyDown={[Function]}
                type="button"
              >
                <EllipsisVIcon
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                >
                  <svg
                    aria-hidden={true}
                    aria-labelledby={null}
                    fill="currentColor"
                    height="1em"
                    role="img"
                    style={
                      Object {
                        "verticalAlign": "-0.125em",
                      }
                    }
                    viewBox="0 0 192 512"
                    width="1em"
                  >
                    <path
                      d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                      transform=""
                    />
                  </svg>
                </EllipsisVIcon>
              </button>
            </Toggle>
          </Component>
          <DropdownMenu
            aria-labelledby="pf-toggle-id-5"
            autoFocus={false}
            className=""
            component="ul"
            isGrouped={false}
            isOpen={true}
            openedOnEnter={false}
            position="left"
            setMenuComponentRef={[Function]}
          >
            <ul
              aria-labelledby="pf-toggle-id-5"
              autoFocus={false}
              className="pf-c-dropdown__menu"
              hidden={false}
              role="menu"
            >
              <Component
                component="button"
                index={0}
                key=".$toggleCveDescription"
                onClick={[Function]}
              >
                <InternalDropdownItem
                  className=""
                  component="button"
                  context={
                    Object {
                      "keyHandler": [Function],
                      "sendRef": [Function],
                    }
                  }
                  enterTriggersArrowDown={false}
                  icon={null}
                  index={0}
                  isDisabled={false}
                  isHovered={false}
                  isPlainText={false}
                  onClick={[Function]}
                  role="menuitem"
                  tabIndex={-1}
                  tooltipProps={Object {}}
                >
                  <li
                    className={null}
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    role="menuitem"
                  >
                    <button
                      className="pf-c-dropdown__menu-item"
                      disabled={false}
                      tabIndex={-1}
                      type="button"
                    >
                      <FormattedMessage
                        defaultMessage="Collapse all CVEs"
                        id="kebab.collapseCves"
                        values={Object {}}
                      >
                        Collapse all CVEs
                      </FormattedMessage>
                    </button>
                  </li>
                </InternalDropdownItem>
              </Component>
            </ul>
          </DropdownMenu>
        </div>
      </DropdownWithContext>
    </Component>
  </div>
</BaseKebab>
`;

exports[`KebabItems component should render with hide systems 1`] = `
<BaseKebab
  dropdownItems={
    Array [
      <Unknown
        component="button"
        onClick={[Function]}
      >
        <FormattedMessage
          defaultMessage="Hide systems excluded from vulnerability analysis"
          id="kebab.hideExcludedSystems"
          values={Object {}}
        />
      </Unknown>,
    ]
  }
>
  <div>
    <Component
      dropdownItems={
        Array [
          <Unknown
            component="button"
            onClick={[Function]}
          >
            <FormattedMessage
              defaultMessage="Hide systems excluded from vulnerability analysis"
              id="kebab.hideExcludedSystems"
              values={Object {}}
            />
          </Unknown>,
        ]
      }
      isOpen={true}
      isPlain={true}
      onSelect={[Function]}
      toggle={
        <Unknown
          onToggle={[Function]}
        />
      }
    >
      <DropdownWithContext
        autoFocus={true}
        className=""
        direction="down"
        dropdownItems={
          Array [
            <Unknown
              component="button"
              onClick={[Function]}
            >
              <FormattedMessage
                defaultMessage="Hide systems excluded from vulnerability analysis"
                id="kebab.hideExcludedSystems"
                values={Object {}}
              />
            </Unknown>,
          ]
        }
        isGrouped={false}
        isOpen={true}
        isPlain={true}
        menuAppendTo="inline"
        onSelect={[Function]}
        ouiaComponentType="Dropdown"
        position="left"
        toggle={
          <Unknown
            onToggle={[Function]}
          />
        }
      >
        <div
          className="pf-c-dropdown pf-m-expanded"
          data-ouia-component-id={11}
          data-ouia-component-type="PF4/Dropdown"
          data-ouia-safe={true}
        >
          <Component
            aria-haspopup={true}
            getMenuRef={[Function]}
            id="pf-toggle-id-11"
            isOpen={true}
            isPlain={true}
            key=".0"
            onEnter={[Function]}
            onToggle={[Function]}
            parentRef={
              Object {
                "current": <div
                  class="pf-c-dropdown pf-m-expanded"
                  data-ouia-component-id="11"
                  data-ouia-component-type="PF4/Dropdown"
                  data-ouia-safe="true"
                >
                  <button
                    aria-expanded="true"
                    aria-haspopup="true"
                    aria-label="Actions"
                    class="pf-c-dropdown__toggle pf-m-plain"
                    id="pf-toggle-id-11"
                    type="button"
                  >
                    <svg
                      aria-hidden="true"
                      fill="currentColor"
                      height="1em"
                      role="img"
                      style="vertical-align: -0.125em;"
                      viewBox="0 0 192 512"
                      width="1em"
                    >
                      <path
                        d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                        transform=""
                      />
                    </svg>
                  </button>
                  <ul
                    aria-labelledby="pf-toggle-id-11"
                    class="pf-c-dropdown__menu"
                    role="menu"
                  >
                    <li
                      role="menuitem"
                    >
                      <button
                        class="pf-c-dropdown__menu-item"
                        tabindex="-1"
                        type="button"
                      >
                        Hide systems excluded from vulnerability analysis
                      </button>
                    </li>
                  </ul>
                </div>,
              }
            }
          >
            <Toggle
              aria-haspopup={true}
              aria-label="Actions"
              bubbleEvent={false}
              className=""
              getMenuRef={[Function]}
              id="pf-toggle-id-11"
              isActive={false}
              isDisabled={false}
              isOpen={true}
              isPlain={true}
              isPrimary={false}
              isSplitButton={false}
              onEnter={[Function]}
              onToggle={[Function]}
              parentRef={
                Object {
                  "current": <div
                    class="pf-c-dropdown pf-m-expanded"
                    data-ouia-component-id="11"
                    data-ouia-component-type="PF4/Dropdown"
                    data-ouia-safe="true"
                  >
                    <button
                      aria-expanded="true"
                      aria-haspopup="true"
                      aria-label="Actions"
                      class="pf-c-dropdown__toggle pf-m-plain"
                      id="pf-toggle-id-11"
                      type="button"
                    >
                      <svg
                        aria-hidden="true"
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style="vertical-align: -0.125em;"
                        viewBox="0 0 192 512"
                        width="1em"
                      >
                        <path
                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                          transform=""
                        />
                      </svg>
                    </button>
                    <ul
                      aria-labelledby="pf-toggle-id-11"
                      class="pf-c-dropdown__menu"
                      role="menu"
                    >
                      <li
                        role="menuitem"
                      >
                        <button
                          class="pf-c-dropdown__menu-item"
                          tabindex="-1"
                          type="button"
                        >
                          Hide systems excluded from vulnerability analysis
                        </button>
                      </li>
                    </ul>
                  </div>,
                }
              }
            >
              <button
                aria-expanded={true}
                aria-haspopup={true}
                aria-label="Actions"
                className="pf-c-dropdown__toggle pf-m-plain"
                disabled={false}
                id="pf-toggle-id-11"
                onClick={[Function]}
                onKeyDown={[Function]}
                type="button"
              >
                <EllipsisVIcon
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                >
                  <svg
                    aria-hidden={true}
                    aria-labelledby={null}
                    fill="currentColor"
                    height="1em"
                    role="img"
                    style={
                      Object {
                        "verticalAlign": "-0.125em",
                      }
                    }
                    viewBox="0 0 192 512"
                    width="1em"
                  >
                    <path
                      d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                      transform=""
                    />
                  </svg>
                </EllipsisVIcon>
              </button>
            </Toggle>
          </Component>
          <DropdownMenu
            aria-labelledby="pf-toggle-id-11"
            autoFocus={false}
            className=""
            component="ul"
            isGrouped={false}
            isOpen={true}
            openedOnEnter={false}
            position="left"
            setMenuComponentRef={[Function]}
          >
            <ul
              aria-labelledby="pf-toggle-id-11"
              autoFocus={false}
              className="pf-c-dropdown__menu"
              hidden={false}
              role="menu"
            >
              <Component
                component="button"
                index={0}
                key=".$toggle_opt_out"
                onClick={[Function]}
              >
                <InternalDropdownItem
                  className=""
                  component="button"
                  context={
                    Object {
                      "keyHandler": [Function],
                      "sendRef": [Function],
                    }
                  }
                  enterTriggersArrowDown={false}
                  icon={null}
                  index={0}
                  isDisabled={false}
                  isHovered={false}
                  isPlainText={false}
                  onClick={[Function]}
                  role="menuitem"
                  tabIndex={-1}
                  tooltipProps={Object {}}
                >
                  <li
                    className={null}
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    role="menuitem"
                  >
                    <button
                      className="pf-c-dropdown__menu-item"
                      disabled={false}
                      tabIndex={-1}
                      type="button"
                    >
                      <FormattedMessage
                        defaultMessage="Hide systems excluded from vulnerability analysis"
                        id="kebab.hideExcludedSystems"
                        values={Object {}}
                      >
                        Hide systems excluded from vulnerability analysis
                      </FormattedMessage>
                    </button>
                  </li>
                </InternalDropdownItem>
              </Component>
            </ul>
          </DropdownMenu>
        </div>
      </DropdownWithContext>
    </Component>
  </div>
</BaseKebab>
`;

exports[`KebabItems component should render with resume text 1`] = `
<BaseKebab
  dropdownItems={
    Array [
      <Unknown
        component="button"
        onClick={[Function]}
      >
        <FormattedMessage
          defaultMessage="Resume analysis for system"
          id="kebab.resumeAnalysis"
          values={Object {}}
        />
      </Unknown>,
      <Unknown
        component="button"
        onClick={[Function]}
      >
        <FormattedMessage
          defaultMessage="Resume analysis for system"
          id="kebab.resumeAnalysis"
          values={Object {}}
        />
      </Unknown>,
    ]
  }
>
  <div>
    <Component
      dropdownItems={
        Array [
          <Unknown
            component="button"
            onClick={[Function]}
          >
            <FormattedMessage
              defaultMessage="Resume analysis for system"
              id="kebab.resumeAnalysis"
              values={Object {}}
            />
          </Unknown>,
          <Unknown
            component="button"
            onClick={[Function]}
          >
            <FormattedMessage
              defaultMessage="Resume analysis for system"
              id="kebab.resumeAnalysis"
              values={Object {}}
            />
          </Unknown>,
        ]
      }
      isOpen={true}
      isPlain={true}
      onSelect={[Function]}
      toggle={
        <Unknown
          onToggle={[Function]}
        />
      }
    >
      <DropdownWithContext
        autoFocus={true}
        className=""
        direction="down"
        dropdownItems={
          Array [
            <Unknown
              component="button"
              onClick={[Function]}
            >
              <FormattedMessage
                defaultMessage="Resume analysis for system"
                id="kebab.resumeAnalysis"
                values={Object {}}
              />
            </Unknown>,
            <Unknown
              component="button"
              onClick={[Function]}
            >
              <FormattedMessage
                defaultMessage="Resume analysis for system"
                id="kebab.resumeAnalysis"
                values={Object {}}
              />
            </Unknown>,
          ]
        }
        isGrouped={false}
        isOpen={true}
        isPlain={true}
        menuAppendTo="inline"
        onSelect={[Function]}
        ouiaComponentType="Dropdown"
        position="left"
        toggle={
          <Unknown
            onToggle={[Function]}
          />
        }
      >
        <div
          className="pf-c-dropdown pf-m-expanded"
          data-ouia-component-id={8}
          data-ouia-component-type="PF4/Dropdown"
          data-ouia-safe={true}
        >
          <Component
            aria-haspopup={true}
            getMenuRef={[Function]}
            id="pf-toggle-id-8"
            isOpen={true}
            isPlain={true}
            key=".0"
            onEnter={[Function]}
            onToggle={[Function]}
            parentRef={
              Object {
                "current": <div
                  class="pf-c-dropdown pf-m-expanded"
                  data-ouia-component-id="8"
                  data-ouia-component-type="PF4/Dropdown"
                  data-ouia-safe="true"
                >
                  <button
                    aria-expanded="true"
                    aria-haspopup="true"
                    aria-label="Actions"
                    class="pf-c-dropdown__toggle pf-m-plain"
                    id="pf-toggle-id-8"
                    type="button"
                  >
                    <svg
                      aria-hidden="true"
                      fill="currentColor"
                      height="1em"
                      role="img"
                      style="vertical-align: -0.125em;"
                      viewBox="0 0 192 512"
                      width="1em"
                    >
                      <path
                        d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                        transform=""
                      />
                    </svg>
                  </button>
                  <ul
                    aria-labelledby="pf-toggle-id-8"
                    class="pf-c-dropdown__menu"
                    role="menu"
                  >
                    <li
                      role="menuitem"
                    >
                      <button
                        class="pf-c-dropdown__menu-item"
                        tabindex="-1"
                        type="button"
                      >
                        Resume analysis for system
                      </button>
                    </li>
                    <li
                      role="menuitem"
                    >
                      <button
                        class="pf-c-dropdown__menu-item"
                        tabindex="-1"
                        type="button"
                      >
                        Resume analysis for system
                      </button>
                    </li>
                  </ul>
                </div>,
              }
            }
          >
            <Toggle
              aria-haspopup={true}
              aria-label="Actions"
              bubbleEvent={false}
              className=""
              getMenuRef={[Function]}
              id="pf-toggle-id-8"
              isActive={false}
              isDisabled={false}
              isOpen={true}
              isPlain={true}
              isPrimary={false}
              isSplitButton={false}
              onEnter={[Function]}
              onToggle={[Function]}
              parentRef={
                Object {
                  "current": <div
                    class="pf-c-dropdown pf-m-expanded"
                    data-ouia-component-id="8"
                    data-ouia-component-type="PF4/Dropdown"
                    data-ouia-safe="true"
                  >
                    <button
                      aria-expanded="true"
                      aria-haspopup="true"
                      aria-label="Actions"
                      class="pf-c-dropdown__toggle pf-m-plain"
                      id="pf-toggle-id-8"
                      type="button"
                    >
                      <svg
                        aria-hidden="true"
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style="vertical-align: -0.125em;"
                        viewBox="0 0 192 512"
                        width="1em"
                      >
                        <path
                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                          transform=""
                        />
                      </svg>
                    </button>
                    <ul
                      aria-labelledby="pf-toggle-id-8"
                      class="pf-c-dropdown__menu"
                      role="menu"
                    >
                      <li
                        role="menuitem"
                      >
                        <button
                          class="pf-c-dropdown__menu-item"
                          tabindex="-1"
                          type="button"
                        >
                          Resume analysis for system
                        </button>
                      </li>
                      <li
                        role="menuitem"
                      >
                        <button
                          class="pf-c-dropdown__menu-item"
                          tabindex="-1"
                          type="button"
                        >
                          Resume analysis for system
                        </button>
                      </li>
                    </ul>
                  </div>,
                }
              }
            >
              <button
                aria-expanded={true}
                aria-haspopup={true}
                aria-label="Actions"
                className="pf-c-dropdown__toggle pf-m-plain"
                disabled={false}
                id="pf-toggle-id-8"
                onClick={[Function]}
                onKeyDown={[Function]}
                type="button"
              >
                <EllipsisVIcon
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                >
                  <svg
                    aria-hidden={true}
                    aria-labelledby={null}
                    fill="currentColor"
                    height="1em"
                    role="img"
                    style={
                      Object {
                        "verticalAlign": "-0.125em",
                      }
                    }
                    viewBox="0 0 192 512"
                    width="1em"
                  >
                    <path
                      d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                      transform=""
                    />
                  </svg>
                </EllipsisVIcon>
              </button>
            </Toggle>
          </Component>
          <DropdownMenu
            aria-labelledby="pf-toggle-id-8"
            autoFocus={false}
            className=""
            component="ul"
            isGrouped={false}
            isOpen={true}
            openedOnEnter={false}
            position="left"
            setMenuComponentRef={[Function]}
          >
            <ul
              aria-labelledby="pf-toggle-id-8"
              autoFocus={false}
              className="pf-c-dropdown__menu"
              hidden={false}
              role="menu"
            >
              <Component
                component="button"
                index={0}
                key=".$do_opt_out_analysis"
                onClick={[Function]}
              >
                <InternalDropdownItem
                  className=""
                  component="button"
                  context={
                    Object {
                      "keyHandler": [Function],
                      "sendRef": [Function],
                    }
                  }
                  enterTriggersArrowDown={false}
                  icon={null}
                  index={0}
                  isDisabled={false}
                  isHovered={false}
                  isPlainText={false}
                  onClick={[Function]}
                  role="menuitem"
                  tabIndex={-1}
                  tooltipProps={Object {}}
                >
                  <li
                    className={null}
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    role="menuitem"
                  >
                    <button
                      className="pf-c-dropdown__menu-item"
                      disabled={false}
                      tabIndex={-1}
                      type="button"
                    >
                      <FormattedMessage
                        defaultMessage="Resume analysis for system"
                        id="kebab.resumeAnalysis"
                        values={Object {}}
                      >
                        Resume analysis for system
                      </FormattedMessage>
                    </button>
                  </li>
                </InternalDropdownItem>
              </Component>
              <Component
                component="button"
                index={1}
                key=".$do_opt_out"
                onClick={[Function]}
              >
                <InternalDropdownItem
                  className=""
                  component="button"
                  context={
                    Object {
                      "keyHandler": [Function],
                      "sendRef": [Function],
                    }
                  }
                  enterTriggersArrowDown={false}
                  icon={null}
                  index={1}
                  isDisabled={false}
                  isHovered={false}
                  isPlainText={false}
                  onClick={[Function]}
                  role="menuitem"
                  tabIndex={-1}
                  tooltipProps={Object {}}
                >
                  <li
                    className={null}
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    role="menuitem"
                  >
                    <button
                      className="pf-c-dropdown__menu-item"
                      disabled={false}
                      tabIndex={-1}
                      type="button"
                    >
                      <FormattedMessage
                        defaultMessage="Resume analysis for system"
                        id="kebab.resumeAnalysis"
                        values={Object {}}
                      >
                        Resume analysis for system
                      </FormattedMessage>
                    </button>
                  </li>
                </InternalDropdownItem>
              </Component>
            </ul>
          </DropdownMenu>
        </div>
      </DropdownWithContext>
    </Component>
  </div>
</BaseKebab>
`;
