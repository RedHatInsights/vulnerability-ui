// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CSAW Rule summary should render compenent 1`] = `
<IntlProvider
  locale="en"
>
  <IntlProvider
    defaultFormats={Object {}}
    defaultLocale="en"
    formats={Object {}}
    locale="en"
    messages={
      Object {
        "default.cancel": "Cancel",
        "default.delete": "Delete",
        "default.remove": "Remove",
        "default.save": "Save",
      }
    }
    onError={[Function]}
    textComponent={Symbol(react.fragment)}
  >
    <injectIntl(CSAwRuleSummary)
      text="An issue was found in the manner in which certain x86 microprocessors manage thread memory access synchronization. It has been assigned [CVE-2019-11135](https://access.redhat.com/security/cve/CVE-2019-11135). Complete mitigations for this issue require microcode and kernel updates, and disabling hyperthreading where applicable.↵↵An unprivileged user can use this flaw to gain read access to privileged memory that would otherwise be inacessible, including from other virtual machines on the same host system.↵"
    >
      <CSAwRuleSummary
        intl={
          Object {
            "defaultFormats": Object {},
            "defaultLocale": "en",
            "formatDate": [Function],
            "formatDateToParts": [Function],
            "formatDisplayName": [Function],
            "formatHTMLMessage": [Function],
            "formatList": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatNumberToParts": [Function],
            "formatPlural": [Function],
            "formatRelativeTime": [Function],
            "formatTime": [Function],
            "formatTimeToParts": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getDisplayNames": [Function],
              "getListFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralRules": [Function],
              "getRelativeTimeFormat": [Function],
            },
            "locale": "en",
            "messages": Object {
              "default.cancel": "Cancel",
              "default.delete": "Delete",
              "default.remove": "Remove",
              "default.save": "Save",
            },
            "onError": [Function],
            "textComponent": Symbol(react.fragment),
            "timeZone": undefined,
          }
        }
        link={null}
        text="An issue was found in the manner in which certain x86 microprocessors manage thread memory access synchronization. It has been assigned [CVE-2019-11135](https://access.redhat.com/security/cve/CVE-2019-11135). Complete mitigations for this issue require microcode and kernel updates, and disabling hyperthreading where applicable.↵↵An unprivileged user can use this flaw to gain read access to privileged memory that would otherwise be inacessible, including from other virtual machines on the same host system.↵"
        truncate={true}
      >
        <TextContent>
          <div
            className="pf-c-content"
          >
            <Truncate
              collapseText="Read less"
              expandText="Read More"
              length={230}
              text="<p>An issue was found in the manner in which certain x86 microprocessors manage thread memory access synchronization. It has been assigned <a target='_blank' href=\\"https://access.redhat.com/security/cve/CVE-2019-11135\\">CVE-2019-11135</a>. Complete mitigations for this issue require microcode and kernel updates, and disabling hyperthreading where applicable.↵↵An unprivileged user can use this flaw to gain read access to privileged memory that would otherwise be inacessible, including from other virtual machines on the same host system.↵</p>
"
            >
              <Stack
                className="ins-c-truncate is-block"
              >
                <div
                  className="pf-l-stack ins-c-truncate is-block"
                >
                  <StackItem>
                    <div
                      className="pf-l-stack__item"
                    >
                      <span
                        dangerouslySetInnerHTML={
                          Object {
                            "__html": "<p>An issue was found in the manner in which certain x86 microprocessors manage thread memory access synchronization. It has been assigned <a target=\\"_blank\\" href=\\"https://access.redhat.com/security/cve/CVE-2019-11135\\">CVE-2019-11...</a></p>",
                          }
                        }
                        widget-type="InsightsTruncateBlock"
                      />
                    </div>
                  </StackItem>
                  <StackItem>
                    <div
                      className="pf-l-stack__item"
                    >
                      <Component
                        className="ins-c-expand-button"
                        onClick={[Function]}
                        variant="link"
                      >
                        <ComponentWithOuia
                          component={[Function]}
                          componentProps={
                            Object {
                              "children": "Read More",
                              "className": "ins-c-expand-button",
                              "onClick": [Function],
                              "variant": "link",
                            }
                          }
                          consumerContext={null}
                        >
                          <Button
                            className="ins-c-expand-button"
                            onClick={[Function]}
                            ouiaContext={
                              Object {
                                "isOuia": false,
                                "ouiaId": null,
                              }
                            }
                            variant="link"
                          >
                            <button
                              aria-disabled={null}
                              aria-label={null}
                              className="pf-c-button pf-m-link ins-c-expand-button"
                              disabled={false}
                              onClick={[Function]}
                              tabIndex={null}
                              type="button"
                            >
                              <span
                                className="pf-c-button__text"
                              >
                                Read More
                              </span>
                            </button>
                          </Button>
                        </ComponentWithOuia>
                      </Component>
                    </div>
                  </StackItem>
                </div>
              </Stack>
            </Truncate>
          </div>
        </TextContent>
      </CSAwRuleSummary>
    </injectIntl(CSAwRuleSummary)>
  </IntlProvider>
</IntlProvider>
`;
