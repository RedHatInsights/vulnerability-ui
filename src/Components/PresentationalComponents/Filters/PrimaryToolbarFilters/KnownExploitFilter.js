
import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';
import { KNOWN_EXPLOIT_FILTER_OPTIONS  } from '../../../../Helpers/constants';
import { intl } from '../../../../Utilities/IntlProvider';
import messages from '../../../../Messages';

const knownExploitFilter = (apply, currentFilter = {}) => {
    let { known_exploit: currentValue } = currentFilter;

    const filterByKnownExploit = values => {
        apply({
            known_exploit: values.filter(value => ['true', 'false'].includes(value)).join(',') || undefined,
            page: 1
        });
    };

    return {
        label: intl.formatMessage(messages.filterKnownExploit),
        type: conditionalFilterType.checkbox,
        filterValues: {
            onChange: (event, value) => {
                filterByKnownExploit(value);
            },
            items: KNOWN_EXPLOIT_FILTER_OPTIONS.map(item => ({ label: item.label, value: item.value })),
            value: currentValue
        }
    };
};

export default knownExploitFilter;
