import {
    authInterceptor,
    interceptor401,
    responseDataInterceptor
} from '@redhat-cloud-services/frontend-components-utilities/interceptors';
import axios from 'axios';

const instance = axios.create();

export function errorInterceptor(error) {
    if (!axios.isCancel(error)) {
        const errObject = { ...error };

        errObject?.response?.status === 503 && window.setReadOnlyBannerVisible?.(true);

        if (errObject?.response?.data?.errors) {
            let data = errObject.response.data.errors[0];

            if (typeof data.detail === 'object') {
                data.detail = data.detail.msg;
            }

            throw data;
        }

        throw error;
    }
}

const readOnlyBannerInterceptor = response => {
    // if has updated property, then it was a successful write request
    response.hasOwnProperty('updated') && window.setReadOnlyBannerVisible?.(false);
    return response;
};

instance.interceptors.request.use(authInterceptor);
instance.interceptors.response.use(responseDataInterceptor);
instance.interceptors.response.use(null, interceptor401);
instance.interceptors.response.use(readOnlyBannerInterceptor, errorInterceptor);

export default instance;
