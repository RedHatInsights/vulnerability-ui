// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SnippetWithPopover component should render with business risk 1`] = `
<SnippetWithPopover
  row={
    Object {
      "attributes": Object {
        "business_risk": "Not Defined",
        "business_risk_id": 0,
        "cve_status_id": 0,
        "description": "desc",
        "impact": "Moderate",
        "public_date": "2019-09-13T00:00:00+00:00",
        "status": "In review",
        "status_id": 1,
        "status_text": "justification",
        "synopsis": "CVE-2019-15031",
      },
      "id": "CVE-2019-15031",
      "type": "cve",
    }
  }
  type={0}
>
  <Popover
    appendTo={[Function]}
    aria-label="Business risk popover"
    bodyContent={
      <Unknown>
        <Unknown>
          <StyledText
            alignSelf={null}
            background={null}
            backgroundImage={null}
            backgroundPosition={null}
            backgroundRepeat={null}
            backgroundSize={null}
            bg={null}
            border={null}
            borderBottom={null}
            borderColor={null}
            borderLeft={null}
            borderRadius={null}
            borderRight={null}
            borderTop={null}
            bottom={null}
            boxShadow={null}
            className=""
            color={null}
            component="div"
            display={null}
            flex={null}
            flexBasis={null}
            fontFamily={null}
            fontSize={1}
            fontWeight="bold"
            height={null}
            left={null}
            letterSpacing={null}
            lineHeight="sm"
            m={null}
            maxHeight={null}
            maxWidth={null}
            mb={null}
            minHeight={null}
            minWidth={null}
            ml={null}
            mr={null}
            mt={null}
            mx={null}
            my={null}
            opacity={null}
            order={null}
            overflow={null}
            p={null}
            pb={null}
            pl={null}
            position={null}
            pr={null}
            pt={null}
            px={null}
            py={null}
            ratio={null}
            right={null}
            textAlign={null}
            top={null}
            verticalAlign={null}
            width={null}
            zIndex={null}
          >
            <FormattedMessage
              defaultMessage="Justification note"
              id="justificationNote"
              values={Object {}}
            />
          </StyledText>
          --
        </Unknown>
        <Unknown>
          <Unknown>
            <hr
              className="splitter pf-u-mb-md pf-u-mt-md"
            />
          </Unknown>
          <StyledText
            alignSelf={null}
            background={null}
            backgroundImage={null}
            backgroundPosition={null}
            backgroundRepeat={null}
            backgroundSize={null}
            bg={null}
            border={null}
            borderBottom={null}
            borderColor={null}
            borderLeft={null}
            borderRadius={null}
            borderRight={null}
            borderTop={null}
            bottom={null}
            boxShadow={null}
            className=""
            color={null}
            component="div"
            display={null}
            flex={null}
            flexBasis={null}
            fontFamily={null}
            fontSize={1}
            fontWeight="bold"
            height={null}
            left={null}
            letterSpacing={null}
            lineHeight="sm"
            m={null}
            maxHeight={null}
            maxWidth={null}
            mb={null}
            minHeight={null}
            minWidth={null}
            ml={null}
            mr={null}
            mt={null}
            mx={null}
            my={null}
            opacity={null}
            order={null}
            overflow={null}
            p={null}
            pb={null}
            pl={null}
            position={null}
            pr={null}
            pt={null}
            px={null}
            py={null}
            ratio={null}
            right={null}
            style={
              Object {
                "marginTop": "var(--pf-global--spacer--sm)",
              }
            }
            textAlign={null}
            top={null}
            verticalAlign={null}
            width={null}
            zIndex={null}
          >
            <FormattedMessage
              defaultMessage="CVE status"
              id="cveStatus"
              values={Object {}}
            />
          </StyledText>
        </Unknown>
        <Unknown>
          Not reviewed
        </Unknown>
      </Unknown>
    }
    boundary="window"
    className=""
    closeBtnAriaLabel="Close"
    distance={25}
    enableFlip={true}
    flipBehavior={
      Array [
        "top",
        "right",
        "bottom",
        "left",
        "top",
        "right",
        "bottom",
      ]
    }
    footerContent={null}
    headerContent={null}
    hideOnOutsideClick={true}
    isVisible={null}
    maxWidth="calc(1rem + 1rem + 18.75rem)"
    onHidden={[Function]}
    onHide={[Function]}
    onMount={[Function]}
    onShow={[Function]}
    onShown={[Function]}
    position="left"
    shouldClose={[Function]}
    tippyProps={Object {}}
    zIndex={9999}
  >
    <PopoverBase
      appendTo={[Function]}
      arrow={true}
      boundary="window"
      content={<React.Fragment />}
      distance={25}
      flip={true}
      flipBehavior={
        Array [
          "top",
          "right",
          "bottom",
          "left",
          "top",
          "right",
          "bottom",
        ]
      }
      hideOnClick={true}
      interactive={true}
      interactiveBorder={0}
      isVisible={null}
      lazy={true}
      maxWidth="calc(1rem + 1rem + 18.75rem)"
      onCreate={[Function]}
      onHidden={[Function]}
      onHide={[Function]}
      onMount={[Function]}
      onShow={[Function]}
      onShown={[Function]}
      placement="left"
      popperOptions={
        Object {
          "modifiers": Object {
            "hide": Object {
              "enabled": true,
            },
            "preventOverflow": Object {
              "enabled": true,
            },
          },
        }
      }
      theme="pf-popover"
      trigger="click"
      zIndex={9999}
    >
      <Component
        isDisabled={false}
        style={
          Object {
            "color": "",
            "maxWidth": "131px",
            "padding": "0px",
            "textAlign": "left",
            "whiteSpace": "unset",
            "wordBreak": "normal",
          }
        }
        variant="link"
      >
        <button
          aria-disabled={null}
          aria-label={null}
          className="pf-c-button pf-m-link"
          data-ouia-component-id={null}
          data-ouia-component-type="PF4/Button"
          data-ouia-safe={true}
          disabled={false}
          style={
            Object {
              "color": "",
              "maxWidth": "131px",
              "padding": "0px",
              "textAlign": "left",
              "whiteSpace": "unset",
              "wordBreak": "normal",
            }
          }
          tabIndex={null}
          type="button"
        >
          <Tooltip
            appendTo={[Function]}
            aria="describedby"
            boundary="window"
            className=""
            content={
              <FormattedMessage
                defaultMessage="Applies only to this specific system and CVE."
                id="cveHelper.onlyThisSystemCvePair"
                values={Object {}}
              />
            }
            distance={15}
            enableFlip={true}
            entryDelay={500}
            exitDelay={500}
            flipBehavior={
              Array [
                "top",
                "right",
                "bottom",
                "left",
                "top",
                "right",
                "bottom",
              ]
            }
            id=""
            isAppLauncher={false}
            isContentLeftAligned={false}
            isVisible={false}
            maxWidth="18.75rem"
            position="top"
            tippyProps={Object {}}
            trigger="mouseenter focus"
            zIndex={9999}
          >
            <PopoverBase
              appendTo={[Function]}
              aria="describedby"
              arrow={true}
              boundary="window"
              content={
                <div
                  className=""
                  id=""
                  role="tooltip"
                >
                  <Unknown
                    isLeftAligned={false}
                  >
                    <FormattedMessage
                      defaultMessage="Applies only to this specific system and CVE."
                      id="cveHelper.onlyThisSystemCvePair"
                      values={Object {}}
                    />
                  </Unknown>
                </div>
              }
              delay={
                Array [
                  500,
                  500,
                ]
              }
              distance={15}
              flip={true}
              flipBehavior={
                Array [
                  "top",
                  "right",
                  "bottom",
                  "left",
                  "top",
                  "right",
                  "bottom",
                ]
              }
              isVisible={false}
              lazy={true}
              maxWidth="18.75rem"
              onCreate={[Function]}
              placement="top"
              popperOptions={
                Object {
                  "modifiers": Object {
                    "hide": Object {
                      "enabled": true,
                    },
                    "preventOverflow": Object {
                      "enabled": true,
                    },
                  },
                }
              }
              theme="pf-tooltip"
              trigger="mouseenter focus"
              zIndex={9999}
            >
              <ServerAltIcon
                className="pf-u-m-l"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              >
                <svg
                  aria-hidden={true}
                  aria-labelledby={null}
                  className="pf-u-m-l"
                  fill="currentColor"
                  height="1em"
                  role="img"
                  style={
                    Object {
                      "verticalAlign": "-0.125em",
                    }
                  }
                  viewBox="0 64 1024 1024"
                  width="1em"
                >
                  <path
                    d="M986.057 145.828h-949.714c-9.829 0-18.286-3.429-25.6-10.743-7.086-7.086-10.743-15.771-10.743-25.6v-146.057c0-10.057 3.657-18.514 10.971-25.6 7.086-7.086 15.771-10.743 25.6-10.743h949.943c9.829 0 18.286 3.429 25.6 10.743 7.086 7.086 10.743 15.771 10.743 25.6v146.057c0 9.829-3.657 18.514-11.2 25.6-7.086 7.086-15.771 10.743-25.6 10.743zM949.714 0h-365.257v73.143h365.257v-73.143zM1011.886 719.771c-7.086 7.086-15.771 10.743-25.6 10.743h-949.714c-9.829 0-18.286-3.657-25.6-10.971-7.086-7.086-10.743-15.771-10.743-25.6v-146.057c0-9.829 3.429-18.286 10.743-25.6 7.086-7.086 15.771-10.743 25.6-10.743h949.943c9.829 0 18.286 3.429 25.6 10.743 7.086 7.086 10.743 15.771 10.743 25.6v146.057c0 9.829-3.657 18.286-10.971 25.829zM949.714 584.228h-219.2v73.143h219.2v-73.143zM986.286 437.943h-949.714c-9.829 0-18.286-3.429-25.6-10.743-7.086-7.086-10.743-15.771-10.743-25.6v-146.057c0-9.829 3.429-18.286 10.743-25.6 7.086-7.086 15.771-10.743 25.6-10.743h949.943c9.829 0 18.286 3.429 25.6 10.743 7.086 7.086 10.743 15.771 10.743 25.6v146.057c0 10.057-3.657 18.514-10.971 25.6-7.086 7.086-15.771 10.743-25.6 10.743zM949.714 292.114h-584.457v73.143h584.457v-73.143zM33.6 767.314h956.114c33.829 0 41.143 29.943 24.686 46.4s-99.429 101.714-114.286 116.571-32 20.571-48 20.571c-6.629 0-126.629 0-265.371 0-49.6 0-101.257 0-150.629 0-138.743 0-258.743 0-265.371 0-16 0-33.143-5.714-48-20.571s-97.829-100.114-114.286-116.571-9.143-46.4 25.143-46.4z"
                    transform="rotate(180 0 512) scale(-1 1)"
                  />
                </svg>
              </ServerAltIcon>
              <Portal
                containerInfo={
                  <div>
                    <div
                      class=""
                      id=""
                      role="tooltip"
                    >
                      <div
                        class="pf-c-tooltip__content"
                      >
                        Applies only to this specific system and CVE.
                      </div>
                    </div>
                  </div>
                }
              >
                <div
                  className=""
                  id=""
                  role="tooltip"
                >
                  <Component
                    isLeftAligned={false}
                  >
                    <div
                      className="pf-c-tooltip__content"
                    >
                      <FormattedMessage
                        defaultMessage="Applies only to this specific system and CVE."
                        id="cveHelper.onlyThisSystemCvePair"
                        values={Object {}}
                      >
                        Applies only to this specific system and CVE.
                      </FormattedMessage>
                    </div>
                  </Component>
                </div>
              </Portal>
            </PopoverBase>
          </Tooltip>
           
          In review
        </button>
      </Component>
      <Portal
        containerInfo={<div />}
      />
    </PopoverBase>
  </Popover>
</SnippetWithPopover>
`;

exports[`SnippetWithPopover component should render with default status 1`] = `
<SnippetWithPopover
  row={
    Object {
      "attributes": Object {
        "business_risk": "Not Defined",
        "business_risk_id": 0,
        "cve_status_id": 0,
        "description": "desc",
        "impact": "Moderate",
        "public_date": "2019-09-13T00:00:00+00:00",
        "status": "Not reviewed",
        "status_id": 0,
        "status_text": null,
        "synopsis": "CVE-2019-15031",
      },
      "id": "CVE-2019-15031",
      "type": "cve",
    }
  }
  type={1}
>
  <Popover
    appendTo={[Function]}
    aria-label="Business risk popover"
    bodyContent={
      <Unknown>
        <Unknown>
          <StyledText
            alignSelf={null}
            background={null}
            backgroundImage={null}
            backgroundPosition={null}
            backgroundRepeat={null}
            backgroundSize={null}
            bg={null}
            border={null}
            borderBottom={null}
            borderColor={null}
            borderLeft={null}
            borderRadius={null}
            borderRight={null}
            borderTop={null}
            bottom={null}
            boxShadow={null}
            className=""
            color={null}
            component="div"
            display={null}
            flex={null}
            flexBasis={null}
            fontFamily={null}
            fontSize={1}
            fontWeight="bold"
            height={null}
            left={null}
            letterSpacing={null}
            lineHeight="sm"
            m={null}
            maxHeight={null}
            maxWidth={null}
            mb={null}
            minHeight={null}
            minWidth={null}
            ml={null}
            mr={null}
            mt={null}
            mx={null}
            my={null}
            opacity={null}
            order={null}
            overflow={null}
            p={null}
            pb={null}
            pl={null}
            position={null}
            pr={null}
            pt={null}
            px={null}
            py={null}
            ratio={null}
            right={null}
            textAlign={null}
            top={null}
            verticalAlign={null}
            width={null}
            zIndex={null}
          >
            <FormattedMessage
              defaultMessage="CVE-system pair status"
              id="cveSystemPairStatus"
              values={Object {}}
            />
          </StyledText>
          Not reviewed
          <StyledText
            alignSelf={null}
            background={null}
            backgroundImage={null}
            backgroundPosition={null}
            backgroundRepeat={null}
            backgroundSize={null}
            bg={null}
            border={null}
            borderBottom={null}
            borderColor={null}
            borderLeft={null}
            borderRadius={null}
            borderRight={null}
            borderTop={null}
            bottom={null}
            boxShadow={null}
            className=""
            color={null}
            component="div"
            display={null}
            flex={null}
            flexBasis={null}
            fontFamily={null}
            fontSize={1}
            fontWeight="bold"
            height={null}
            left={null}
            letterSpacing={null}
            lineHeight="sm"
            m={null}
            maxHeight={null}
            maxWidth={null}
            mb={null}
            minHeight={null}
            minWidth={null}
            ml={null}
            mr={null}
            mt={null}
            mx={null}
            my={null}
            opacity={null}
            order={null}
            overflow={null}
            p={null}
            pb={null}
            pl={null}
            position={null}
            pr={null}
            pt={null}
            px={null}
            py={null}
            ratio={null}
            right={null}
            style={
              Object {
                "marginTop": "var(--pf-global--spacer--sm)",
              }
            }
            textAlign={null}
            top={null}
            verticalAlign={null}
            width={null}
            zIndex={null}
          >
            <FormattedMessage
              defaultMessage="Justification note"
              id="justificationNote"
              values={Object {}}
            />
          </StyledText>
          --
        </Unknown>
        <Unknown>
          <Unknown>
            <hr
              className="splitter pf-u-mb-md pf-u-mt-md"
            />
          </Unknown>
          <StyledText
            alignSelf={null}
            background={null}
            backgroundImage={null}
            backgroundPosition={null}
            backgroundRepeat={null}
            backgroundSize={null}
            bg={null}
            border={null}
            borderBottom={null}
            borderColor={null}
            borderLeft={null}
            borderRadius={null}
            borderRight={null}
            borderTop={null}
            bottom={null}
            boxShadow={null}
            className=""
            color={null}
            component="div"
            display={null}
            flex={null}
            flexBasis={null}
            fontFamily={null}
            fontSize={1}
            fontWeight="bold"
            height={null}
            left={null}
            letterSpacing={null}
            lineHeight="sm"
            m={null}
            maxHeight={null}
            maxWidth={null}
            mb={null}
            minHeight={null}
            minWidth={null}
            ml={null}
            mr={null}
            mt={null}
            mx={null}
            my={null}
            opacity={null}
            order={null}
            overflow={null}
            p={null}
            pb={null}
            pl={null}
            position={null}
            pr={null}
            pt={null}
            px={null}
            py={null}
            ratio={null}
            right={null}
            style={
              Object {
                "marginTop": "var(--pf-global--spacer--sm)",
              }
            }
            textAlign={null}
            top={null}
            verticalAlign={null}
            width={null}
            zIndex={null}
          >
            <FormattedMessage
              defaultMessage="CVE status"
              id="cveStatus"
              values={Object {}}
            />
          </StyledText>
        </Unknown>
        <Unknown>
          Not reviewed
        </Unknown>
      </Unknown>
    }
    boundary="window"
    className=""
    closeBtnAriaLabel="Close"
    distance={25}
    enableFlip={true}
    flipBehavior={
      Array [
        "top",
        "right",
        "bottom",
        "left",
        "top",
        "right",
        "bottom",
      ]
    }
    footerContent={null}
    headerContent={null}
    hideOnOutsideClick={true}
    isVisible={null}
    maxWidth="calc(1rem + 1rem + 18.75rem)"
    onHidden={[Function]}
    onHide={[Function]}
    onMount={[Function]}
    onShow={[Function]}
    onShown={[Function]}
    position="left"
    shouldClose={[Function]}
    tippyProps={Object {}}
    zIndex={9999}
  >
    <PopoverBase
      appendTo={[Function]}
      arrow={true}
      boundary="window"
      content={<React.Fragment />}
      distance={25}
      flip={true}
      flipBehavior={
        Array [
          "top",
          "right",
          "bottom",
          "left",
          "top",
          "right",
          "bottom",
        ]
      }
      hideOnClick={true}
      interactive={true}
      interactiveBorder={0}
      isVisible={null}
      lazy={true}
      maxWidth="calc(1rem + 1rem + 18.75rem)"
      onCreate={[Function]}
      onHidden={[Function]}
      onHide={[Function]}
      onMount={[Function]}
      onShow={[Function]}
      onShown={[Function]}
      placement="left"
      popperOptions={
        Object {
          "modifiers": Object {
            "hide": Object {
              "enabled": true,
            },
            "preventOverflow": Object {
              "enabled": true,
            },
          },
        }
      }
      theme="pf-popover"
      trigger="click"
      zIndex={9999}
    >
      <Component
        isDisabled={true}
        style={
          Object {
            "color": "black",
            "maxWidth": "131px",
            "padding": "0px",
            "textAlign": "left",
            "whiteSpace": "unset",
            "wordBreak": "normal",
          }
        }
        variant="link"
      >
        <button
          aria-disabled={null}
          aria-label={null}
          className="pf-c-button pf-m-link"
          data-ouia-component-id={null}
          data-ouia-component-type="PF4/Button"
          data-ouia-safe={true}
          disabled={true}
          style={
            Object {
              "color": "black",
              "maxWidth": "131px",
              "padding": "0px",
              "textAlign": "left",
              "whiteSpace": "unset",
              "wordBreak": "normal",
            }
          }
          tabIndex={null}
          type="button"
        >
           
          Not reviewed
        </button>
      </Component>
      <Portal
        containerInfo={<div />}
      />
    </PopoverBase>
  </Popover>
</SnippetWithPopover>
`;

exports[`SnippetWithPopover component should render with non-default status and -- in place of missing or invalid data 1`] = `
<SnippetWithPopover
  row={
    Object {
      "attributes": Object {
        "business_risk": "Not Defined",
        "business_risk_id": 0,
        "cve_status_id": 20,
        "description": "desc",
        "impact": "Moderate",
        "public_date": "2019-09-13T00:00:00+00:00",
        "status": null,
        "status_id": 1,
        "status_text": null,
        "synopsis": "CVE-2019-15031",
      },
      "id": "CVE-2019-15031",
      "type": "cve",
    }
  }
  type={1}
>
  <Popover
    appendTo={[Function]}
    aria-label="Business risk popover"
    bodyContent={
      <Unknown>
        <Unknown>
          <StyledText
            alignSelf={null}
            background={null}
            backgroundImage={null}
            backgroundPosition={null}
            backgroundRepeat={null}
            backgroundSize={null}
            bg={null}
            border={null}
            borderBottom={null}
            borderColor={null}
            borderLeft={null}
            borderRadius={null}
            borderRight={null}
            borderTop={null}
            bottom={null}
            boxShadow={null}
            className=""
            color={null}
            component="div"
            display={null}
            flex={null}
            flexBasis={null}
            fontFamily={null}
            fontSize={1}
            fontWeight="bold"
            height={null}
            left={null}
            letterSpacing={null}
            lineHeight="sm"
            m={null}
            maxHeight={null}
            maxWidth={null}
            mb={null}
            minHeight={null}
            minWidth={null}
            ml={null}
            mr={null}
            mt={null}
            mx={null}
            my={null}
            opacity={null}
            order={null}
            overflow={null}
            p={null}
            pb={null}
            pl={null}
            position={null}
            pr={null}
            pt={null}
            px={null}
            py={null}
            ratio={null}
            right={null}
            textAlign={null}
            top={null}
            verticalAlign={null}
            width={null}
            zIndex={null}
          >
            <FormattedMessage
              defaultMessage="CVE-system pair status"
              id="cveSystemPairStatus"
              values={Object {}}
            />
          </StyledText>
          In review
          <StyledText
            alignSelf={null}
            background={null}
            backgroundImage={null}
            backgroundPosition={null}
            backgroundRepeat={null}
            backgroundSize={null}
            bg={null}
            border={null}
            borderBottom={null}
            borderColor={null}
            borderLeft={null}
            borderRadius={null}
            borderRight={null}
            borderTop={null}
            bottom={null}
            boxShadow={null}
            className=""
            color={null}
            component="div"
            display={null}
            flex={null}
            flexBasis={null}
            fontFamily={null}
            fontSize={1}
            fontWeight="bold"
            height={null}
            left={null}
            letterSpacing={null}
            lineHeight="sm"
            m={null}
            maxHeight={null}
            maxWidth={null}
            mb={null}
            minHeight={null}
            minWidth={null}
            ml={null}
            mr={null}
            mt={null}
            mx={null}
            my={null}
            opacity={null}
            order={null}
            overflow={null}
            p={null}
            pb={null}
            pl={null}
            position={null}
            pr={null}
            pt={null}
            px={null}
            py={null}
            ratio={null}
            right={null}
            style={
              Object {
                "marginTop": "var(--pf-global--spacer--sm)",
              }
            }
            textAlign={null}
            top={null}
            verticalAlign={null}
            width={null}
            zIndex={null}
          >
            <FormattedMessage
              defaultMessage="Justification note"
              id="justificationNote"
              values={Object {}}
            />
          </StyledText>
          --
        </Unknown>
        <Unknown>
          <Unknown>
            <hr
              className="splitter pf-u-mb-md pf-u-mt-md"
            />
          </Unknown>
          <StyledText
            alignSelf={null}
            background={null}
            backgroundImage={null}
            backgroundPosition={null}
            backgroundRepeat={null}
            backgroundSize={null}
            bg={null}
            border={null}
            borderBottom={null}
            borderColor={null}
            borderLeft={null}
            borderRadius={null}
            borderRight={null}
            borderTop={null}
            bottom={null}
            boxShadow={null}
            className=""
            color={null}
            component="div"
            display={null}
            flex={null}
            flexBasis={null}
            fontFamily={null}
            fontSize={1}
            fontWeight="bold"
            height={null}
            left={null}
            letterSpacing={null}
            lineHeight="sm"
            m={null}
            maxHeight={null}
            maxWidth={null}
            mb={null}
            minHeight={null}
            minWidth={null}
            ml={null}
            mr={null}
            mt={null}
            mx={null}
            my={null}
            opacity={null}
            order={null}
            overflow={null}
            p={null}
            pb={null}
            pl={null}
            position={null}
            pr={null}
            pt={null}
            px={null}
            py={null}
            ratio={null}
            right={null}
            style={
              Object {
                "marginTop": "var(--pf-global--spacer--sm)",
              }
            }
            textAlign={null}
            top={null}
            verticalAlign={null}
            width={null}
            zIndex={null}
          >
            <FormattedMessage
              defaultMessage="CVE status"
              id="cveStatus"
              values={Object {}}
            />
          </StyledText>
        </Unknown>
        <Unknown>
          --
        </Unknown>
      </Unknown>
    }
    boundary="window"
    className=""
    closeBtnAriaLabel="Close"
    distance={25}
    enableFlip={true}
    flipBehavior={
      Array [
        "top",
        "right",
        "bottom",
        "left",
        "top",
        "right",
        "bottom",
      ]
    }
    footerContent={null}
    headerContent={null}
    hideOnOutsideClick={true}
    isVisible={null}
    maxWidth="calc(1rem + 1rem + 18.75rem)"
    onHidden={[Function]}
    onHide={[Function]}
    onMount={[Function]}
    onShow={[Function]}
    onShown={[Function]}
    position="left"
    shouldClose={[Function]}
    tippyProps={Object {}}
    zIndex={9999}
  >
    <PopoverBase
      appendTo={[Function]}
      arrow={true}
      boundary="window"
      content={<React.Fragment />}
      distance={25}
      flip={true}
      flipBehavior={
        Array [
          "top",
          "right",
          "bottom",
          "left",
          "top",
          "right",
          "bottom",
        ]
      }
      hideOnClick={true}
      interactive={true}
      interactiveBorder={0}
      isVisible={null}
      lazy={true}
      maxWidth="calc(1rem + 1rem + 18.75rem)"
      onCreate={[Function]}
      onHidden={[Function]}
      onHide={[Function]}
      onMount={[Function]}
      onShow={[Function]}
      onShown={[Function]}
      placement="left"
      popperOptions={
        Object {
          "modifiers": Object {
            "hide": Object {
              "enabled": true,
            },
            "preventOverflow": Object {
              "enabled": true,
            },
          },
        }
      }
      theme="pf-popover"
      trigger="click"
      zIndex={9999}
    >
      <Component
        isDisabled={false}
        style={
          Object {
            "color": "",
            "maxWidth": "131px",
            "padding": "0px",
            "textAlign": "left",
            "whiteSpace": "unset",
            "wordBreak": "normal",
          }
        }
        variant="link"
      >
        <button
          aria-disabled={null}
          aria-label={null}
          className="pf-c-button pf-m-link"
          data-ouia-component-id={null}
          data-ouia-component-type="PF4/Button"
          data-ouia-safe={true}
          disabled={false}
          style={
            Object {
              "color": "",
              "maxWidth": "131px",
              "padding": "0px",
              "textAlign": "left",
              "whiteSpace": "unset",
              "wordBreak": "normal",
            }
          }
          tabIndex={null}
          type="button"
        >
          <Tooltip
            appendTo={[Function]}
            aria="describedby"
            boundary="window"
            className=""
            content={
              <FormattedMessage
                defaultMessage="Applies only to this specific system and CVE."
                id="cveHelper.onlyThisSystemCvePair"
                values={Object {}}
              />
            }
            distance={15}
            enableFlip={true}
            entryDelay={500}
            exitDelay={500}
            flipBehavior={
              Array [
                "top",
                "right",
                "bottom",
                "left",
                "top",
                "right",
                "bottom",
              ]
            }
            id=""
            isAppLauncher={false}
            isContentLeftAligned={false}
            isVisible={false}
            maxWidth="18.75rem"
            position="top"
            tippyProps={Object {}}
            trigger="mouseenter focus"
            zIndex={9999}
          >
            <PopoverBase
              appendTo={[Function]}
              aria="describedby"
              arrow={true}
              boundary="window"
              content={
                <div
                  className=""
                  id=""
                  role="tooltip"
                >
                  <Unknown
                    isLeftAligned={false}
                  >
                    <FormattedMessage
                      defaultMessage="Applies only to this specific system and CVE."
                      id="cveHelper.onlyThisSystemCvePair"
                      values={Object {}}
                    />
                  </Unknown>
                </div>
              }
              delay={
                Array [
                  500,
                  500,
                ]
              }
              distance={15}
              flip={true}
              flipBehavior={
                Array [
                  "top",
                  "right",
                  "bottom",
                  "left",
                  "top",
                  "right",
                  "bottom",
                ]
              }
              isVisible={false}
              lazy={true}
              maxWidth="18.75rem"
              onCreate={[Function]}
              placement="top"
              popperOptions={
                Object {
                  "modifiers": Object {
                    "hide": Object {
                      "enabled": true,
                    },
                    "preventOverflow": Object {
                      "enabled": true,
                    },
                  },
                }
              }
              theme="pf-tooltip"
              trigger="mouseenter focus"
              zIndex={9999}
            >
              <ServerAltIcon
                className="pf-u-m-l"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
              >
                <svg
                  aria-hidden={true}
                  aria-labelledby={null}
                  className="pf-u-m-l"
                  fill="currentColor"
                  height="1em"
                  role="img"
                  style={
                    Object {
                      "verticalAlign": "-0.125em",
                    }
                  }
                  viewBox="0 64 1024 1024"
                  width="1em"
                >
                  <path
                    d="M986.057 145.828h-949.714c-9.829 0-18.286-3.429-25.6-10.743-7.086-7.086-10.743-15.771-10.743-25.6v-146.057c0-10.057 3.657-18.514 10.971-25.6 7.086-7.086 15.771-10.743 25.6-10.743h949.943c9.829 0 18.286 3.429 25.6 10.743 7.086 7.086 10.743 15.771 10.743 25.6v146.057c0 9.829-3.657 18.514-11.2 25.6-7.086 7.086-15.771 10.743-25.6 10.743zM949.714 0h-365.257v73.143h365.257v-73.143zM1011.886 719.771c-7.086 7.086-15.771 10.743-25.6 10.743h-949.714c-9.829 0-18.286-3.657-25.6-10.971-7.086-7.086-10.743-15.771-10.743-25.6v-146.057c0-9.829 3.429-18.286 10.743-25.6 7.086-7.086 15.771-10.743 25.6-10.743h949.943c9.829 0 18.286 3.429 25.6 10.743 7.086 7.086 10.743 15.771 10.743 25.6v146.057c0 9.829-3.657 18.286-10.971 25.829zM949.714 584.228h-219.2v73.143h219.2v-73.143zM986.286 437.943h-949.714c-9.829 0-18.286-3.429-25.6-10.743-7.086-7.086-10.743-15.771-10.743-25.6v-146.057c0-9.829 3.429-18.286 10.743-25.6 7.086-7.086 15.771-10.743 25.6-10.743h949.943c9.829 0 18.286 3.429 25.6 10.743 7.086 7.086 10.743 15.771 10.743 25.6v146.057c0 10.057-3.657 18.514-10.971 25.6-7.086 7.086-15.771 10.743-25.6 10.743zM949.714 292.114h-584.457v73.143h584.457v-73.143zM33.6 767.314h956.114c33.829 0 41.143 29.943 24.686 46.4s-99.429 101.714-114.286 116.571-32 20.571-48 20.571c-6.629 0-126.629 0-265.371 0-49.6 0-101.257 0-150.629 0-138.743 0-258.743 0-265.371 0-16 0-33.143-5.714-48-20.571s-97.829-100.114-114.286-116.571-9.143-46.4 25.143-46.4z"
                    transform="rotate(180 0 512) scale(-1 1)"
                  />
                </svg>
              </ServerAltIcon>
              <Portal
                containerInfo={
                  <div>
                    <div
                      class=""
                      id=""
                      role="tooltip"
                    >
                      <div
                        class="pf-c-tooltip__content"
                      >
                        Applies only to this specific system and CVE.
                      </div>
                    </div>
                  </div>
                }
              >
                <div
                  className=""
                  id=""
                  role="tooltip"
                >
                  <Component
                    isLeftAligned={false}
                  >
                    <div
                      className="pf-c-tooltip__content"
                    >
                      <FormattedMessage
                        defaultMessage="Applies only to this specific system and CVE."
                        id="cveHelper.onlyThisSystemCvePair"
                        values={Object {}}
                      >
                        Applies only to this specific system and CVE.
                      </FormattedMessage>
                    </div>
                  </Component>
                </div>
              </Portal>
            </PopoverBase>
          </Tooltip>
           
          In review
        </button>
      </Component>
      <Portal
        containerInfo={<div />}
      />
    </PopoverBase>
  </Popover>
</SnippetWithPopover>
`;
