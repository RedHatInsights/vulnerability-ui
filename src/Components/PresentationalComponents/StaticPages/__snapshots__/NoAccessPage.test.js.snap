// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NoAccessPage component Should match snapshot 1`] = `
<Provider
  store={
    {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      location={
        {
          "hash": "",
          "key": "default",
          "pathname": "/",
          "search": "",
          "state": null,
        }
      }
      navigationType="POP"
      navigator={
        {
          "action": "POP",
          "createHref": [Function],
          "createURL": [Function],
          "encodeLocation": [Function],
          "go": [Function],
          "listen": [Function],
          "location": {
            "hash": "",
            "key": "default",
            "pathname": "/",
            "search": "",
            "state": null,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <injectIntl(NoAccessPage)
        intl={
          {
            "$t": [Function],
            "defaultFormats": {},
            "defaultLocale": "en",
            "defaultRichTextElements": undefined,
            "fallbackOnEmptyString": true,
            "formatDate": [Function],
            "formatDateTimeRange": [Function],
            "formatDateToParts": [Function],
            "formatDisplayName": [Function],
            "formatList": [Function],
            "formatListToParts": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatNumberToParts": [Function],
            "formatPlural": [Function],
            "formatRelativeTime": [Function],
            "formatTime": [Function],
            "formatTimeToParts": [Function],
            "formats": {},
            "formatters": {
              "getDateTimeFormat": [Function],
              "getDisplayNames": [Function],
              "getListFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralRules": [Function],
              "getRelativeTimeFormat": [Function],
            },
            "locale": "en",
            "messages": {},
            "onError": [Function],
            "onWarn": [Function],
            "textComponent": Symbol(react.fragment),
            "timeZone": undefined,
          }
        }
      >
        <NoAccessPage
          intl={
            {
              "$t": [Function],
              "defaultFormats": {},
              "defaultLocale": "en",
              "defaultRichTextElements": undefined,
              "fallbackOnEmptyString": true,
              "formatDate": [Function],
              "formatDateTimeRange": [Function],
              "formatDateToParts": [Function],
              "formatDisplayName": [Function],
              "formatList": [Function],
              "formatListToParts": [Function],
              "formatMessage": [Function],
              "formatNumber": [Function],
              "formatNumberToParts": [Function],
              "formatPlural": [Function],
              "formatRelativeTime": [Function],
              "formatTime": [Function],
              "formatTimeToParts": [Function],
              "formats": {},
              "formatters": {
                "getDateTimeFormat": [Function],
                "getDisplayNames": [Function],
                "getListFormat": [Function],
                "getMessageFormat": [Function],
                "getNumberFormat": [Function],
                "getPluralRules": [Function],
                "getRelativeTimeFormat": [Function],
              },
              "locale": "en",
              "messages": {
                "default.cancel": "Cancel",
                "default.delete": "Delete",
                "default.remove": "Remove",
                "default.save": "Save",
              },
              "onError": [Function],
              "onWarn": [Function],
              "textComponent": Symbol(react.fragment),
              "timeZone": undefined,
              "wrapRichTextChunksInFragment": undefined,
            }
          }
        >
          <Header
            actions={[]}
            showBreadcrumb={false}
            title="Vulnerabilities"
          >
            <PageHeader>
              <section
                className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                widget-type="InsightsPageHeader"
              >
                <Split
                  hasGutter={true}
                  isWrappable={true}
                >
                  <div
                    className="pf-l-split pf-m-gutter pf-m-wrap"
                  >
                    <SplitItem>
                      <div
                        className="pf-l-split__item"
                      >
                        <PageHeaderTitle
                          title="Vulnerabilities"
                        >
                          <Title
                            className=""
                            headingLevel="h1"
                            size="2xl"
                            widget-type="InsightsPageHeaderTitle"
                          >
                            <h1
                              className="pf-c-title pf-m-2xl"
                              data-ouia-component-id="OUIA-Generated-Title-1"
                              data-ouia-component-type="PF4/Title"
                              data-ouia-safe={true}
                              widget-type="InsightsPageHeaderTitle"
                            >
                              Vulnerabilities
                            </h1>
                          </Title>
                        </PageHeaderTitle>
                      </div>
                    </SplitItem>
                    <SplitItem
                      key="0"
                    >
                      <div
                        className="pf-l-split__item"
                      />
                    </SplitItem>
                    <SplitItem
                      isFilled={true}
                    >
                      <div
                        className="pf-l-split__item pf-m-fill"
                      />
                    </SplitItem>
                  </div>
                </Split>
              </section>
            </PageHeader>
          </Header>
          <Main>
            <section
              className="pf-l-page__main-section pf-c-page__main-section"
            >
              <NotAuthorized>
                <NotAuthorized
                  description="Contact your organization administrator(s) for more information."
                  icon={[Function]}
                  prevPageButtonText="Return to previous page"
                  title="You do not have permissions to view or manage Vulnerability"
                  toLandingPageText="Go to landing page"
                >
                  <EmptyState
                    className="ins-c-not-authorized "
                    variant="full"
                  >
                    <div
                      className="pf-c-empty-state ins-c-not-authorized "
                    >
                      <div
                        className="pf-c-empty-state__content"
                      >
                        <EmptyStateIcon
                          icon={[Function]}
                        >
                          <LockIcon
                            aria-hidden="true"
                            className="pf-c-empty-state__icon"
                            color="currentColor"
                            noVerticalAlign={false}
                            size="sm"
                          >
                            <svg
                              aria-hidden="true"
                              aria-labelledby={null}
                              className="pf-c-empty-state__icon"
                              fill="currentColor"
                              height="1em"
                              role="img"
                              style={
                                {
                                  "verticalAlign": "-0.125em",
                                }
                              }
                              viewBox="0 0 448 512"
                              width="1em"
                            >
                              <path
                                d="M400 224h-24v-72C376 68.2 307.8 0 224 0S72 68.2 72 152v72H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zm-104 0H152v-72c0-39.7 32.3-72 72-72s72 32.3 72 72v72z"
                              />
                            </svg>
                          </LockIcon>
                        </EmptyStateIcon>
                        <Title
                          headingLevel="h5"
                          size="lg"
                        >
                          <h5
                            className="pf-c-title pf-m-lg"
                            data-ouia-component-id="OUIA-Generated-Title-2"
                            data-ouia-component-type="PF4/Title"
                            data-ouia-safe={true}
                          >
                            You do not have permissions to view or manage Vulnerability
                          </h5>
                        </Title>
                        <EmptyStateBody>
                          <div
                            className="pf-c-empty-state__body"
                          >
                            Contact your organization administrator(s) for more information.
                          </div>
                        </EmptyStateBody>
                        <Button
                          component="a"
                          href="."
                          variant="primary"
                        >
                          <ButtonBase
                            component="a"
                            href="."
                            innerRef={null}
                            variant="primary"
                          >
                            <a
                              aria-disabled={false}
                              aria-label={null}
                              className="pf-c-button pf-m-primary"
                              data-ouia-component-id="OUIA-Generated-Button-primary-1"
                              data-ouia-component-type="PF4/Button"
                              data-ouia-safe={true}
                              disabled={null}
                              href="."
                              role={null}
                              type={null}
                            >
                              Go to landing page
                            </a>
                          </ButtonBase>
                        </Button>
                      </div>
                    </div>
                  </EmptyState>
                </NotAuthorized>
              </NotAuthorized>
            </section>
          </Main>
        </NoAccessPage>
      </injectIntl(NoAccessPage)>
    </Router>
  </BrowserRouter>
</Provider>
`;
