import { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';
import { PageHeaderTitle } from '@red-hat-insights/insights-frontend-components';
import propTypes from 'prop-types';
import React from 'react';
import { connect } from 'react-redux';
import { Link, withRouter } from 'react-router-dom';
import { getHeader } from '../../../Helpers/HeaderHelper';

class VulnerabilityHeader extends React.Component {
    constructor(props) {
        super(props);
    }

    buildBreadcrumbs(breadcrumbs) {
        return (
            <Breadcrumb>
                {breadcrumbs.map(item => (
                    <BreadcrumbItem key={item.title} isActive={item.isActive}>
                        {(item.to && <Link to={item.to}>{item.title}</Link>) || item.title}
                    </BreadcrumbItem>
                ))}
            </Breadcrumb>
        );
    }

    render() {
        const { header } = this.props;
        const title = (header && header.title) || 'Vulnerability';
        const breadcrumbs = header && header.breadcrumbs;

        return (
            <React.Fragment>
                {breadcrumbs && breadcrumbs.length !== 0 && this.buildBreadcrumbs(breadcrumbs)}
                <PageHeaderTitle title={title} />
            </React.Fragment>
        );
    }
}

function mapStateToProps(state) {
    return {
        header: getHeader(state)
    };
}

VulnerabilityHeader.propTypes = {
    header: propTypes.any
};

export default withRouter(
    connect(
        mapStateToProps,
        null
    )(VulnerabilityHeader)
);
