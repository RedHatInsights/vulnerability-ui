import React, { useEffect, useState } from 'react';
import { useIntl } from 'react-intl';
import { Spinner, Text, TextContent, TextVariants } from '@patternfly/react-core';
import { useGetSingleDevice } from '../../../Helpers/APIHelper';
import messages from '../../../Messages';

const CVEDetailTableTitle = () => {
    const intl = useIntl();
    const [isLoading, setLoading] = useState(true);
    const [edgeDeviceExist, setEdgeDeviceExist] = useState(false);
    const [totalSystems, setTotalSystems] = useState(0);
    const getEdgeDevice = useGetSingleDevice();
    useEffect(() => {
        getEdgeDevice().then(edgeDevice => {
            setEdgeDeviceExist(edgeDevice?.count === 1);
            setTotalSystems(edgeDevice?.total || 0);
            setLoading(false);
        });
    }, []);

    return isLoading
        ?
        <Spinner isSVG size="md"/>
        : (<TextContent aria-label="Affected systems table title">
            <Text component={TextVariants.h2} id="systems-exposed-table-header">
                {edgeDeviceExist
                    ? intl.formatMessage(messages.totalSystemsWithEdge, { count: totalSystems })
                    : intl.formatMessage(messages.affectsSystems)}
            </Text>
        </TextContent>);
};

export default CVEDetailTableTitle;
