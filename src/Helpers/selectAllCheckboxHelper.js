import unionBy from 'lodash/unionBy';
import messages from '../Messages';
import { intl } from '../Utilities/IntlProvider';

const selectAllCheckbox = ({ selectedItems, selectorHandler, items, rawItems, fetchResource, multiRow = false }) => {
    const selectedItemsArray = Array.from(selectedItems); // we might get array or set and there's no common method for size
    const selectedItemsCount = selectedItemsArray && selectedItemsArray.length;
    const { meta, data } = items;
    const selectPageNumber = data && (((Array.isArray(data) && data.length) && multiRow) ? data.length / 2 : data.length);

    const handleSelectPage = () => {
        if (rawItems) {
            const collectedItems = unionBy(rawItems.payload.data, selectedItemsArray, 'id');
            selectorHandler(true, collectedItems);
        } else {
            const collectedItems = unionBy(data.filter(item => item.id), selectedItemsArray, 'id');
            selectorHandler(true, collectedItems);
        }
    };

    const handleUnselectAll = () => {
        selectorHandler(false, []);
    };

    const handleSelectAll = () => {
        let { payload } = fetchResource && fetchResource({ page_size: meta.total_items, page: 1 });

        payload &&
            payload.then(({ data: response }) => {
                selectorHandler(true, response);
            });
    };

    const handleOnCheckboxChange = () => {
        if (selectedItemsCount === 0) {
            handleSelectAll();
        } else {
            handleUnselectAll();
        }
    };

    return ({
        handleOnCheckboxChange,
        items: [
            {
                title: intl.formatMessage(messages.selectNone),
                onClick: handleUnselectAll
            },
            {
                title: `${intl.formatMessage(messages.selectPage, { count: selectPageNumber })}`,
                onClick: handleSelectPage
            },
            {
                title: `${intl.formatMessage(messages.selectAll, { count: meta.total_items ? meta.total_items : 0 })}`,
                onClick: handleSelectAll
            }
        ]
    }

    );
};

export default selectAllCheckbox;
