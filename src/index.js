import React, { useEffect, Fragment, useState } from 'react';
import { BrowserRouter as Router } from 'react-router-dom';
import SystemCVEs from './Components/SmartComponents/SystemCves/SystemCves';
import { SystemCvesStore } from './Store/Reducers/SystemCvesStore';
import PropTypes from 'prop-types';
import { Provider } from 'react-redux';
import { Bullseye, Spinner } from '@patternfly/react-core';

const WrappedSystemCves = ({ getRegistry, ...props }) => {
    const [Wrapper, setWrapper] = useState();
    useEffect(() => {
        if (getRegistry) {
            getRegistry()?.register?.({ SystemCvesStore });
        }

        setWrapper(() => getRegistry ? Provider : Fragment);
    }, []);
    return <Router>
        {
            Wrapper ? <Wrapper {...getRegistry && { store: getRegistry()?.getStore() }}>
                <SystemCVEs {...props} allowedCveActions={['REMEDIATE']} />
            </Wrapper> : <Bullseye>
                <Spinner size="xl" />
            </Bullseye>
        }
    </Router>;
};

WrappedSystemCves.propTypes = {
    getRegistry: PropTypes.func
};

export { SystemCvesStore };
export default WrappedSystemCves;
